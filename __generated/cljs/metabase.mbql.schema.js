var window=global;var $CLJS=require("./cljs_env.js");require("./cljs.core.js");require("./clojure.set.js");require("./malli.core.js");require("./malli.error.js");require("./metabase.lib.schema.common.js");require("./metabase.lib.schema.expression.temporal.js");require("./metabase.lib.schema.id.js");require("./metabase.lib.schema.literal.js");require("./metabase.mbql.schema.helpers.js");require("./metabase.mbql.schema.macros.js");require("./metabase.shared.util.i18n.js");require("./metabase.util.malli.registry.js");
'use strict';var PK,QK,RK,Wia,Xia,VK,Yia,YK,ZK,$K,aL,Zia,bL,cL,eL,fL,SK,gL,$ia,hL,aja,iL,jL,kL,bja,lL,mL,cja,nL,dja,oL,pL,eja,rL,fja,gja,hja,tL,uL,vL,wL,xL,yL,zL,AL,ija,BL,CL,DL,FL,GL,jja,HL,IL,JL,KL,kja,LL,ML,NL,OL,lja,PL,QL,RL,SL,mja,TL,nja,UL,VL,WL,oja,XL,YL,ZL,$L,bM,cM,pja,dM,eM,qja,fM,gM,hM,iM,jM,rja,kM,sja,lM,mM,oM,tja,pM,qM,rM,uja,uM,vM,vja,wja,wM,yM,zM,AM,xja,DM,EM,yja,zja,Aja,FM,GM,HM,IM,JM,KM,Bja,LM,Cja,MM,NM,PM,RM,SM,TM,UM,Dja,Eja,WM,Fja,Gja,XM,YM,ZM,$M,aN,Hja,bN,Ija,Jja,cN,dN,eN,fN,gN,
Kja,Lja,Mja,hN,Nja,iN,Oja,kN,lN,Pja,nN,oN,pN,qN,Qja,tN,Rja,Sja,uN,vN,wN,Tja,xN,yN,zN,AN,Uja,CN,DN,EN,FN,GN,Vja,HN,IN,Wja,JN,KN,LN,MN,NN,ON,QN,Xja,RN,Yja,SN,TN,UN,Zja,$ja,aka,WN,XN,YN,bka,ZN,$N,aO,bO,cka,dka,dO,eka,fka,eO,fO,gO,hO,iO,gka,jO,kO,lO,mO,hka,nO,oO,pO,qO,sO,ika,tO,uO,jka,vO,wO,xO,kka,yO,lka,AO,mka,BO,CO,DO,EO,FO,GO,HO,nka,oka,pka,IO,qka,JO,KO,rka,ska,LO,MO,NO,tka,OO,uka,PO,vka,wka,QO,xka,yka,zka,TO,UO,Aka,VO,WO,YO,Bka,ZO,Cka,$O,aP,bP,Dka,Eka,cP,dP,eP,fP,Fka,hP,iP,Gka,jP,kP,lP,mP,nP,oP,pP,
qP,Hka,rP,sP,Ika,tP,Jka,uP,vP,wP,Kka,xP,yP,Lka,Mka,zP,AP,BP,Nka,Oka,CP,Pka,Qka,Rka,EP,Ska,GP,Tka,Uka,HP,IP,Vka,Wka,Xka,JP,KP,LP,MP,NP,OP,PP,Yka,QP,RP,Zka,SP,$ka,ala,bla,TP,UP,VP,cla,WP,XP,dla,YP,ela,ZP,fla,gla,aQ,bQ,cQ,dQ,eQ,hla,fQ,gQ,ila,hQ,iQ,jQ,kQ,lQ,mQ,nQ,oQ,jla,pQ,qQ,sQ,tQ,uQ,vQ,wQ,xQ,yQ,zQ,AQ,BQ,kla,CQ,DQ,EQ,FQ,GQ,lla,HQ,IQ,JQ,KQ,mla,MQ,nla,ola,OQ,pla,PQ,qla,QQ,rla,sla,RQ,tla,SQ,UQ,VQ,ula,vla,ZQ,$Q,wla,xla,bR,cR,dR,eR,fR,yla,gR,hR,jR,kR,zla;
$CLJS.OK=function(a){var b=$CLJS.Fn.g(a,null),c=$CLJS.nE(b,$CLJS.Br,function(d){return $CLJS.Km(d,$CLJS.Ef)});return function(){function d(k,l,m){return(l=$CLJS.y(c.j?c.j(k,l,m):c.call(null,k,l,m)))?new $CLJS.h(null,3,[$CLJS.Uk,b,$CLJS.nj,k,$CLJS.Hr,l],null):null}function e(k){return f.j(k,$CLJS.Ef,$CLJS.Ef)}var f=null;f=function(k,l,m){switch(arguments.length){case 1:return e.call(this,k);case 3:return d.call(this,k,l,m)}throw Error("Invalid arity: "+arguments.length);};f.h=e;f.j=d;return f}()};
PK=function(a,b){return $CLJS.yd(a)?$CLJS.J.g(a,b):a};QK=function(a,b,c,d){d=$CLJS.n(d)?d:$CLJS.Nm($CLJS.Fn.g($CLJS.Uk.h(a),null));if($CLJS.n(b)){var e=PK($CLJS.Ds.h(b),c);$CLJS.n(e)?(e=$CLJS.Bp(e,d),a=e.g?e.g(a,d):e.call(null,a,d)):a=null;return $CLJS.n(a)?a:PK($CLJS.ss.h(b),c)}return null};RK=function(a,b){return $CLJS.wd(a)||$CLJS.ll(a)?$CLJS.J.g(a,b):$CLJS.xd(a)?$CLJS.J.g($CLJS.Ff(a),b):null};
Wia=function(a,b){a=$CLJS.O(a);var c=$CLJS.J.g(a,$CLJS.Uk),d=$CLJS.J.g(a,$CLJS.aj);b=$CLJS.O(b);var e=$CLJS.J.j(b,$CLJS.Hr,$CLJS.Sca),f=$CLJS.J.j(b,$CLJS.Nca,!0),k=$CLJS.J.g(b,$CLJS.Es),l=$CLJS.J.j(b,$CLJS.Bs,$CLJS.zs),m=QK(a,$CLJS.Dp.h(c),k,b);if($CLJS.n(m))return m;m=QK(a,$CLJS.Sr.h(c),k,b);if($CLJS.n(m))return m;m=QK(a,e.h?e.h(d):e.call(null,d),k,b);if($CLJS.n(m))return m;m=QK(a,function(){var t=$CLJS.rn.h(c);return e.h?e.h(t):e.call(null,t)}(),k,b);if($CLJS.n(m))return m;m=QK(a,$CLJS.Dp.h(c),
l,b);if($CLJS.n(m))return m;m=QK(a,$CLJS.Sr.h(c),l,b);if($CLJS.n(m))return m;d=QK(a,e.h?e.h(d):e.call(null,d),l,b);if($CLJS.n(d))return d;d=QK(a,function(){var t=$CLJS.rn.h(c);return e.h?e.h(t):e.call(null,t)}(),l,b);if($CLJS.n(d))return d;k=$CLJS.n(f)?QK(a,e.h?e.h($CLJS.xs):e.call(null,$CLJS.xs),k,b):f;return $CLJS.n(k)?k:$CLJS.n(f)?QK(a,e.h?e.h($CLJS.xs):e.call(null,$CLJS.xs),l,b):f};
Xia=function(a,b,c){a=$CLJS.R;var d=$CLJS.gg.g;var e=$CLJS.Rk.h(b);var f=$CLJS.O(b);var k=$CLJS.J.g(f,$CLJS.Uk),l=$CLJS.O(c);f=$CLJS.J.g(l,$CLJS.Es);l=$CLJS.J.j(l,$CLJS.Bs,$CLJS.zs);k=$CLJS.Dp.h(k);f=PK($CLJS.As.h(k),f);f=$CLJS.n(f)?f:PK($CLJS.As.h(k),l);d=d.call($CLJS.gg,e,f);return new $CLJS.Q(null,2,5,a,[d,Wia(b,c)],null)};
$CLJS.TK=function(a){var b=$CLJS.O(a),c=$CLJS.J.g(b,$CLJS.nj);a=$CLJS.J.g(b,$CLJS.Hr);var d=$CLJS.O(null),e=$CLJS.J.j(d,$CLJS.Oca,$CLJS.Li),f=$CLJS.J.j(d,$CLJS.Qca,Xia);return $CLJS.n(a)?$CLJS.fb(function(k,l){var m=f.j?f.j(b,l,d):f.call(null,b,l,d),t=$CLJS.I(m,0,null);m=$CLJS.I(m,1,null);l=$CLJS.T.j(l,$CLJS.Li,m);l=e.h?e.h(l):e.call(null,l);return SK(k,c,t,l)},null,a):null};
VK=function(a,b,c){var d=$CLJS.wz($CLJS.q($CLJS.$C),new $CLJS.Q(null,2,5,$CLJS.R,[a,b],null));if($CLJS.n(d))return d;c=c.o?c.o():c.call(null);$CLJS.Qh.v($CLJS.$C,$CLJS.UK,new $CLJS.Q(null,2,5,$CLJS.R,[a,b],null),c);return c};$CLJS.WK=function(a){return VK($CLJS.Qj,a,function(){return $CLJS.oE.h(a)})};Yia=function(){var a=XK;return VK($CLJS.Br,a,function(){var b=$CLJS.oE.h(a),c=$CLJS.OK(a);return function(d){return $CLJS.n(b.h?b.h(d):b.call(null,d))?null:c.h?c.h(d):c.call(null,d)}})};
YK=function(a){return new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.Uk,$CLJS.oe(a)?new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.W,a],null):a],null)};ZK=function(a){if($CLJS.Ad(a)){var b=$CLJS.I(a,0,null),c=$CLJS.I(a,1,null);switch(b instanceof $CLJS.M?b.S:null){case "optional":return new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.Mq,new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.er,YK(c)],null)],null);case "rest":return new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.Lq,YK(c)],null);default:return YK(a)}}else return YK(a)};
$K=function(a,b){var c=$CLJS.Ad(b);return c?(c=$CLJS.z(b)instanceof $CLJS.M)?$CLJS.vd(a)?(b=$CLJS.z(b),a=$CLJS.hh(a),a.h?a.h(b):a.call(null,b)):$CLJS.E.g(a,$CLJS.z(b)):c:c};
aL=function(a,b){return new $CLJS.Q(null,3,5,$CLJS.R,[$CLJS.mr,new $CLJS.Q(null,3,5,$CLJS.R,[$CLJS.Mi,new $CLJS.h(null,1,[$CLJS.ss,["not a ",$CLJS.p.h(a)," clause"].join("")],null),$CLJS.Xe($K,a)],null),$CLJS.gg.g(new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.Xq,new $CLJS.Q(null,2,5,$CLJS.R,["tag",new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.Nj,a],null)],null)],null),function(){return function e(d){return new $CLJS.pe(null,function(){for(;;){var f=$CLJS.y(d);if(f){if($CLJS.Bd(f)){var k=$CLJS.mc(f),l=$CLJS.D(k),m=$CLJS.se(l);
a:for(var t=0;;)if(t<l){var u=$CLJS.ld(k,t),v=$CLJS.I(u,0,null);u=$CLJS.I(u,1,null);v=new $CLJS.Q(null,2,5,$CLJS.R,[v,ZK(u)],null);m.add(v);t+=1}else{k=!0;break a}return k?$CLJS.ve($CLJS.xe(m),e($CLJS.nc(f))):$CLJS.ve($CLJS.xe(m),null)}k=$CLJS.z(f);m=$CLJS.I(k,0,null);k=$CLJS.I(k,1,null);return $CLJS.ge(new $CLJS.Q(null,2,5,$CLJS.R,[m,ZK(k)],null),e($CLJS.Mc(f)))}return null}},null,null)}($CLJS.Vr(2,2,b))}())],null)};Zia=function(a){return $CLJS.Ad(a)&&$CLJS.z(a)instanceof $CLJS.M?$CLJS.z(a):null};
bL=function(a){return $CLJS.gg.g(new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.lr,new $CLJS.h(null,2,[$CLJS.Ji,Zia,$CLJS.ss,["valid instance of one of these MBQL clauses: ",$CLJS.gs(", ",$CLJS.kf.g($CLJS.z,a))].join("")],null)],null),function(){return function d(c){return new $CLJS.pe(null,function(){for(;;){var e=$CLJS.y(c);if(e){if($CLJS.Bd(e)){var f=$CLJS.mc(e),k=$CLJS.D(f),l=$CLJS.se(k);a:for(var m=0;;)if(m<k){var t=$CLJS.ld(f,m),u=$CLJS.I(t,0,null);t=$CLJS.I(t,1,null);u=new $CLJS.Q(null,2,5,$CLJS.R,[u,
$CLJS.oe(t)?new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.W,t],null):t],null);l.add(u);m+=1}else{f=!0;break a}return f?$CLJS.ve($CLJS.xe(l),d($CLJS.nc(e))):$CLJS.ve($CLJS.xe(l),null)}f=$CLJS.z(e);l=$CLJS.I(f,0,null);f=$CLJS.I(f,1,null);return $CLJS.ge(new $CLJS.Q(null,2,5,$CLJS.R,[l,$CLJS.oe(f)?new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.W,f],null):f],null),d($CLJS.Mc(e)))}return null}},null,null)}(a)}())};
cL=function(a){return new $CLJS.Q(null,3,5,$CLJS.R,[$CLJS.mr,a,new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.W,$CLJS.NK],null)],null)};$CLJS.dL={};eL={};fL={};$CLJS.UK=function UK(a,b,c){var e=$CLJS.y(b);b=$CLJS.z(e);var f=$CLJS.B(e);if(f){e=$CLJS.T.j;var k=$CLJS.J.g(a,b);c=UK.j?UK.j(k,f,c):UK.call(null,k,f,c);a=e.call($CLJS.T,a,b,c)}else a=$CLJS.T.j(a,b,c);return a};
SK=function SK(a,b,c,d){var f=$CLJS.y(c);c=$CLJS.z(f);var k=$CLJS.B(f),l=RK(b,c);f=$CLJS.n(a)?a:$CLJS.xd(b)?$CLJS.Ef:$CLJS.zd(b)?$CLJS.N:$CLJS.kd(b);return $CLJS.n($CLJS.n(c)?$CLJS.ys.h($CLJS.qd(f)):c)?a:$CLJS.n(c)?(b=RK(f,c),d=SK.v?SK.v(b,l,k,d):SK.call(null,b,l,k,d),$CLJS.ql(c)&&$CLJS.xd(f)&&c>$CLJS.D(f)&&(b=$CLJS.ff(c-$CLJS.D(f),null),b=$CLJS.jf.g(f,b),f=null==f||$CLJS.Ed(f)?b:$CLJS.gg.g($CLJS.kd(f),b)),null==f||$CLJS.ll(f)?$CLJS.T.j(f,c,d):$CLJS.wd(f)?$CLJS.de.g(f,d):$CLJS.P.g($CLJS.V,$CLJS.T.j($CLJS.Ff(f),
c,d))):$CLJS.yd(a)?(c=new $CLJS.Q(null,1,5,$CLJS.R,[$CLJS.Pca],null),SK.v?SK.v(f,b,c,d):SK.call(null,f,b,c,d)):$CLJS.n($CLJS.ys.h($CLJS.qd(f)))?$CLJS.de.g(f,d):$CLJS.Ad($CLJS.Ie(f))?f:$CLJS.pd(new $CLJS.Q(null,1,5,$CLJS.R,[d],null),new $CLJS.h(null,1,[$CLJS.ys,!0],null))};gL=new $CLJS.M("metabase.mbql.schema","aggregation","metabase.mbql.schema/aggregation",-662824303);$ia=new $CLJS.r("metabase.mbql.schema","datetime-subtract","metabase.mbql.schema/datetime-subtract",-1242286173,null);
hL=new $CLJS.M("metabase.mbql.schema","ag:var","metabase.mbql.schema/ag:var",-345484364);aja=new $CLJS.r("metabase.mbql.schema","time-interval","metabase.mbql.schema/time-interval",1275783375,null);iL=new $CLJS.M("metabase.mbql.schema","datetime-subtract","metabase.mbql.schema/datetime-subtract",1412149596);jL=new $CLJS.M("metabase.mbql.schema","datetime-add","metabase.mbql.schema/datetime-add",-985876836);kL=new $CLJS.M("metabase.mbql.schema","substring","metabase.mbql.schema/substring",188871083);
bja=new $CLJS.r("metabase.mbql.schema","replace","metabase.mbql.schema/replace",1269362826,null);lL=new $CLJS.M("metabase.mbql.schema","TimeLiteral","metabase.mbql.schema/TimeLiteral",-822346498);mL=new $CLJS.M("metabase.mbql.schema","get-month","metabase.mbql.schema/get-month",549586740);cja=new $CLJS.M(null,"disable-mbql-\x3enative?","disable-mbql-\x3enative?",1103196677);nL=new $CLJS.M("metabase.mbql.schema","StringExpressionArg","metabase.mbql.schema/StringExpressionArg",596241960);
dja=new $CLJS.M(null,"from","from",1815293044);oL=new $CLJS.M("metabase.mbql.schema","and","metabase.mbql.schema/and",-86675456);pL=new $CLJS.r(null,"does-not-contain","does-not-contain",1365584674,null);eja=new $CLJS.M(null,"add-default-userland-constraints?","add-default-userland-constraints?",2039156190);$CLJS.qL=new $CLJS.M(null,"snippet-name","snippet-name",819240328);rL=new $CLJS.M("metabase.mbql.schema","not-empty","metabase.mbql.schema/not-empty",560735368);
fja=new $CLJS.r("metabase.mbql.schema","max","metabase.mbql.schema/max",-1397867614,null);gja=new $CLJS.r("metabase.mbql.schema","get-day","metabase.mbql.schema/get-day",-1600012951,null);$CLJS.sL=new $CLJS.M(null,"aggregation-options","aggregation-options",-1904917550);hja=new $CLJS.r("metabase.mbql.schema","cum-count","metabase.mbql.schema/cum-count",596526831,null);tL=new $CLJS.M("location","zip_code","location/zip_code",1641155222);
uL=new $CLJS.r(null,"ExpressionArg","ExpressionArg",1060743736,null);vL=new $CLJS.r(null,"get-hour","get-hour",-2031721710,null);wL=new $CLJS.M("metabase.mbql.schema","dimension","metabase.mbql.schema/dimension",-140332301);xL=new $CLJS.r(null,"ag:var","ag:var",-1804440286,null);yL=new $CLJS.M("metabase.mbql.schema","IntGreaterThanZeroOrNumericExpression","metabase.mbql.schema/IntGreaterThanZeroOrNumericExpression",1485789132);
zL=new $CLJS.M("metabase.mbql.schema","exp","metabase.mbql.schema/exp",-1188751039);AL=new $CLJS.M("metabase.mbql.schema","time-interval","metabase.mbql.schema/time-interval",-364748152);ija=new $CLJS.M(null,"lon-max","lon-max",1590224717);BL=new $CLJS.M("metabase.mbql.schema","asc","metabase.mbql.schema/asc",-302489464);CL=new $CLJS.r(null,"stddev","stddev",775056588,null);DL=new $CLJS.M("metabase.mbql.schema","lower","metabase.mbql.schema/lower",-1954451840);
$CLJS.EL=new $CLJS.M(null,"snippet","snippet",953581994);FL=new $CLJS.r("metabase.mbql.schema","case","metabase.mbql.schema/case",2100482976,null);GL=new $CLJS.M(null,"string-expression","string-expression",-1395337766);jja=new $CLJS.M(null,"lat-field","lat-field",-830652957);HL=new $CLJS.M("metabase.mbql.schema","now","metabase.mbql.schema/now",-975392912);IL=new $CLJS.M("metabase.mbql.schema","avg","metabase.mbql.schema/avg",1123586863);
JL=new $CLJS.M("metabase.mbql.schema","not","metabase.mbql.schema/not",-1753911131);KL=new $CLJS.M("metabase.mbql.schema","StringExpression","metabase.mbql.schema/StringExpression",-670335423);kja=new $CLJS.r("metabase.mbql.schema","min","metabase.mbql.schema/min",-1534510688,null);LL=new $CLJS.M("location","country","location/country",1666636202);ML=new $CLJS.M("metabase.mbql.schema","trim","metabase.mbql.schema/trim",350521664);
NL=new $CLJS.M("metabase.mbql.schema","Reference","metabase.mbql.schema/Reference",-770092616);OL=new $CLJS.M("metabase.mbql.schema","get-second","metabase.mbql.schema/get-second",-1080110117);lja=new $CLJS.r("metabase.mbql.schema","count-where","metabase.mbql.schema/count-where",-1224231786,null);PL=new $CLJS.M(null,"unary","unary",-989314568);QL=new $CLJS.M("metabase.mbql.schema","rtrim","metabase.mbql.schema/rtrim",297284410);
RL=new $CLJS.M("metabase.mbql.schema","relative-datetime","metabase.mbql.schema/relative-datetime",324961083);SL=new $CLJS.r(null,"ceil","ceil",-184398425,null);mja=new $CLJS.M(null,"lon-min","lon-min",-787291357);TL=new $CLJS.r(null,"NonBlankString","NonBlankString",-719244809,null);nja=new $CLJS.M(null,"match","match",1220059550);UL=new $CLJS.r(null,"count-where","count-where",2025939247,null);VL=new $CLJS.M("metabase.mbql.schema","get-hour","metabase.mbql.schema/get-hour",1844658706);
WL=new $CLJS.M(null,"max-results-bare-rows","max-results-bare-rows",2096475889);oja=new $CLJS.M(null,"embedded-question","embedded-question",-2146473954);XL=new $CLJS.M("metabase.mbql.schema","WidgetType","metabase.mbql.schema/WidgetType",1831406784);YL=new $CLJS.r(null,"sum","sum",1777518341,null);ZL=new $CLJS.M("metabase.mbql.schema","datetime-diff","metabase.mbql.schema/datetime-diff",197727284);$L=new $CLJS.r("metabase.mbql.schema","!\x3d","metabase.mbql.schema/!\x3d",-807630752,null);
$CLJS.aM=new $CLJS.M("date","range","date/range",1647265776);bM=new $CLJS.r(null,"between","between",-1523336493,null);cM=new $CLJS.M(null,"clause-form","clause-form",1820463737);pja=new $CLJS.r("metabase.mbql.schema","log","metabase.mbql.schema/log",-899459908,null);dM=new $CLJS.M("metabase.mbql.schema","Query","metabase.mbql.schema/Query",1321874752);eM=new $CLJS.r(null,"field","field",338095027,null);qja=new $CLJS.M(null,"segment-id","segment-id",1810133590);
fM=new $CLJS.M("metabase.mbql.schema","stddev","metabase.mbql.schema/stddev",94927598);gM=new $CLJS.r(null,"not-null","not-null",313812992,null);hM=new $CLJS.M("metabase.mbql.schema","Joins","metabase.mbql.schema/Joins",1376278278);iM=new $CLJS.M("metabase.mbql.schema","ltrim","metabase.mbql.schema/ltrim",-1587636578);jM=new $CLJS.M("metabase.mbql.schema","\x3c\x3d","metabase.mbql.schema/\x3c\x3d",556298105);rja=new $CLJS.M(null,"template-tag","template-tag",310841038);
kM=new $CLJS.M(null,"invalid","invalid",412869516);sja=new $CLJS.r("metabase.mbql.schema","datetime-diff","metabase.mbql.schema/datetime-diff",1838258811,null);lM=new $CLJS.M("metabase.mbql.schema","absolute-datetime","metabase.mbql.schema/absolute-datetime",1473793750);mM=new $CLJS.r(null,"regex-match-first","regex-match-first",983231809,null);$CLJS.nM=new $CLJS.M(null,"context","context",-830191113);oM=new $CLJS.r(null,"get-year","get-year",704520253,null);
tja=new $CLJS.M(null,"format-rows?","format-rows?",992129486);pM=new $CLJS.M("metabase.mbql.schema","\x3e\x3d","metabase.mbql.schema/\x3e\x3d",336705322);qM=new $CLJS.M("metabase.mbql.schema","temporal-extract","metabase.mbql.schema/temporal-extract",829238608);rM=new $CLJS.M("metabase.mbql.schema","variable","metabase.mbql.schema/variable",672451083);$CLJS.sM=new $CLJS.M(null,"parameters","parameters",-1229919748);uja=new $CLJS.M(null,"json-download","json-download",-971130133);
$CLJS.tM=new $CLJS.M(null,"card","card",-1430355152);uM=new $CLJS.M(null,"string-or-field","string-or-field",-1970678542);vM=new $CLJS.r(null,"!\x3d","!\x3d",-201205829,null);vja=new $CLJS.r("metabase.mbql.schema","ag:var","metabase.mbql.schema/ag:var",1295047163,null);wja=new $CLJS.r("metabase.mbql.schema","ceil","metabase.mbql.schema/ceil",-1404628626,null);wM=new $CLJS.r(null,"expression","expression",1842843403,null);$CLJS.xM=new $CLJS.M("date","month-year","date/month-year",1948031290);
yM=new $CLJS.M("metabase.mbql.schema","BooleanExpression","metabase.mbql.schema/BooleanExpression",-2109835363);zM=new $CLJS.r(null,"ends-with","ends-with",1183740516,null);AM=new $CLJS.M("metabase.mbql.schema","time","metabase.mbql.schema/time",727162193);$CLJS.BM=new $CLJS.M(null,"joins","joins",1033962699);xja=new $CLJS.M(null,"slug","slug",2029314850);$CLJS.CM=new $CLJS.M(null,"source-field","source-field",933829534);DM=new $CLJS.r(null,"Field","Field",430385967,null);
EM=new $CLJS.r(null,"convert-timezone","convert-timezone",1515728526,null);yja=new $CLJS.r("metabase.mbql.schema","absolute-datetime","metabase.mbql.schema/absolute-datetime",-1180642019,null);zja=new $CLJS.M(null,"disable-max-results?","disable-max-results?",857693204);Aja=new $CLJS.M(null,"items","items",1031954938);FM=new $CLJS.M(null,"datetime-expression","datetime-expression",391782195);GM=new $CLJS.M("metabase.mbql.schema","coalesce","metabase.mbql.schema/coalesce",1605865100);
HM=new $CLJS.M(null,"more","more",-2058821800);IM=new $CLJS.M(null,"first-clause","first-clause",-20953491);JM=new $CLJS.M("metabase.mbql.schema","sum-where","metabase.mbql.schema/sum-where",-671453147);KM=new $CLJS.r(null,"OrderComparable","OrderComparable",772072595,null);Bja=new $CLJS.r("metabase.mbql.schema","ends-with","metabase.mbql.schema/ends-with",-2117292579,null);LM=new $CLJS.r(null,"contains","contains",-1977535957,null);
Cja=new $CLJS.r("metabase.mbql.schema","floor","metabase.mbql.schema/floor",422926927,null);MM=new $CLJS.r("metabase.mbql.schema","expression","metabase.mbql.schema/expression",370334320,null);NM=new $CLJS.M("number","\x3d","number/\x3d",-2094581309);$CLJS.OM=new $CLJS.M(null,"widget-type","widget-type",1836256899);PM=new $CLJS.M("metabase.mbql.schema","max","metabase.mbql.schema/max",1256568155);$CLJS.QM=new $CLJS.M(null,"fingerprint","fingerprint",598613022);
RM=new $CLJS.r(null,"is-null","is-null",-356519403,null);SM=new $CLJS.M(null,"other-clauses","other-clauses",1570511021);TM=new $CLJS.M("metabase.mbql.schema","is-null","metabase.mbql.schema/is-null",-1003477115);UM=new $CLJS.M("metabase.mbql.schema","upper","metabase.mbql.schema/upper",-646839893);Dja=new $CLJS.M(null,"map-tiles","map-tiles",1961865797);$CLJS.VM=new $CLJS.M(null,"required","required",1807647006);Eja=new $CLJS.M(null,"embedded-csv-download","embedded-csv-download",1858870014);
WM=new $CLJS.M(null,"unnamed-aggregation","unnamed-aggregation",-93854280);Fja=new $CLJS.M(null,"datetime-x","datetime-x",1519265947);Gja=new $CLJS.M(null,"datetime-y","datetime-y",-1666955771);XM=new $CLJS.r(null,"CaseClauses","CaseClauses",-1749071354,null);YM=new $CLJS.M(null,"date-arithmetics","date-arithmetics",-1832808309);ZM=new $CLJS.M("string","contains","string/contains",1602423827);$M=new $CLJS.M("metabase.mbql.schema","count-where","metabase.mbql.schema/count-where",1430203983);
aN=new $CLJS.M("metabase.mbql.schema","or","metabase.mbql.schema/or",1154080514);Hja=new $CLJS.r("metabase.mbql.schema","metric","metabase.mbql.schema/metric",1030004285,null);bN=new $CLJS.M("string","!\x3d","string/!\x3d",-1083772573);Ija=new $CLJS.r(null,"IntGreaterThanZeroOrNumericExpression","IntGreaterThanZeroOrNumericExpression",2098230228,null);Jja=new $CLJS.r("metabase.mbql.schema","count","metabase.mbql.schema/count",678066683,null);
cN=new $CLJS.M("metabase.mbql.schema","min","metabase.mbql.schema/min",1119925081);dN=new $CLJS.r("metabase.mbql.schema","field","metabase.mbql.schema/field",1566852856,null);eN=new $CLJS.M("metabase.mbql.schema","convert-timezone","metabase.mbql.schema/convert-timezone",-11600894);fN=new $CLJS.M("metabase.mbql.schema","Join","metabase.mbql.schema/Join",-2100258965);gN=new $CLJS.r(null,"share","share",1051097594,null);
Kja=new $CLJS.r("metabase.mbql.schema","distinct","metabase.mbql.schema/distinct",-823840515,null);Lja=new $CLJS.r("metabase.mbql.schema","round","metabase.mbql.schema/round",314817788,null);Mja=new $CLJS.r("metabase.mbql.schema","get-quarter","metabase.mbql.schema/get-quarter",2007639089,null);hN=new $CLJS.M("metabase.mbql.schema","distinct","metabase.mbql.schema/distinct",1830595254);Nja=new $CLJS.M(null,"xlsx-download","xlsx-download",-1622892009);
iN=new $CLJS.M("metabase.mbql.schema","contains","metabase.mbql.schema/contains",-241280695);Oja=new $CLJS.r("metabase.mbql.schema","contains","metabase.mbql.schema/contains",1399250832,null);$CLJS.jN=new $CLJS.M(null,"collection","collection",-683361892);kN=new $CLJS.M("metabase.mbql.schema","is-empty","metabase.mbql.schema/is-empty",45949435);lN=new $CLJS.M("metabase.mbql.schema","median","metabase.mbql.schema/median",414562044);
$CLJS.mN=new $CLJS.M("metadata","dataset-metadata","metadata/dataset-metadata",-728376469);Pja=new $CLJS.r("metabase.mbql.schema","is-empty","metabase.mbql.schema/is-empty",1686480962,null);nN=new $CLJS.M("number","\x3c\x3d","number/\x3c\x3d",-1499316353);oN=new $CLJS.r(null,"metric","metric",2049329604,null);pN=new $CLJS.r(null,"concat","concat",-467652465,null);qN=new $CLJS.M(null,"variable","variable",-281346492);$CLJS.rN=new $CLJS.M("date","quarter-year","date/quarter-year",-1453950150);
Qja=new $CLJS.r(null,"TimeUnit","TimeUnit",1200517789,null);$CLJS.sN=new $CLJS.M("date","relative","date/relative",25987732);tN=new $CLJS.M("location","city","location/city",-1746973325);Rja=new $CLJS.M(null,"public-dashboard","public-dashboard",645968405);Sja=new $CLJS.r("metabase.mbql.schema","desc","metabase.mbql.schema/desc",-2050113424,null);uN=new $CLJS.M("metabase.mbql.schema","get-day","metabase.mbql.schema/get-day",1054422818);vN=new $CLJS.M("number","\x3e\x3d","number/\x3e\x3d",-1670691032);
wN=new $CLJS.M("number","between","number/between",97700581);Tja=new $CLJS.r("metabase.mbql.schema","cum-sum","metabase.mbql.schema/cum-sum",-2078342061,null);xN=new $CLJS.M("metabase.mbql.schema","starts-with","metabase.mbql.schema/starts-with",-576867936);yN=new $CLJS.r(null,"sqrt","sqrt",370479598,null);zN=new $CLJS.M("metabase.mbql.schema","get-minute","metabase.mbql.schema/get-minute",515738880);AN=new $CLJS.M("metabase.mbql.schema","expression","metabase.mbql.schema/expression",-1270197207);
$CLJS.BN=new $CLJS.M(null,"semantic_type","semantic_type",272485089);Uja=new $CLJS.M(null,"metric-id","metric-id",-686486942);CN=new $CLJS.r(null,"*","*",345799209,null);DN=new $CLJS.r(null,"+","+",-740910886,null);EN=new $CLJS.r(null,"-","-",-471816912,null);FN=new $CLJS.r(null,"template-tag","template-tag",1951372565,null);GN=new $CLJS.M(null,"allowed-for","allowed-for",122724334);Vja=new $CLJS.M(null,"question","question",-1411720117);HN=new $CLJS.r(null,"asc","asc",1997386096,null);
IN=new $CLJS.M("metabase.mbql.schema","not-null","metabase.mbql.schema/not-null",-391950078);Wja=new $CLJS.M(null,"pulse-id","pulse-id",1331432237);JN=new $CLJS.M("metabase.mbql.schema","regex-match-first","metabase.mbql.schema/regex-match-first",277590849);KN=new $CLJS.r(null,"\x3c\x3d","\x3c\x3d",1244895369,null);LN=new $CLJS.r(null,"\x3c","\x3c",993667236,null);MN=new $CLJS.r(null,"\x3e","\x3e",1085014381,null);NN=new $CLJS.r(null,"\x3d","\x3d",-1501502141,null);
ON=new $CLJS.M("metabase.mbql.schema","OrderComparable","metabase.mbql.schema/OrderComparable",1970325905);$CLJS.PN=new $CLJS.M(null,"source-metadata","source-metadata",-477816085);QN=new $CLJS.M("string","ends-with","string/ends-with",302681156);Xja=new $CLJS.r("metabase.mbql.schema","get-year","metabase.mbql.schema/get-year",-265030428,null);RN=new $CLJS.r(null,"RelativeDatetimeUnit","RelativeDatetimeUnit",-1157637501,null);Yja=new $CLJS.r(null,"MetricID","MetricID",-2128635641,null);
SN=new $CLJS.r(null,"and","and",668631710,null);TN=new $CLJS.r(null,"\x3e\x3d","\x3e\x3d",1016916022,null);UN=new $CLJS.r(null,"round","round",-645002441,null);Zja=new $CLJS.M(null,"to","to",192099007);$CLJS.VN=new $CLJS.M("date","single","date/single",1554682003);$ja=new $CLJS.M(null,"action-id","action-id",-1727958578);aka=new $CLJS.r("metabase.mbql.schema","not-null","metabase.mbql.schema/not-null",1248581449,null);WN=new $CLJS.r(null,"exp","exp",1378825265,null);
XN=new $CLJS.r(null,"Filter","Filter",-424893332,null);YN=new $CLJS.r(null,"cum-count","cum-count",-323900016,null);bka=new $CLJS.M(null,"dashboard-id","dashboard-id",1965414288);ZN=new $CLJS.M("metabase.mbql.schema","percentile","metabase.mbql.schema/percentile",-1731861963);$N=new $CLJS.M("metabase.mbql.schema","abs","metabase.mbql.schema/abs",152348622);aO=new $CLJS.M("metabase.mbql.schema","desc","metabase.mbql.schema/desc",604322345);
bO=new $CLJS.M(null,"numeric-expression","numeric-expression",-1661337235);$CLJS.cO=new $CLJS.M(null,"source-table","source-table",-225307692);cka=new $CLJS.M(null,"embedded-dashboard","embedded-dashboard",-485078014);dka=new $CLJS.r("metabase.mbql.schema","sqrt","metabase.mbql.schema/sqrt",-824662873,null);dO=new $CLJS.r(null,"floor","floor",-772394748,null);eka=new $CLJS.M(null,"middleware","middleware",1462115504);
fka=new $CLJS.r("metabase.mbql.schema","share","metabase.mbql.schema/share",1977664161,null);eO=new $CLJS.M(null,"requires-features","requires-features",-101116256);fO=new $CLJS.M("metabase.mbql.schema","power","metabase.mbql.schema/power",2136530448);gO=new $CLJS.M(null,"clause-name","clause-name",-996419059);hO=new $CLJS.M("metabase.mbql.schema","get-year","metabase.mbql.schema/get-year",-1905561955);iO=new $CLJS.r(null,"now","now",-9994004,null);
gka=new $CLJS.r("metabase.mbql.schema","datetime-add","metabase.mbql.schema/datetime-add",654654691,null);jO=new $CLJS.r(null,"not","not",1044554643,null);kO=new $CLJS.r(null,"avg","avg",1837937727,null);lO=new $CLJS.r(null,"sum-where","sum-where",-519087341,null);mO=new $CLJS.M(null,"max-results","max-results",-32858165);hka=new $CLJS.r("metabase.mbql.schema","get-second","metabase.mbql.schema/get-second",560421410,null);nO=new $CLJS.r(null,"case","case",-1510733573,null);
oO=new $CLJS.r(null,"distinct","distinct",-148347594,null);pO=new $CLJS.r(null,"get-second","get-second",-425414791,null);qO=new $CLJS.M("metabase.mbql.schema","ends-with","metabase.mbql.schema/ends-with",537143190);$CLJS.rO=new $CLJS.M(null,"join-alias","join-alias",1454206794);sO=new $CLJS.r(null,"is-empty","is-empty",600228619,null);ika=new $CLJS.r("metabase.mbql.schema","segment","metabase.mbql.schema/segment",-512121472,null);
tO=new $CLJS.r(null,"relative-datetime","relative-datetime",-1369266491,null);uO=new $CLJS.M("number","!\x3d","number/!\x3d",-673025509);jka=new $CLJS.M(null,"original","original",-445386197);vO=new $CLJS.M("metabase.mbql.schema","interval","metabase.mbql.schema/interval",-1491935720);wO=new $CLJS.r(null,"abs","abs",1394505050,null);xO=new $CLJS.r(null,"datetime-diff","datetime-diff",-1521323614,null);kka=new $CLJS.r("metabase.mbql.schema","get-hour","metabase.mbql.schema/get-hour",-809777063,null);
yO=new $CLJS.M("metabase.mbql.schema","cum-count","metabase.mbql.schema/cum-count",-1044004696);lka=new $CLJS.r(null,"DatetimeDiffUnit","DatetimeDiffUnit",-1310225671,null);$CLJS.zO=new $CLJS.M(null,"date","date",-1463434462);AO=new $CLJS.M(null,"second-clause","second-clause",-461435645);mka=new $CLJS.r("metabase.mbql.schema","get-day-of-week","metabase.mbql.schema/get-day-of-week",551389774,null);BO=new $CLJS.r(null,"rtrim","rtrim",979195078,null);
CO=new $CLJS.M("metabase.mbql.schema","sqrt","metabase.mbql.schema/sqrt",1829772896);DO=new $CLJS.M("metabase.mbql.schema","get-day-of-week","metabase.mbql.schema/get-day-of-week",-1089141753);EO=new $CLJS.r("metabase.mbql.schema","or","metabase.mbql.schema/or",-1500355255,null);FO=new $CLJS.M("metabase.mbql.schema","Filter","metabase.mbql.schema/Filter",1210108656);GO=new $CLJS.r(null,"CaseOptions","CaseOptions",1989286806,null);HO=new $CLJS.r(null,"or","or",1876275696,null);
nka=new $CLJS.r("metabase.mbql.schema","ltrim","metabase.mbql.schema/ltrim",52894949,null);oka=new $CLJS.M(null,"constraints","constraints",422775616);pka=new $CLJS.r("metabase.mbql.schema","dimension","metabase.mbql.schema/dimension",1500199226,null);IO=new $CLJS.M("metabase.mbql.schema","Field","metabase.mbql.schema/Field",-551724627);qka=new $CLJS.M(null,"csv-download","csv-download",2141432084);JO=new $CLJS.M("metabase.mbql.schema","get-quarter","metabase.mbql.schema/get-quarter",367107562);
KO=new $CLJS.r(null,"datetime-add","datetime-add",1850134938,null);rka=new $CLJS.r("metabase.mbql.schema","percentile","metabase.mbql.schema/percentile",-91330436,null);ska=new $CLJS.r("metabase.mbql.schema","get-month","metabase.mbql.schema/get-month",-2104849029,null);LO=new $CLJS.r("metabase.mbql.schema","\x3e","metabase.mbql.schema/\x3e",-1619862474,null);MO=new $CLJS.r("metabase.mbql.schema","\x3d","metabase.mbql.schema/\x3d",1850085384,null);
NO=new $CLJS.r("metabase.mbql.schema","\x3c","metabase.mbql.schema/\x3c",-1057391587,null);tka=new $CLJS.r("metabase.mbql.schema","/","metabase.mbql.schema//",2004134796,null);OO=new $CLJS.r(null,"get-quarter","get-quarter",-1326657176,null);uka=new $CLJS.r("metabase.mbql.schema","-","metabase.mbql.schema/-",-1440604423,null);PO=new $CLJS.r("metabase.mbql.schema","+","metabase.mbql.schema/+",-1802115711,null);vka=new $CLJS.r("metabase.mbql.schema","*","metabase.mbql.schema/*",1842546528,null);
wka=new $CLJS.r("metabase.mbql.schema","time","metabase.mbql.schema/time",-1927273576,null);QO=new $CLJS.r(null,"temporal-extract","temporal-extract",-872749364,null);xka=new $CLJS.r("metabase.mbql.schema","sum","metabase.mbql.schema/sum",-1589890100,null);yka=new $CLJS.r("metabase.mbql.schema","between","metabase.mbql.schema/between",-302972630,null);zka=new $CLJS.M(null,"display_name","display_name",-1494335013);$CLJS.RO=new $CLJS.M(null,"snippet-id","snippet-id",1987785841);
$CLJS.SO=new $CLJS.M(null,"database","database",1849087575);TO=new $CLJS.r(null,"NumericExpressionArgOrInterval","NumericExpressionArgOrInterval",-151709337,null);UO=new $CLJS.r(null,"get-day-of-week","get-day-of-week",-644295017,null);Aka=new $CLJS.r("metabase.mbql.schema","starts-with","metabase.mbql.schema/starts-with",1063663591,null);VO=new $CLJS.M("metabase.mbql.schema","floor","metabase.mbql.schema/floor",-1217604600);
WO=new $CLJS.M("metabase.mbql.schema","NumericExpressionArgOrInterval","metabase.mbql.schema/NumericExpressionArgOrInterval",-596692841);$CLJS.XO=new $CLJS.M(null,"expressions","expressions",255689909);YO=new $CLJS.M("metabase.mbql.schema","ExpressionArg","metabase.mbql.schema/ExpressionArg",372701340);Bka=new $CLJS.M(null,"ad-hoc","ad-hoc",-2033634036);ZO=new $CLJS.M("metabase.mbql.schema","does-not-contain","metabase.mbql.schema/does-not-contain",912159158);
Cka=new $CLJS.r("metabase.mbql.schema","concat","metabase.mbql.schema/concat",-580718778,null);$O=new $CLJS.M("metabase.mbql.schema","aggregation-options","metabase.mbql.schema/aggregation-options",-936374135);aP=new $CLJS.M("metabase.mbql.schema","log","metabase.mbql.schema/log",1754975861);bP=new $CLJS.r(null,"absolute-datetime","absolute-datetime",1080191062,null);Dka=new $CLJS.r(null,"TimeIntervalOptions","TimeIntervalOptions",1566864026,null);Eka=new $CLJS.M(null,"action","action",-811238024);
cP=new $CLJS.r(null,"get-day","get-day",1768100384,null);dP=new $CLJS.M("metabase.mbql.schema","MBQLQuery","metabase.mbql.schema/MBQLQuery",323823775);eP=new $CLJS.M("metabase.mbql.schema","between","metabase.mbql.schema/between",-1943504157);fP=new $CLJS.r(null,"not-empty","not-empty",2029453590,null);$CLJS.gP=new $CLJS.M(null,"native","native",-613060878);Fka=new $CLJS.r("metabase.mbql.schema","variable","metabase.mbql.schema/variable",-1981984686,null);hP=new $CLJS.M(null,"page","page",849072397);
iP=new $CLJS.r(null,"length","length",-2065447907,null);Gka=new $CLJS.M(null,"dashboard","dashboard",-631747508);jP=new $CLJS.r(null,"get-week","get-week",752472178,null);kP=new $CLJS.r(null,"get-month","get-month",1271156796,null);lP=new $CLJS.r(null,"dimension","dimension",-2111181571,null);mP=new $CLJS.M(null,"boolean-expression","boolean-expression",-394924008);nP=new $CLJS.M("metabase.mbql.schema","length","metabase.mbql.schema/length",1810214269);
oP=new $CLJS.r(null,"StringFilterOptions","StringFilterOptions",-847398229,null);pP=new $CLJS.M("metabase.mbql.schema","segment","metabase.mbql.schema/segment",2142314297);qP=new $CLJS.r("metabase.mbql.schema","not","metabase.mbql.schema/not",-113379604,null);Hka=new $CLJS.r("metabase.mbql.schema","now","metabase.mbql.schema/now",665138615,null);rP=new $CLJS.M("metabase.mbql.schema","case","metabase.mbql.schema/case",459951449);sP=new $CLJS.r(null,"substring","substring",-1513569493,null);
Ika=new $CLJS.r("metabase.mbql.schema","avg","metabase.mbql.schema/avg",-1530848906,null);tP=new $CLJS.M(null,"internal","internal",-854870097);Jka=new $CLJS.r("metabase.mbql.schema","regex-match-first","metabase.mbql.schema/regex-match-first",1918122376,null);uP=new $CLJS.M("metabase.mbql.schema","DateTimeExpressionArg","metabase.mbql.schema/DateTimeExpressionArg",1033762257);vP=new $CLJS.M("metabase.mbql.schema","TemplateTag","metabase.mbql.schema/TemplateTag",-1837740311);
wP=new $CLJS.M("metabase.mbql.schema","EqualityComparable","metabase.mbql.schema/EqualityComparable",-72675242);Kka=new $CLJS.r("metabase.mbql.schema","substring","metabase.mbql.schema/substring",1829402610,null);xP=new $CLJS.M(null,"more-values-or-fields","more-values-or-fields",-886177554);yP=new $CLJS.r(null,"ltrim","ltrim",-1000166486,null);Lka=new $CLJS.r("metabase.mbql.schema","rtrim","metabase.mbql.schema/rtrim",1937815937,null);
Mka=new $CLJS.r("metabase.mbql.schema","length","metabase.mbql.schema/length",-844221500,null);zP=new $CLJS.M("metabase.mbql.schema","DatetimeExpression","metabase.mbql.schema/DatetimeExpression",1214423543);AP=new $CLJS.M("metabase.mbql.schema","template-tag","metabase.mbql.schema/template-tag",1296341515);BP=new $CLJS.r("metabase.mbql.schema","coalesce","metabase.mbql.schema/coalesce",-1048570669,null);
Nka=new $CLJS.r("metabase.mbql.schema","not-empty","metabase.mbql.schema/not-empty",-2093700401,null);Oka=new $CLJS.r("metabase.mbql.schema","lower","metabase.mbql.schema/lower",-313920313,null);CP=new $CLJS.r(null,"desc","desc",-560950005,null);$CLJS.DP=new $CLJS.M(null,"template-tags","template-tags",1853115685);Pka=new $CLJS.M(null,"public-question","public-question",629369976);Qka=new $CLJS.r("metabase.mbql.schema","temporal-extract","metabase.mbql.schema/temporal-extract",-1825197161,null);
Rka=new $CLJS.M(null,"binary","binary",-1802232288);EP=new $CLJS.r(null,"time-interval","time-interval",-1949813754,null);Ska=new $CLJS.M(null,"userland-query?","userland-query?",-123699383);$CLJS.FP=new $CLJS.M(null,"source-query","source-query",198004422);GP=new $CLJS.M("metabase.mbql.schema","inside","metabase.mbql.schema/inside",-1932527842);Tka=new $CLJS.r(null,"SegmentID","SegmentID",-1773652704,null);
Uka=new $CLJS.r("metabase.mbql.schema","get-minute","metabase.mbql.schema/get-minute",-2138696889,null);HP=new $CLJS.M("metabase.mbql.schema","UnnamedAggregation","metabase.mbql.schema/UnnamedAggregation",-196705529);IP=new $CLJS.M("metabase.mbql.schema","share","metabase.mbql.schema/share",337132634);Vka=new $CLJS.M(null,"executed-by","executed-by",-739811161);Wka=new $CLJS.r("metabase.mbql.schema","aggregation","metabase.mbql.schema/aggregation",977707224,null);
Xka=new $CLJS.r("metabase.mbql.schema","median","metabase.mbql.schema/median",2055093571,null);JP=new $CLJS.M(null,"amount","amount",364489504);KP=new $CLJS.r(null,"percentile","percentile",1039342775,null);LP=new $CLJS.M("metabase.mbql.schema","metric","metabase.mbql.schema/metric",-610527242);MP=new $CLJS.r(null,"metabase.mbql.schema","metabase.mbql.schema",-408168902,null);NP=new $CLJS.M("metabase.mbql.schema","ceil","metabase.mbql.schema/ceil",1249807143);
OP=new $CLJS.r(null,"NumericExpressionArg","NumericExpressionArg",-1537445195,null);PP=new $CLJS.r(null,"trim","trim",-1880116002,null);Yka=new $CLJS.r(null,"RawTimeLiteral","RawTimeLiteral",-2137224789,null);QP=new $CLJS.r(null,"coalesce","coalesce",-1999813740,null);RP=new $CLJS.M("metabase.mbql.schema","sum","metabase.mbql.schema/sum",1064545669);Zka=new $CLJS.M("metabase.mbql.schema","DateTimeValue","metabase.mbql.schema/DateTimeValue",1983295553);
SP=new $CLJS.M("string","\x3d","string/\x3d",983744235);$ka=new $CLJS.M(null,"skip-results-metadata?","skip-results-metadata?",251010463);ala=new $CLJS.r("metabase.mbql.schema","asc","metabase.mbql.schema/asc",1338042063,null);bla=new $CLJS.r("metabase.mbql.schema","inside","metabase.mbql.schema/inside",-291996315,null);TP=new $CLJS.r(null,"StringExpressionArg","StringExpressionArg",-1131357258,null);UP=new $CLJS.M(null,"value-or-field","value-or-field",-1387286309);
VP=new $CLJS.r(null,"FieldOrExpressionDef","FieldOrExpressionDef",-788269541,null);cla=new $CLJS.M(null,"lat-min","lat-min",1630784161);WP=new $CLJS.r(null,"ArithmeticDateTimeUnit","ArithmeticDateTimeUnit",-838492507,null);XP=new $CLJS.r(null,"inside","inside",-681932758,null);dla=new $CLJS.r("metabase.mbql.schema","stddev","metabase.mbql.schema/stddev",1735459125,null);YP=new $CLJS.M("metabase.mbql.schema","NumericExpression","metabase.mbql.schema/NumericExpression",1794540739);
ela=new $CLJS.r("metabase.mbql.schema","convert-timezone","metabase.mbql.schema/convert-timezone",1628930633,null);ZP=new $CLJS.r(null,"starts-with","starts-with",2007034536,null);fla=new $CLJS.M(null,"process-viz-settings?","process-viz-settings?",-173592315);gla=new $CLJS.r("metabase.mbql.schema","power","metabase.mbql.schema/power",-517905321,null);$CLJS.$P=new $CLJS.M(null,"card-id","card-id",-1770060179);aQ=new $CLJS.M(null,"variadic","variadic",882626057);
bQ=new $CLJS.r(null,"upper","upper",1886775433,null);cQ=new $CLJS.M(null,"field-or-expression","field-or-expression",-1409494368);dQ=new $CLJS.M("metabase.mbql.schema","Aggregation","metabase.mbql.schema/Aggregation",746170880);eQ=new $CLJS.r(null,"optional","optional",-600484260,null);hla=new $CLJS.r("metabase.mbql.schema","exp","metabase.mbql.schema/exp",451780488,null);fQ=new $CLJS.M("metabase.mbql.schema","FieldOptions","metabase.mbql.schema/FieldOptions",-2115604229);
gQ=new $CLJS.M(null,"sugar","sugar",-73788488);ila=new $CLJS.M(null,"lat-max","lat-max",841568226);hQ=new $CLJS.r(null,"power","power",702679448,null);iQ=new $CLJS.r("metabase.mbql.schema","and","metabase.mbql.schema/and",1553856071,null);jQ=new $CLJS.M("metabase.mbql.schema","replace","metabase.mbql.schema/replace",-371168701);kQ=new $CLJS.M("metabase.mbql.schema","NumericExpressionArg","metabase.mbql.schema/NumericExpressionArg",-1965874261);
lQ=new $CLJS.M("metabase.mbql.schema","Fields","metabase.mbql.schema/Fields",1872461942);mQ=new $CLJS.r(null,"median","median",-2084869638,null);nQ=new $CLJS.M("metabase.mbql.schema","ParameterType","metabase.mbql.schema/ParameterType",1268586893);oQ=new $CLJS.r(null,"cum-sum","cum-sum",-589533420,null);jla=new $CLJS.r("metabase.mbql.schema","trim","metabase.mbql.schema/trim",1991053191,null);pQ=new $CLJS.M(null,"y","y",-1757859776);qQ=new $CLJS.r(null,"aggregation","aggregation",-1056959073,null);
$CLJS.rQ=new $CLJS.M(null,"binning","binning",1709835866);sQ=new $CLJS.r(null,"TimezoneId","TimezoneId",-1406242397,null);tQ=new $CLJS.M("metabase.mbql.schema","\x3e","metabase.mbql.schema/\x3e",1034573295);uQ=new $CLJS.M("metabase.mbql.schema","\x3c","metabase.mbql.schema/\x3c",1597044182);vQ=new $CLJS.M("metabase.mbql.schema","\x3d","metabase.mbql.schema/\x3d",209553857);wQ=new $CLJS.r(null,"Reference","Reference",2024574086,null);xQ=new $CLJS.M(null,"b","b",1482224470);
yQ=new $CLJS.M(null,"a","a",-2123407586);zQ=new $CLJS.M("metabase.mbql.schema","!\x3d","metabase.mbql.schema/!\x3d",1846805017);AQ=new $CLJS.r(null,"replace","replace",853943757,null);BQ=new $CLJS.M("metabase.mbql.schema","cum-sum","metabase.mbql.schema/cum-sum",576093708);kla=new $CLJS.r("metabase.mbql.schema","upper","metabase.mbql.schema/upper",993691634,null);CQ=new $CLJS.M("metabase.mbql.schema","/","metabase.mbql.schema//",363603269);
DQ=new $CLJS.M("metabase.mbql.schema","-","metabase.mbql.schema/-",1213831346);EQ=new $CLJS.M("metabase.mbql.schema","*","metabase.mbql.schema/*",202015001);FQ=new $CLJS.M("metabase.mbql.schema","+","metabase.mbql.schema/+",852320058);GQ=new $CLJS.r(null,"segment","segment",675610331,null);lla=new $CLJS.r("metabase.mbql.schema","get-week","metabase.mbql.schema/get-week",1436319181,null);HQ=new $CLJS.M("metabase.mbql.schema","field","metabase.mbql.schema/field",-73678671);
IQ=new $CLJS.r("metabase.mbql.schema","\x3e\x3d","metabase.mbql.schema/\x3e\x3d",1977236849,null);JQ=new $CLJS.M("metabase.mbql.schema","count","metabase.mbql.schema/count",-962464844);KQ=new $CLJS.M("string","starts-with","string/starts-with",1266861170);mla=new $CLJS.r(null,"TemporalExtractUnit","TemporalExtractUnit",1691102108,null);$CLJS.LQ=new $CLJS.M(null,"order-by","order-by",1527318070);MQ=new $CLJS.M(null,"advanced-math-expressions","advanced-math-expressions",1076581757);
nla=new $CLJS.r("metabase.mbql.schema","is-null","metabase.mbql.schema/is-null",637054412,null);ola=new $CLJS.M("alias","escaped-\x3eoriginal","alias/escaped-\x3eoriginal",-1334024182);$CLJS.NQ=new $CLJS.M(null,"condition","condition",1668437652);OQ=new $CLJS.M("string","does-not-contain","string/does-not-contain",-1536178964);pla=new $CLJS.M(null,"report-timezone","report-timezone",-2053796389);PQ=new $CLJS.r("metabase.mbql.schema","\x3c\x3d","metabase.mbql.schema/\x3c\x3d",-2098137664,null);
qla=new $CLJS.M(null,"card-name","card-name",-2035606807);QQ=new $CLJS.M("metabase.mbql.schema","value","metabase.mbql.schema/value",772933314);rla=new $CLJS.r("metabase.mbql.schema","sum-where","metabase.mbql.schema/sum-where",969078380,null);sla=new $CLJS.r("metabase.mbql.schema","does-not-contain","metabase.mbql.schema/does-not-contain",-1742276611,null);RQ=new $CLJS.r(null,"log","log",45015523,null);tla=new $CLJS.r("metabase.mbql.schema","abs","metabase.mbql.schema/abs",1792880149,null);
SQ=new $CLJS.r(null,"time","time",-1268547887,null);$CLJS.TQ=new $CLJS.M(null,"database_type","database_type",-54700895);UQ=new $CLJS.r(null,"EqualityComparable","EqualityComparable",-2076258858,null);VQ=new $CLJS.r(null,"get-minute","get-minute",-1186349426,null);$CLJS.WQ=new $CLJS.M(null,"clause","clause",1479668060);$CLJS.XQ=new $CLJS.M(null,"expression-name","expression-name",-1798450709);$CLJS.YQ=new $CLJS.M("date","all-options","date/all-options",549325958);
ula=new $CLJS.r("metabase.mbql.schema","relative-datetime","metabase.mbql.schema/relative-datetime",1965492610,null);vla=new $CLJS.M(null,"embedded-json-download","embedded-json-download",-1980927033);ZQ=new $CLJS.M("location","state","location/state",-114378652);$Q=new $CLJS.r(null,"datetime-subtract","datetime-subtract",1915839224,null);wla=new $CLJS.M(null,"aggregation-clause-index","aggregation-clause-index",-1510292261);xla=new $CLJS.M(null,"lon-field","lon-field",517872067);
bR=new $CLJS.M("metabase.mbql.schema","TemporalLiteral","metabase.mbql.schema/TemporalLiteral",-904081026);cR=new $CLJS.r(null,"DateTimeExpressionArg","DateTimeExpressionArg",-1507653823,null);dR=new $CLJS.M(null,"numeric","numeric",-1495594714);eR=new $CLJS.r(null,"variable","variable",1359185035,null);fR=new $CLJS.r(null,"lower","lower",-1534114948,null);yla=new $CLJS.M(null,"embedded-xlsx-download","embedded-xlsx-download",-1105087722);
gR=new $CLJS.M("metabase.mbql.schema","concat","metabase.mbql.schema/concat",2073716991);hR=new $CLJS.M("metabase.mbql.schema","get-week","metabase.mbql.schema/get-week",-204212346);$CLJS.iR=new $CLJS.M(null,"limit","limit",-1355822363);jR=new $CLJS.M("metabase.mbql.schema","round","metabase.mbql.schema/round",-1325713739);kR=new $CLJS.r(null,"ExtractWeekMode","ExtractWeekMode",397218079,null);zla=new $CLJS.M(null,"pulse","pulse",-244494476);var lR=new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.W,$CLJS.sD],null),mR=new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.W,$CLJS.CD],null),nR=new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.W,$CLJS.oD],null),oR=new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.W,$CLJS.kD],null),pR=new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.W,$CLJS.wD],null),qR=new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.W,$CLJS.eK],null),Ala=new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.W,$CLJS.SJ],null),Bla=new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.W,$CLJS.LJ],null),rR=new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.W,
$CLJS.HH],null),sR=new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.W,$CLJS.LH],null),tR=new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.W,$CLJS.CH],null),uR=new $CLJS.ch(null,new $CLJS.h(null,12,[$CLJS.qi,null,$CLJS.Qk,null,$CLJS.cj,null,$CLJS.ei,null,$CLJS.Hk,null,$CLJS.ij,null,$CLJS.Ok,null,$CLJS.Lk,null,$CLJS.li,null,$CLJS.oj,null,$CLJS.ri,null,$CLJS.Gk,null],null),null),vR=new $CLJS.ch(null,new $CLJS.h(null,7,[$CLJS.Pk,null,$CLJS.UF,null,$CLJS.ei,null,$CLJS.Fk,null,$CLJS.XF,null,$CLJS.Kk,null,$CLJS.Ik,null],null),null),
wR=$CLJS.Vs.g(uR,vR),Cla=$CLJS.gg.g(new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.cr,new $CLJS.h(null,1,[$CLJS.ss,"date bucketing unit"],null)],null),uR),Dla=$CLJS.gg.g(new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.cr,new $CLJS.h(null,1,[$CLJS.ss,"time bucketing unit"],null)],null),vR),xR=$CLJS.gg.g(new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.cr,new $CLJS.h(null,1,[$CLJS.ss,"datetime bucketing unit"],null)],null),wR),yR=new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.W,$CLJS.gI],null),Ela=new $CLJS.Q(null,13,5,$CLJS.R,[$CLJS.cr,new $CLJS.h(null,
1,[$CLJS.ss,"temporal extract unit"],null),$CLJS.YF,$CLJS.Gk,$CLJS.Ok,$CLJS.XH,$CLJS.kI,$CLJS.lI,$CLJS.Lk,$CLJS.Hk,$CLJS.Fk,$CLJS.Kk,$CLJS.VF],null),Fla=new $CLJS.Q(null,10,5,$CLJS.R,[$CLJS.cr,new $CLJS.h(null,1,[$CLJS.ss,"datetime-diff unit"],null),$CLJS.UF,$CLJS.Ik,$CLJS.Pk,$CLJS.Qk,$CLJS.cj,$CLJS.ij,$CLJS.qi,$CLJS.li],null),zR=new $CLJS.Q(null,5,5,$CLJS.R,[$CLJS.cr,new $CLJS.h(null,1,[$CLJS.ss,"temporal-extract week extraction mode"],null),$CLJS.RH,$CLJS.YH,$CLJS.bI],null),AR=new $CLJS.Q(null,
10,5,$CLJS.R,[$CLJS.cr,new $CLJS.h(null,1,[$CLJS.ss,"relative-datetime unit"],null),$CLJS.ei,$CLJS.Ik,$CLJS.Pk,$CLJS.Qk,$CLJS.cj,$CLJS.ij,$CLJS.qi,$CLJS.li],null),HR,Hla,PR,QR,RR,SR,TR,UR,VR,HT,Jla,IT,Kla,Lla,JT,Mla,Nla,Ola;$CLJS.Y(RL,aL($CLJS.VA,$CLJS.H(["n",new $CLJS.Q(null,3,5,$CLJS.R,[$CLJS.fr,new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.Nj,$CLJS.Ou],null),$CLJS.rr],null),"unit",new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.Ar,AR],null)])));var BR=new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.W,RL],null);
$CLJS.Y(vO,aL($CLJS.UA,$CLJS.H(["n",$CLJS.rr,"unit",AR])));var Gla=new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.W,vO],null);
$CLJS.Y(lM,new $CLJS.Q(null,5,5,$CLJS.R,[$CLJS.lr,new $CLJS.h(null,2,[$CLJS.ss,"valid :absolute-datetime clause",$CLJS.Ji,function(a){if($CLJS.Wa($K($CLJS.VH,a)))a=kM;else{a=$CLJS.id(a);var b=$CLJS.WK(rR);a=b.h?b.h(a):b.call(null,a);a=$CLJS.n(a)?$CLJS.zO:$CLJS.ZH}return a}],null),new $CLJS.Q(null,2,5,$CLJS.R,[kM,new $CLJS.Q(null,3,5,$CLJS.R,[$CLJS.Mi,new $CLJS.h(null,1,[$CLJS.ss,"not an :absolute-datetime clause"],null),$CLJS.We(!1)],null)],null),new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.zO,aL($CLJS.VH,
$CLJS.H(["date",rR,"unit",Cla]))],null),new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.ZH,aL($CLJS.VH,$CLJS.H(["datetime",sR,"unit",xR]))],null)],null));var CR=new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.W,lM],null);$CLJS.Y(AM,aL($CLJS.Ax,$CLJS.H(["time",tR,"unit",Dla])));var DR=new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.W,AM],null),ER=new $CLJS.Q(null,5,5,$CLJS.R,[$CLJS.fr,new $CLJS.h(null,1,[$CLJS.ss,"date or datetime literal"],null),CR,sR,rR],null);
$CLJS.Y(lL,new $CLJS.Q(null,4,5,$CLJS.R,[$CLJS.fr,new $CLJS.h(null,1,[$CLJS.ss,"time literal"],null),DR,tR],null));$CLJS.Y(bR,new $CLJS.Q(null,4,5,$CLJS.R,[$CLJS.fr,new $CLJS.h(null,1,[$CLJS.ss,"temporal literal"],null),ER,new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.W,lL],null)],null));var FR=new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.W,bR],null);
$CLJS.Y(Zka,bL($CLJS.H([new $CLJS.Q(null,2,5,$CLJS.R,[function(){var a=gO.h($CLJS.qd("undefined"!==typeof $CLJS.dL&&"undefined"!==typeof eL&&"undefined"!==typeof fL&&"undefined"!==typeof CR?new $CLJS.Hc(function(){return CR},$CLJS.pd(yja,new $CLJS.h(null,1,[$CLJS.Cj,!0],null)),$CLJS.Kg([$CLJS.Pi,$CLJS.U,$CLJS.Lj,$CLJS.vi,gO,$CLJS.Ni,tP,$CLJS.bj,$CLJS.Rj,$CLJS.ui,$CLJS.Ij,$CLJS.Kj],[$CLJS.pd(MP,new $CLJS.h(null,1,[$CLJS.Ij,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],
null)),bP,"metabase/mbql/schema.cljc",69,$CLJS.VH,1,!0,168,168,$CLJS.Lc,"Schema for an `:absolute-datetime` clause.",$CLJS.n(CR)?CR.H:null])):null));return $CLJS.n(a)?a:bP}(),CR],null),new $CLJS.Q(null,2,5,$CLJS.R,[function(){var a=gO.h($CLJS.qd("undefined"!==typeof $CLJS.dL&&"undefined"!==typeof eL&&"undefined"!==typeof fL&&"undefined"!==typeof BR?new $CLJS.Hc(function(){return BR},$CLJS.pd(ula,new $CLJS.h(null,1,[$CLJS.Cj,!0],null)),$CLJS.Kg([$CLJS.Pi,$CLJS.U,$CLJS.Lj,$CLJS.vi,gO,$CLJS.Ni,$CLJS.bj,
$CLJS.Rj,cM,$CLJS.ui,$CLJS.Ij,$CLJS.Kj],[$CLJS.pd(MP,new $CLJS.h(null,1,[$CLJS.Ij,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),tO,"metabase/mbql/schema.cljc",29,$CLJS.VA,1,131,131,new $CLJS.Q(null,5,5,$CLJS.R,[$CLJS.VA,$CLJS.Mj,$CLJS.V($CLJS.vj,new $CLJS.Q(null,3,5,$CLJS.R,[$CLJS.fr,new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.Nj,$CLJS.Ou],null),$CLJS.rr],null)),$CLJS.Ek,$CLJS.V($CLJS.vj,$CLJS.V(eQ,RN))],null),$CLJS.Lc,"Schema for a valid relative-datetime clause.",
$CLJS.n(BR)?BR.H:null])):null));return $CLJS.n(a)?a:tO}(),BR],null),new $CLJS.Q(null,2,5,$CLJS.R,[function(){var a=gO.h($CLJS.qd("undefined"!==typeof $CLJS.dL&&"undefined"!==typeof eL&&"undefined"!==typeof fL&&"undefined"!==typeof DR?new $CLJS.Hc(function(){return DR},$CLJS.pd(wka,new $CLJS.h(null,1,[$CLJS.Cj,!0],null)),$CLJS.Kg([$CLJS.Pi,$CLJS.U,$CLJS.Lj,$CLJS.vi,gO,$CLJS.Ni,tP,$CLJS.bj,$CLJS.Rj,cM,$CLJS.ui,$CLJS.Ij,$CLJS.Kj],[$CLJS.pd(MP,new $CLJS.h(null,1,[$CLJS.Ij,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],
null)),SQ,"metabase/mbql/schema.cljc",27,$CLJS.Ax,1,!0,175,175,new $CLJS.Q(null,5,5,$CLJS.R,[$CLJS.Ax,$CLJS.Ax,$CLJS.V($CLJS.vj,Yka),$CLJS.Ek,$CLJS.V($CLJS.vj,Qja)],null),$CLJS.Lc,"Schema for a valid time clause.",$CLJS.n(DR)?DR.H:null])):null));return $CLJS.n(a)?a:SQ}(),DR],null)])));
$CLJS.Y(QQ,aL($CLJS.nj,$CLJS.H(["value",$CLJS.wr,"type-info",new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.er,new $CLJS.Q(null,6,5,$CLJS.R,[$CLJS.Gj,new $CLJS.Q(null,3,5,$CLJS.R,[$CLJS.TQ,new $CLJS.h(null,1,[$CLJS.Ar,!0],null),new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.er,lR],null)],null),new $CLJS.Q(null,3,5,$CLJS.R,[$CLJS.bC,new $CLJS.h(null,1,[$CLJS.Ar,!0],null),new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.er,mR],null)],null),new $CLJS.Q(null,3,5,$CLJS.R,[$CLJS.BN,new $CLJS.h(null,1,[$CLJS.Ar,!0],null),new $CLJS.Q(null,
2,5,$CLJS.R,[$CLJS.er,nR],null)],null),new $CLJS.Q(null,3,5,$CLJS.R,[$CLJS.Ek,new $CLJS.h(null,1,[$CLJS.Ar,!0],null),new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.er,xR],null)],null),new $CLJS.Q(null,3,5,$CLJS.R,[$CLJS.U,new $CLJS.h(null,1,[$CLJS.Ar,!0],null),new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.er,lR],null)],null)],null)],null)])));var GR=new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.W,QQ],null);$CLJS.Y(AN,aL($CLJS.kA,$CLJS.H(["expression-name",lR,"options",new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.Ar,$CLJS.Gj],null)])));
HR=new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.W,AN],null);
Hla=function(a){return new $CLJS.Q(null,3,5,$CLJS.R,[$CLJS.mr,a,new $CLJS.Q(null,3,5,$CLJS.R,[$CLJS.Mi,new $CLJS.h(null,1,[$CLJS.ss,"You must specify :num-bins when using the :num-bins strategy."],null),function(b){var c=$CLJS.O(b);b=$CLJS.J.g(c,$CLJS.ED);c=$CLJS.J.g(c,$CLJS.lD);return $CLJS.E.g(b,$CLJS.lD)?c:!0}],null)],null)}(function(a){return new $CLJS.Q(null,3,5,$CLJS.R,[$CLJS.mr,a,new $CLJS.Q(null,3,5,$CLJS.R,[$CLJS.Mi,new $CLJS.h(null,1,[$CLJS.ss,"You must specify :bin-width when using the :bin-width strategy."],
null),function(b){var c=$CLJS.O(b);b=$CLJS.J.g(c,$CLJS.ED);c=$CLJS.J.g(c,$CLJS.DD);return $CLJS.E.g(b,$CLJS.DD)?c:!0}],null)],null)}(new $CLJS.Q(null,5,5,$CLJS.R,[$CLJS.Gj,new $CLJS.h(null,1,[$CLJS.ss,"binning options"],null),new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.ED,new $CLJS.Q(null,5,5,$CLJS.R,[$CLJS.cr,new $CLJS.h(null,1,[$CLJS.ss,"binning strategy"],null),$CLJS.lD,$CLJS.DD,$CLJS.ei],null)],null),new $CLJS.Q(null,3,5,$CLJS.R,[$CLJS.lD,new $CLJS.h(null,1,[$CLJS.Ar,!0],null),oR],null),new $CLJS.Q(null,
3,5,$CLJS.R,[$CLJS.DD,new $CLJS.h(null,1,[$CLJS.Ar,!0],null),new $CLJS.Q(null,3,5,$CLJS.R,[$CLJS.mr,$CLJS.dl,new $CLJS.Q(null,3,5,$CLJS.R,[$CLJS.Mi,new $CLJS.h(null,1,[$CLJS.ss,"bin width must be \x3e\x3d 0."],null),$CLJS.Ve($CLJS.yl)],null)],null)],null)],null)));$CLJS.IR=function IR(a){switch(arguments.length){case 1:return IR.h(arguments[0]);case 2:return IR.g(arguments[0],arguments[1]);default:throw Error(["Invalid arity: ",$CLJS.p.h(arguments.length)].join(""));}};
$CLJS.IR.h=function(a){var b=$CLJS.O(a);a=$CLJS.J.g(b,$CLJS.nA);b=$CLJS.J.g(b,$CLJS.rF);return $CLJS.IR.g(a,b)};$CLJS.IR.g=function(a,b){a=$CLJS.n($CLJS.n(b)?a:b)?$CLJS.nB(a,$CLJS.OB)?uR:$CLJS.nB(a,$CLJS.OC)?vR:$CLJS.nB(a,$CLJS.oC)?wR:null:null;return $CLJS.n(a)?$CLJS.Jd(a,b):!0};$CLJS.IR.A=2;
$CLJS.Y(fQ,new $CLJS.Q(null,3,5,$CLJS.R,[$CLJS.mr,new $CLJS.Q(null,3,5,$CLJS.R,[$CLJS.mr,new $CLJS.Q(null,7,5,$CLJS.R,[$CLJS.Gj,new $CLJS.h(null,1,[$CLJS.ss,"field options"],null),new $CLJS.Q(null,3,5,$CLJS.R,[$CLJS.nA,new $CLJS.h(null,1,[$CLJS.Ar,!0],null),new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.er,mR],null)],null),new $CLJS.Q(null,3,5,$CLJS.R,[$CLJS.CM,new $CLJS.h(null,1,[$CLJS.Ar,!0],null),new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.er,qR],null)],null),new $CLJS.Q(null,3,5,$CLJS.R,[$CLJS.rF,new $CLJS.h(null,
1,[$CLJS.Ar,!0],null),new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.er,xR],null)],null),new $CLJS.Q(null,3,5,$CLJS.R,[$CLJS.rO,new $CLJS.h(null,1,[$CLJS.Ar,!0],null),new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.er,lR],null)],null),new $CLJS.Q(null,3,5,$CLJS.R,[$CLJS.rQ,new $CLJS.h(null,1,[$CLJS.Ar,!0],null),new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.er,Hla],null)],null)],null),new $CLJS.Q(null,3,5,$CLJS.R,[$CLJS.Mi,new $CLJS.h(null,1,[$CLJS.ss,"Invalid :temporal-unit for the specified :base-type."],null),$CLJS.IR],null)],
null),new $CLJS.Q(null,3,5,$CLJS.R,[$CLJS.Mi,new $CLJS.h(null,1,[$CLJS.ss,"Found :binning keys at the top level of :field options. binning-related options belong under the :binning key."],null),$CLJS.Ve($CLJS.ED)],null)],null));
$CLJS.Y(HQ,function(a){return new $CLJS.Q(null,3,5,$CLJS.R,[$CLJS.mr,a,new $CLJS.Q(null,3,5,$CLJS.R,[$CLJS.Mi,new $CLJS.h(null,1,[$CLJS.ss,":field clauses using a string field name must specify :base-type."],null),function(b){$CLJS.I(b,0,null);var c=$CLJS.I(b,1,null);b=$CLJS.I(b,2,null);b=$CLJS.O(b);b=$CLJS.J.g(b,$CLJS.nA);return"string"===typeof c?b:!0}],null)],null)}(aL($CLJS.lF,$CLJS.H(["id-or-name",new $CLJS.Q(null,3,5,$CLJS.R,[$CLJS.fr,qR,lR],null),"options",new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.er,
new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.W,fQ],null)],null)]))));var JR=new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.W,HQ],null);
$CLJS.Y(IO,bL($CLJS.H([new $CLJS.Q(null,2,5,$CLJS.R,[function(){var a=gO.h($CLJS.qd("undefined"!==typeof $CLJS.dL&&"undefined"!==typeof eL&&"undefined"!==typeof fL&&"undefined"!==typeof HR?new $CLJS.Hc(function(){return HR},$CLJS.pd(MM,new $CLJS.h(null,1,[$CLJS.Cj,!0],null)),$CLJS.Kg([eO,$CLJS.Pi,$CLJS.U,$CLJS.Lj,$CLJS.vi,gO,$CLJS.Ni,$CLJS.bj,$CLJS.Rj,cM,$CLJS.ui,$CLJS.Ij,$CLJS.Kj],[new $CLJS.ch(null,new $CLJS.h(null,1,[$CLJS.XO,"null"],null),null),$CLJS.pd(MP,new $CLJS.h(null,1,[$CLJS.Ij,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],
null)),wM,"metabase/mbql/schema.cljc",60,$CLJS.kA,1,249,249,new $CLJS.Q(null,5,5,$CLJS.R,[$CLJS.kA,$CLJS.XQ,$CLJS.V($CLJS.vj,TL),$CLJS.Yi,$CLJS.V($CLJS.vj,$CLJS.V(eQ,$CLJS.Gj))],null),$CLJS.Lc,"Schema for a valid expression clause.",$CLJS.n(HR)?HR.H:null])):null));return $CLJS.n(a)?a:wM}(),HR],null),new $CLJS.Q(null,2,5,$CLJS.R,[function(){var a=gO.h($CLJS.qd("undefined"!==typeof $CLJS.dL&&"undefined"!==typeof eL&&"undefined"!==typeof fL&&"undefined"!==typeof JR?new $CLJS.Hc(function(){return JR},
$CLJS.pd(dN,new $CLJS.h(null,1,[$CLJS.Cj,!0],null)),$CLJS.Kg([$CLJS.eq,$CLJS.Pi,$CLJS.U,$CLJS.Lj,$CLJS.vi,gO,$CLJS.Ni,$CLJS.bj,$CLJS.Rj,$CLJS.ui,$CLJS.Ij,$CLJS.Kj],["0.39.0",$CLJS.pd(MP,new $CLJS.h(null,1,[$CLJS.Ij,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),eM,"metabase/mbql/schema.cljc",51,$CLJS.lF,1,382,382,$CLJS.Lc,"Schema for a `:field` clause.",$CLJS.n(JR)?JR.H:null])):null));return $CLJS.n(a)?a:eM}(),JR],null)])));
$CLJS.KR=new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.W,IO],null);$CLJS.Y(gL,aL($CLJS.aF,$CLJS.H(["aggregation-clause-index",$CLJS.rr,"options",new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.Ar,$CLJS.Gj],null)])));var LR=new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.W,gL],null);
$CLJS.Y(NL,bL($CLJS.H([new $CLJS.Q(null,2,5,$CLJS.R,[function(){var a=gO.h($CLJS.qd("undefined"!==typeof $CLJS.dL&&"undefined"!==typeof eL&&"undefined"!==typeof fL&&"undefined"!==typeof LR?new $CLJS.Hc(function(){return LR},$CLJS.pd(Wka,new $CLJS.h(null,1,[$CLJS.Cj,!0],null)),$CLJS.Kg([$CLJS.Pi,$CLJS.U,$CLJS.Lj,$CLJS.vi,gO,$CLJS.Ni,$CLJS.bj,$CLJS.Rj,cM,$CLJS.ui,$CLJS.Ij,$CLJS.Kj],[$CLJS.pd(MP,new $CLJS.h(null,1,[$CLJS.Ij,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],
null)),qQ,"metabase/mbql/schema.cljc",23,$CLJS.aF,1,418,418,new $CLJS.Q(null,5,5,$CLJS.R,[$CLJS.aF,wla,$CLJS.V($CLJS.vj,$CLJS.rr),$CLJS.Yi,$CLJS.V($CLJS.vj,$CLJS.V(eQ,$CLJS.Gj))],null),$CLJS.Lc,"Schema for a valid aggregation clause.",$CLJS.n(LR)?LR.H:null])):null));return $CLJS.n(a)?a:qQ}(),LR],null),new $CLJS.Q(null,2,5,$CLJS.R,[function(){var a=gO.h($CLJS.qd("undefined"!==typeof $CLJS.dL&&"undefined"!==typeof eL&&"undefined"!==typeof fL&&"undefined"!==typeof HR?new $CLJS.Hc(function(){return HR},
$CLJS.pd(MM,new $CLJS.h(null,1,[$CLJS.Cj,!0],null)),$CLJS.Kg([eO,$CLJS.Pi,$CLJS.U,$CLJS.Lj,$CLJS.vi,gO,$CLJS.Ni,$CLJS.bj,$CLJS.Rj,cM,$CLJS.ui,$CLJS.Ij,$CLJS.Kj],[new $CLJS.ch(null,new $CLJS.h(null,1,[$CLJS.XO,"null"],null),null),$CLJS.pd(MP,new $CLJS.h(null,1,[$CLJS.Ij,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),wM,"metabase/mbql/schema.cljc",60,$CLJS.kA,1,249,249,new $CLJS.Q(null,5,5,$CLJS.R,[$CLJS.kA,$CLJS.XQ,$CLJS.V($CLJS.vj,TL),
$CLJS.Yi,$CLJS.V($CLJS.vj,$CLJS.V(eQ,$CLJS.Gj))],null),$CLJS.Lc,"Schema for a valid expression clause.",$CLJS.n(HR)?HR.H:null])):null));return $CLJS.n(a)?a:wM}(),HR],null),new $CLJS.Q(null,2,5,$CLJS.R,[function(){var a=gO.h($CLJS.qd("undefined"!==typeof $CLJS.dL&&"undefined"!==typeof eL&&"undefined"!==typeof fL&&"undefined"!==typeof JR?new $CLJS.Hc(function(){return JR},$CLJS.pd(dN,new $CLJS.h(null,1,[$CLJS.Cj,!0],null)),$CLJS.Kg([$CLJS.eq,$CLJS.Pi,$CLJS.U,$CLJS.Lj,$CLJS.vi,gO,$CLJS.Ni,$CLJS.bj,$CLJS.Rj,
$CLJS.ui,$CLJS.Ij,$CLJS.Kj],["0.39.0",$CLJS.pd(MP,new $CLJS.h(null,1,[$CLJS.Ij,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),eM,"metabase/mbql/schema.cljc",51,$CLJS.lF,1,382,382,$CLJS.Lc,"Schema for a `:field` clause.",$CLJS.n(JR)?JR.H:null])):null));return $CLJS.n(a)?a:eM}(),JR],null)])));
var MR=new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.W,NL],null),NR=new $CLJS.ch(null,new $CLJS.h(null,11,[$CLJS.is,null,$CLJS.CF,null,$CLJS.DE,null,$CLJS.IF,null,$CLJS.KE,null,$CLJS.oF,null,$CLJS.UE,null,$CLJS.os,null,$CLJS.AF,null,$CLJS.nF,null,$CLJS.JF,null],null),null),OR=new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.W,KL],null);
$CLJS.Y(nL,new $CLJS.Q(null,6,5,$CLJS.R,[$CLJS.lr,new $CLJS.h(null,1,[$CLJS.Ji,function(a){return"string"===typeof a?$CLJS.Bj:$CLJS.n($K(NR,a))?GL:$CLJS.n($K($CLJS.nj,a))?$CLJS.nj:$CLJS.ks}],null),new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.Bj,$CLJS.Bj],null),new $CLJS.Q(null,2,5,$CLJS.R,[GL,OR],null),new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.nj,GR],null),new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.ks,$CLJS.KR],null)],null));PR=new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.W,nL],null);
QR=new $CLJS.ch(null,new $CLJS.h(null,26,[$CLJS.GE,null,$CLJS.jI,null,$CLJS.Lq,null,$CLJS.YA,null,$CLJS.eI,null,$CLJS.ZE,null,$CLJS.Yr,null,$CLJS.CE,null,$CLJS.hI,null,$CLJS.WA,null,$CLJS.oF,null,$CLJS.FF,null,$CLJS.fI,null,$CLJS.qF,null,$CLJS.IE,null,$CLJS.TH,null,$CLJS.Kq,null,$CLJS.LE,null,$CLJS.UE,null,$CLJS.NH,null,$CLJS.Kw,null,$CLJS.UH,null,$CLJS.cI,null,$CLJS.TA,null,$CLJS.HF,null,$CLJS.jF,null],null),null);
RR=new $CLJS.ch(null,new $CLJS.h(null,9,[$CLJS.Iq,null,$CLJS.Cq,null,$CLJS.fr,null,$CLJS.hr,null,$CLJS.Eq,null,$CLJS.BF,null,$CLJS.mr,null,$CLJS.Nj,null,$CLJS.Gq,null],null),null);SR=new $CLJS.ch(null,new $CLJS.h(null,17,[$CLJS.ln,null,$CLJS.zF,null,$CLJS.uF,null,$CLJS.mF,null,$CLJS.EF,null,$CLJS.GF,null,$CLJS.QE,null,$CLJS.XE,null,$CLJS.sL,null,$CLJS.RE,null,$CLJS.yF,null,$CLJS.sF,null,$CLJS.Hj,null,$CLJS.Mw,null,$CLJS.fF,null,$CLJS.gF,null,$CLJS.xF,null],null),null);
TR=new $CLJS.ch(null,new $CLJS.h(null,5,[$CLJS.$H,null,$CLJS.PH,null,$CLJS.$A,null,$CLJS.Kq,null,$CLJS.XA,null],null),null);UR=new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.W,YP],null);VR=new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.W,yM],null);$CLJS.WR=new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.W,zP],null);$CLJS.YR=new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.W,dQ],null);
$CLJS.Y(kQ,new $CLJS.Q(null,7,5,$CLJS.R,[$CLJS.lr,new $CLJS.h(null,2,[$CLJS.ss,"numeric expression argument",$CLJS.Ji,function(a){return"number"===typeof a?$CLJS.Os:$CLJS.n($K(QR,a))?bO:$CLJS.n($K(SR,a))?$CLJS.aF:$CLJS.n($K($CLJS.nj,a))?$CLJS.nj:$CLJS.lF}],null),new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.Os,$CLJS.dl],null),new $CLJS.Q(null,2,5,$CLJS.R,[bO,UR],null),new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.aF,$CLJS.YR],null),new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.nj,GR],null),new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.lF,
$CLJS.KR],null)],null));var ZR=new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.W,kQ],null);
$CLJS.Y(uP,new $CLJS.Q(null,6,5,$CLJS.R,[$CLJS.lr,new $CLJS.h(null,2,[$CLJS.ss,"datetime expression argument",$CLJS.Ji,function(a){return $CLJS.n($K(SR,a))?$CLJS.aF:$CLJS.n($K($CLJS.nj,a))?$CLJS.nj:$CLJS.n($K(TR,a))?FM:$CLJS.ks}],null),new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.aF,$CLJS.YR],null),new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.nj,GR],null),new $CLJS.Q(null,2,5,$CLJS.R,[FM,$CLJS.WR],null),new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.ks,new $CLJS.Q(null,3,5,$CLJS.R,[$CLJS.fr,ER,$CLJS.KR],null)],null)],null));
var $R=new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.W,uP],null);
$CLJS.Y(YO,new $CLJS.Q(null,11,5,$CLJS.R,[$CLJS.lr,new $CLJS.h(null,2,[$CLJS.ss,"expression argument",$CLJS.Ji,function(a){return"number"===typeof a?$CLJS.Os:$CLJS.Dd(a)?$CLJS.vr:$CLJS.n($K(RR,a))?mP:$CLJS.n($K(QR,a))?bO:$CLJS.n($K(TR,a))?FM:"string"===typeof a?$CLJS.Bj:$CLJS.n($K(NR,a))?GL:$CLJS.n($K($CLJS.nj,a))?$CLJS.nj:$CLJS.ks}],null),new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.Os,$CLJS.dl],null),new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.vr,$CLJS.vr],null),new $CLJS.Q(null,2,5,$CLJS.R,[mP,VR],null),new $CLJS.Q(null,
2,5,$CLJS.R,[bO,UR],null),new $CLJS.Q(null,2,5,$CLJS.R,[FM,$CLJS.WR],null),new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.Bj,$CLJS.Bj],null),new $CLJS.Q(null,2,5,$CLJS.R,[GL,OR],null),new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.nj,GR],null),new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.ks,$CLJS.KR],null)],null));var aS=new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.W,YO],null);$CLJS.Y(WO,new $CLJS.Q(null,4,5,$CLJS.R,[$CLJS.fr,new $CLJS.h(null,1,[$CLJS.ss,"numeric expression arg or interval"],null),Gla,ZR],null));
var bS=new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.W,WO],null);$CLJS.Y(yL,new $CLJS.Q(null,4,5,$CLJS.R,[$CLJS.lr,new $CLJS.h(null,2,[$CLJS.ss,"int greater than zero or numeric expression",$CLJS.Ji,function(a){return"number"===typeof a?$CLJS.Os:$CLJS.ks}],null),new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.Os,oR],null),new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.ks,UR],null)],null));var Ila=new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.W,yL],null);
$CLJS.Y(GM,aL($CLJS.oF,$CLJS.H(["a",aS,"b",aS,"more",new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.Ki,aS],null)])));var cS=new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.W,GM],null);$CLJS.Y(kL,aL($CLJS.DE,$CLJS.H(["s",PR,"start",Ila,"length",new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.Ar,ZR],null)])));var dS=new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.W,kL],null);$CLJS.Y(nP,aL($CLJS.Kw,$CLJS.H(["s",PR])));var eS=new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.W,nP],null);$CLJS.Y(ML,aL($CLJS.AF,$CLJS.H(["s",PR])));
var fS=new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.W,ML],null);$CLJS.Y(QL,aL($CLJS.JF,$CLJS.H(["s",PR])));var gS=new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.W,QL],null);$CLJS.Y(iM,aL($CLJS.CF,$CLJS.H(["s",PR])));var hS=new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.W,iM],null);$CLJS.Y(UM,aL($CLJS.is,$CLJS.H(["s",PR])));var iS=new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.W,UM],null);$CLJS.Y(DL,aL($CLJS.os,$CLJS.H(["s",PR])));var jS=new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.W,DL],null);
$CLJS.Y(jQ,aL($CLJS.IF,$CLJS.H(["s",PR,"match",$CLJS.Bj,"replacement",$CLJS.Bj])));var kS=new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.W,jQ],null);$CLJS.Y(gR,aL($CLJS.KE,$CLJS.H(["a",PR,"b",PR,"more",new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.Ki,PR],null)])));var lS=new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.W,gR],null);$CLJS.Y(JN,aL($CLJS.nF,$CLJS.H(["s",PR,"pattern",$CLJS.Bj])));var mS=new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.W,JN],null);
$CLJS.Y(FQ,aL($CLJS.Kq,$CLJS.H(["x",bS,"y",bS,"more",new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.Ki,bS],null)])));var nS=new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.W,FQ],null);$CLJS.Y(DQ,aL($CLJS.Yr,$CLJS.H(["x",ZR,"y",bS,"more",new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.Ki,bS],null)])));var oS=new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.W,DQ],null);$CLJS.Y(CQ,aL($CLJS.FF,$CLJS.H(["x",ZR,"y",ZR,"more",new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.Ki,ZR],null)])));var pS=new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.W,CQ],null);
$CLJS.Y(EQ,aL($CLJS.Lq,$CLJS.H(["x",ZR,"y",ZR,"more",new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.Ki,ZR],null)])));var qS=new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.W,EQ],null);$CLJS.Y(VO,aL($CLJS.jF,$CLJS.H(["x",ZR])));var rS=new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.W,VO],null);$CLJS.Y(NP,aL($CLJS.GE,$CLJS.H(["x",ZR])));var sS=new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.W,NP],null);$CLJS.Y(jR,aL($CLJS.qF,$CLJS.H(["x",ZR])));var tS=new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.W,jR],null);$CLJS.Y($N,aL($CLJS.LE,$CLJS.H(["x",ZR])));
var uS=new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.W,$N],null);$CLJS.Y(fO,aL($CLJS.IE,$CLJS.H(["x",ZR,"y",ZR])));var vS=new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.W,fO],null);$CLJS.Y(CO,aL($CLJS.ZE,$CLJS.H(["x",ZR])));var wS=new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.W,CO],null);$CLJS.Y(zL,aL($CLJS.CE,$CLJS.H(["x",ZR])));var xS=new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.W,zL],null);$CLJS.Y(aP,aL($CLJS.HF,$CLJS.H(["x",ZR])));var yS=new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.W,aP],null);
$CLJS.Y(ZL,aL($CLJS.TA,$CLJS.H(["datetime-x",$R,"datetime-y",$R,"unit",Fla])));var zS=new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.W,ZL],null);$CLJS.Y(qM,aL($CLJS.YA,$CLJS.H(["datetime",$R,"unit",Ela,"mode",new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.Ar,zR],null)])));var AS=new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.W,qM],null);$CLJS.Y(hO,aL($CLJS.UH,$CLJS.H(["date",$R])));var BS=new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.W,hO],null);$CLJS.Y(JO,aL($CLJS.jI,$CLJS.H(["date",$R])));
var CS=new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.W,JO],null);$CLJS.Y(mL,aL($CLJS.NH,$CLJS.H(["date",$R])));var DS=new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.W,mL],null);$CLJS.Y(hR,aL($CLJS.WA,$CLJS.H(["date",$R,"mode",new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.Ar,zR],null)])));var ES=new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.W,hR],null);$CLJS.Y(uN,aL($CLJS.cI,$CLJS.H(["date",$R])));var FS=new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.W,uN],null);$CLJS.Y(DO,aL($CLJS.fI,$CLJS.H(["date",$R])));
var GS=new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.W,DO],null);$CLJS.Y(VL,aL($CLJS.hI,$CLJS.H(["datetime",$R])));var HS=new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.W,VL],null);$CLJS.Y(zN,aL($CLJS.eI,$CLJS.H(["datetime",$R])));var IS=new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.W,zN],null);$CLJS.Y(OL,aL($CLJS.TH,$CLJS.H(["datetime",$R])));var JS=new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.W,OL],null);$CLJS.Y(eN,aL($CLJS.PH,$CLJS.H(["datetime",$R,"to",yR,"from",new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.Ar,yR],null)])));
var KS=new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.W,eN],null),LS=new $CLJS.Q(null,11,5,$CLJS.R,[$CLJS.cr,new $CLJS.h(null,1,[$CLJS.ss,"datetime arithmetic unit"],null),$CLJS.XF,$CLJS.UF,$CLJS.Ik,$CLJS.Pk,$CLJS.Qk,$CLJS.cj,$CLJS.ij,$CLJS.qi,$CLJS.li],null);$CLJS.Y(jL,aL($CLJS.XA,$CLJS.H(["datetime",$R,"amount",ZR,"unit",LS])));var MS=new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.W,jL],null);
$CLJS.Y(HL,function(a){for(var b=[],c=arguments.length,d=0;;)if(d<c)b.push(arguments[d]),d+=1;else break;return aL(arguments[0],1<b.length?new $CLJS.w(b.slice(1),0,null):null)}($CLJS.$H));var NS=new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.W,HL],null);$CLJS.Y(iL,aL($CLJS.$A,$CLJS.H(["datetime",$R,"amount",ZR,"unit",LS])));var OS=new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.W,iL],null);
$CLJS.Y(zP,bL($CLJS.H([new $CLJS.Q(null,2,5,$CLJS.R,[function(){var a=gO.h($CLJS.qd("undefined"!==typeof $CLJS.dL&&"undefined"!==typeof eL&&"undefined"!==typeof fL&&"undefined"!==typeof nS?new $CLJS.Hc(function(){return nS},$CLJS.pd(PO,new $CLJS.h(null,1,[$CLJS.Cj,!0],null)),$CLJS.Kg([eO,$CLJS.Pi,$CLJS.U,$CLJS.Lj,$CLJS.vi,gO,$CLJS.Ni,$CLJS.bj,$CLJS.Rj,cM,$CLJS.ui,$CLJS.Ij,$CLJS.Kj],[new $CLJS.ch(null,new $CLJS.h(null,1,[$CLJS.XO,"null"],null),null),$CLJS.pd(MP,new $CLJS.h(null,1,[$CLJS.Ij,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],
null)),DN,"metabase/mbql/schema.cljc",51,$CLJS.Kq,1,612,612,new $CLJS.Q(null,7,5,$CLJS.R,[$CLJS.Kq,$CLJS.BD,$CLJS.V($CLJS.vj,TO),pQ,$CLJS.V($CLJS.vj,TO),HM,$CLJS.V($CLJS.vj,$CLJS.V($CLJS.Hi,TO))],null),$CLJS.Lc,"Schema for a valid + clause.",$CLJS.n(nS)?nS.H:null])):null));return $CLJS.n(a)?a:DN}(),nS],null),new $CLJS.Q(null,2,5,$CLJS.R,[function(){var a=gO.h($CLJS.qd("undefined"!==typeof $CLJS.dL&&"undefined"!==typeof eL&&"undefined"!==typeof fL&&"undefined"!==typeof MS?new $CLJS.Hc(function(){return MS},
$CLJS.pd(gka,new $CLJS.h(null,1,[$CLJS.Cj,!0],null)),$CLJS.Kg([eO,$CLJS.Pi,$CLJS.U,$CLJS.Lj,$CLJS.vi,gO,$CLJS.Ni,$CLJS.bj,$CLJS.Rj,cM,$CLJS.ui,$CLJS.Ij,$CLJS.Kj],[new $CLJS.ch(null,new $CLJS.h(null,1,[YM,"null"],null),null),$CLJS.pd(MP,new $CLJS.h(null,1,[$CLJS.Ij,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),KO,"metabase/mbql/schema.cljc",67,$CLJS.XA,1,703,703,new $CLJS.Q(null,7,5,$CLJS.R,[$CLJS.XA,$CLJS.ZH,$CLJS.V($CLJS.vj,cR),JP,$CLJS.V($CLJS.vj,
OP),$CLJS.Ek,$CLJS.V($CLJS.vj,WP)],null),$CLJS.Lc,"Schema for a valid datetime-add clause.",$CLJS.n(MS)?MS.H:null])):null));return $CLJS.n(a)?a:KO}(),MS],null),new $CLJS.Q(null,2,5,$CLJS.R,[function(){var a=gO.h($CLJS.qd("undefined"!==typeof $CLJS.dL&&"undefined"!==typeof eL&&"undefined"!==typeof fL&&"undefined"!==typeof OS?new $CLJS.Hc(function(){return OS},$CLJS.pd($ia,new $CLJS.h(null,1,[$CLJS.Cj,!0],null)),$CLJS.Kg([eO,$CLJS.Pi,$CLJS.U,$CLJS.Lj,$CLJS.vi,gO,$CLJS.Ni,$CLJS.bj,$CLJS.Rj,cM,$CLJS.ui,
$CLJS.Ij,$CLJS.Kj],[new $CLJS.ch(null,new $CLJS.h(null,1,[YM,"null"],null),null),$CLJS.pd(MP,new $CLJS.h(null,1,[$CLJS.Ij,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),$Q,"metabase/mbql/schema.cljc",72,$CLJS.$A,1,710,710,new $CLJS.Q(null,7,5,$CLJS.R,[$CLJS.$A,$CLJS.ZH,$CLJS.V($CLJS.vj,cR),JP,$CLJS.V($CLJS.vj,OP),$CLJS.Ek,$CLJS.V($CLJS.vj,WP)],null),$CLJS.Lc,"Schema for a valid datetime-subtract clause.",$CLJS.n(OS)?OS.H:null])):null));
return $CLJS.n(a)?a:$Q}(),OS],null),new $CLJS.Q(null,2,5,$CLJS.R,[function(){var a=gO.h($CLJS.qd("undefined"!==typeof $CLJS.dL&&"undefined"!==typeof eL&&"undefined"!==typeof fL&&"undefined"!==typeof KS?new $CLJS.Hc(function(){return KS},$CLJS.pd(ela,new $CLJS.h(null,1,[$CLJS.Cj,!0],null)),$CLJS.Kg([eO,$CLJS.Pi,$CLJS.U,$CLJS.Lj,$CLJS.vi,gO,$CLJS.Ni,$CLJS.bj,$CLJS.Rj,cM,$CLJS.ui,$CLJS.Ij,$CLJS.Kj],[new $CLJS.ch(null,new $CLJS.h(null,1,[$CLJS.PH,"null"],null),null),$CLJS.pd(MP,new $CLJS.h(null,1,[$CLJS.Ij,
"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),EM,"metabase/mbql/schema.cljc",71,$CLJS.PH,1,695,695,new $CLJS.Q(null,7,5,$CLJS.R,[$CLJS.PH,$CLJS.ZH,$CLJS.V($CLJS.vj,cR),Zja,$CLJS.V($CLJS.vj,sQ),dja,$CLJS.V($CLJS.vj,$CLJS.V(eQ,sQ))],null),$CLJS.Lc,"Schema for a valid convert-timezone clause.",$CLJS.n(KS)?KS.H:null])):null));return $CLJS.n(a)?a:EM}(),KS],null),new $CLJS.Q(null,2,5,$CLJS.R,[function(){var a=gO.h($CLJS.qd("undefined"!==typeof $CLJS.dL&&
"undefined"!==typeof eL&&"undefined"!==typeof fL&&"undefined"!==typeof NS?new $CLJS.Hc(function(){return NS},$CLJS.pd(Hka,new $CLJS.h(null,1,[$CLJS.Cj,!0],null)),$CLJS.Kg([eO,$CLJS.Pi,$CLJS.U,$CLJS.Lj,$CLJS.vi,gO,$CLJS.Ni,$CLJS.bj,$CLJS.Rj,cM,$CLJS.ui,$CLJS.Ij,$CLJS.Kj],[new $CLJS.ch(null,new $CLJS.h(null,1,[$CLJS.$H,"null"],null),null),$CLJS.pd(MP,new $CLJS.h(null,1,[$CLJS.Ij,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),iO,"metabase/mbql/schema.cljc",
45,$CLJS.$H,1,708,708,new $CLJS.Q(null,1,5,$CLJS.R,[$CLJS.$H],null),$CLJS.Lc,"Schema for a valid now clause.",$CLJS.n(NS)?NS.H:null])):null));return $CLJS.n(a)?a:iO}(),NS],null)])));$CLJS.PS=new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.W,FO],null);$CLJS.Y(oL,aL($CLJS.mr,$CLJS.H(["first-clause",$CLJS.PS,"second-clause",$CLJS.PS,"other-clauses",new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.Ki,$CLJS.PS],null)])));var QS=new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.W,oL],null);
$CLJS.Y(aN,aL($CLJS.fr,$CLJS.H(["first-clause",$CLJS.PS,"second-clause",$CLJS.PS,"other-clauses",new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.Ki,$CLJS.PS],null)])));var RS=new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.W,aN],null);$CLJS.Y(JL,aL($CLJS.hr,$CLJS.H(["clause",$CLJS.PS])));
var SS=new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.W,JL],null),TS=new $CLJS.Q(null,4,5,$CLJS.R,[$CLJS.lr,new $CLJS.h(null,3,[$CLJS.ss,":field or :expression reference or :relative-datetime",$CLJS.Ds,$CLJS.We(":field or :expression reference or :relative-datetime"),$CLJS.Ji,function(a){return $CLJS.n($K($CLJS.VA,a))?$CLJS.VA:$CLJS.ks}],null),new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.VA,BR],null),new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.ks,$CLJS.KR],null)],null);
$CLJS.Y(wP,new $CLJS.Q(null,3,5,$CLJS.R,[$CLJS.er,new $CLJS.h(null,1,[$CLJS.ss,"equality comparable"],null),new $CLJS.Q(null,8,5,$CLJS.R,[$CLJS.fr,$CLJS.vr,$CLJS.dl,$CLJS.Bj,FR,TS,aS,GR],null)],null));var US=new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.W,wP],null);
$CLJS.Y(ON,new $CLJS.Q(null,4,5,$CLJS.R,[$CLJS.lr,new $CLJS.h(null,2,[$CLJS.ss,"order comparable",$CLJS.Ji,function(a){return $CLJS.n($K($CLJS.nj,a))?$CLJS.nj:$CLJS.ks}],null),new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.nj,GR],null),new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.ks,new $CLJS.Q(null,6,5,$CLJS.R,[$CLJS.fr,$CLJS.dl,$CLJS.Bj,FR,aS,TS],null)],null)],null));var VS=new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.W,ON],null);
$CLJS.Y(vQ,aL($CLJS.Nj,$CLJS.H(["field",US,"value-or-field",US,"more-values-or-fields",new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.Ki,US],null)])));var WS=new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.W,vQ],null);$CLJS.Y(zQ,aL($CLJS.BF,$CLJS.H(["field",US,"value-or-field",US,"more-values-or-fields",new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.Ki,US],null)])));var XS=new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.W,zQ],null);$CLJS.Y(uQ,aL($CLJS.Gq,$CLJS.H(["field",VS,"value-or-field",VS])));
var YS=new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.W,uQ],null);$CLJS.Y(tQ,aL($CLJS.Cq,$CLJS.H(["field",VS,"value-or-field",VS])));var ZS=new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.W,tQ],null);$CLJS.Y(jM,aL($CLJS.Iq,$CLJS.H(["field",VS,"value-or-field",VS])));var $S=new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.W,jM],null);$CLJS.Y(pM,aL($CLJS.Eq,$CLJS.H(["field",VS,"value-or-field",VS])));var aT=new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.W,pM],null);$CLJS.Y(eP,aL($CLJS.NE,$CLJS.H(["field",VS,"min",VS,"max",VS])));
var bT=new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.W,eP],null);$CLJS.Y(GP,aL($CLJS.TE,$CLJS.H(["lat-field",VS,"lon-field",VS,"lat-max",VS,"lon-min",VS,"lat-min",VS,"lon-max",VS])));var cT=new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.W,GP],null);$CLJS.Y(TM,aL($CLJS.ME,$CLJS.H(["field",$CLJS.KR])));var dT=new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.W,TM],null);$CLJS.Y(IN,aL($CLJS.YE,$CLJS.H(["field",$CLJS.KR])));var eT=new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.W,IN],null);$CLJS.Y(kN,aL($CLJS.OE,$CLJS.H(["field",$CLJS.KR])));
var fT=new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.W,kN],null);$CLJS.Y(rL,aL($CLJS.VE,$CLJS.H(["field",$CLJS.KR])));var gT=new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.W,rL],null),hT=new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.Gj,new $CLJS.Q(null,3,5,$CLJS.R,[$CLJS.tF,new $CLJS.h(null,1,[$CLJS.Ar,!0],null),$CLJS.vr],null)],null);$CLJS.Y(xN,aL($CLJS.cF,$CLJS.H(["field",PR,"string-or-field",PR,"options",new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.Ar,hT],null)])));var iT=new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.W,xN],null);
$CLJS.Y(qO,aL($CLJS.wF,$CLJS.H(["field",PR,"string-or-field",PR,"options",new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.Ar,hT],null)])));var jT=new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.W,qO],null);$CLJS.Y(iN,aL($CLJS.kF,$CLJS.H(["field",PR,"string-or-field",PR,"options",new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.Ar,hT],null)])));var kT=new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.W,iN],null);$CLJS.Y(ZO,aL($CLJS.dF,$CLJS.H(["field",PR,"string-or-field",PR,"options",new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.Ar,hT],null)])));
var lT=new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.W,ZO],null);$CLJS.Y(AL,aL($CLJS.ZA,$CLJS.H(["field",$CLJS.KR,"n",new $CLJS.Q(null,3,5,$CLJS.R,[$CLJS.fr,$CLJS.rr,new $CLJS.Q(null,4,5,$CLJS.R,[$CLJS.cr,$CLJS.Ou,$CLJS.Qw,$CLJS.SE],null)],null),"unit",AR,"options",new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.Ar,new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.Gj,new $CLJS.Q(null,3,5,$CLJS.R,[$CLJS.Nk,new $CLJS.h(null,1,[$CLJS.Ar,!0],null),$CLJS.vr],null)],null)],null)])));var mT=new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.W,AL],null);
$CLJS.Y(pP,aL($CLJS.JE,$CLJS.H(["segment-id",new $CLJS.Q(null,3,5,$CLJS.R,[$CLJS.fr,new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.W,$CLJS.JJ],null),lR],null)])));var nT=new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.W,pP],null);
$CLJS.Y(yM,bL($CLJS.H([new $CLJS.Q(null,2,5,$CLJS.R,[function(){var a=gO.h($CLJS.qd("undefined"!==typeof $CLJS.dL&&"undefined"!==typeof eL&&"undefined"!==typeof fL&&"undefined"!==typeof QS?new $CLJS.Hc(function(){return QS},$CLJS.pd(iQ,new $CLJS.h(null,1,[$CLJS.Cj,!0],null)),$CLJS.Kg([$CLJS.Pi,$CLJS.U,$CLJS.Lj,$CLJS.vi,gO,$CLJS.Ni,$CLJS.bj,$CLJS.Rj,cM,$CLJS.ui,$CLJS.Ij,$CLJS.Kj],[$CLJS.pd(MP,new $CLJS.h(null,1,[$CLJS.Ij,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],
null)),SN,"metabase/mbql/schema.cljc",15,$CLJS.mr,1,724,724,new $CLJS.Q(null,7,5,$CLJS.R,[$CLJS.mr,IM,$CLJS.V($CLJS.vj,XN),AO,$CLJS.V($CLJS.vj,XN),SM,$CLJS.V($CLJS.vj,$CLJS.V($CLJS.Hi,XN))],null),$CLJS.Lc,"Schema for a valid and clause.",$CLJS.n(QS)?QS.H:null])):null));return $CLJS.n(a)?a:SN}(),QS],null),new $CLJS.Q(null,2,5,$CLJS.R,[function(){var a=gO.h($CLJS.qd("undefined"!==typeof $CLJS.dL&&"undefined"!==typeof eL&&"undefined"!==typeof fL&&"undefined"!==typeof RS?new $CLJS.Hc(function(){return RS},
$CLJS.pd(EO,new $CLJS.h(null,1,[$CLJS.Cj,!0],null)),$CLJS.Kg([$CLJS.Pi,$CLJS.U,$CLJS.Lj,$CLJS.vi,gO,$CLJS.Ni,$CLJS.bj,$CLJS.Rj,cM,$CLJS.ui,$CLJS.Ij,$CLJS.Kj],[$CLJS.pd(MP,new $CLJS.h(null,1,[$CLJS.Ij,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),HO,"metabase/mbql/schema.cljc",14,$CLJS.fr,1,729,729,new $CLJS.Q(null,7,5,$CLJS.R,[$CLJS.fr,IM,$CLJS.V($CLJS.vj,XN),AO,$CLJS.V($CLJS.vj,XN),SM,$CLJS.V($CLJS.vj,$CLJS.V($CLJS.Hi,XN))],null),$CLJS.Lc,
"Schema for a valid or clause.",$CLJS.n(RS)?RS.H:null])):null));return $CLJS.n(a)?a:HO}(),RS],null),new $CLJS.Q(null,2,5,$CLJS.R,[function(){var a=gO.h($CLJS.qd("undefined"!==typeof $CLJS.dL&&"undefined"!==typeof eL&&"undefined"!==typeof fL&&"undefined"!==typeof SS?new $CLJS.Hc(function(){return SS},$CLJS.pd(qP,new $CLJS.h(null,1,[$CLJS.Cj,!0],null)),$CLJS.Kg([$CLJS.Pi,$CLJS.U,$CLJS.Lj,$CLJS.vi,gO,$CLJS.Ni,$CLJS.bj,$CLJS.Rj,cM,$CLJS.ui,$CLJS.Ij,$CLJS.Kj],[$CLJS.pd(MP,new $CLJS.h(null,1,[$CLJS.Ij,
"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),jO,"metabase/mbql/schema.cljc",15,$CLJS.hr,1,734,734,new $CLJS.Q(null,3,5,$CLJS.R,[$CLJS.hr,$CLJS.WQ,$CLJS.V($CLJS.vj,XN)],null),$CLJS.Lc,"Schema for a valid not clause.",$CLJS.n(SS)?SS.H:null])):null));return $CLJS.n(a)?a:jO}(),SS],null),new $CLJS.Q(null,2,5,$CLJS.R,[function(){var a=gO.h($CLJS.qd("undefined"!==typeof $CLJS.dL&&"undefined"!==typeof eL&&"undefined"!==typeof fL&&"undefined"!==
typeof YS?new $CLJS.Hc(function(){return YS},$CLJS.pd(NO,new $CLJS.h(null,1,[$CLJS.Cj,!0],null)),$CLJS.Kg([$CLJS.Pi,$CLJS.U,$CLJS.Lj,$CLJS.vi,gO,$CLJS.Ni,$CLJS.bj,$CLJS.Rj,cM,$CLJS.ui,$CLJS.Ij,$CLJS.Kj],[$CLJS.pd(MP,new $CLJS.h(null,1,[$CLJS.Ij,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),LN,"metabase/mbql/schema.cljc",13,$CLJS.Gq,1,798,798,new $CLJS.Q(null,5,5,$CLJS.R,[$CLJS.Gq,$CLJS.lF,$CLJS.V($CLJS.vj,KM),UP,$CLJS.V($CLJS.vj,KM)],
null),$CLJS.Lc,"Schema for a valid \x3c clause.",$CLJS.n(YS)?YS.H:null])):null));return $CLJS.n(a)?a:LN}(),YS],null),new $CLJS.Q(null,2,5,$CLJS.R,[function(){var a=gO.h($CLJS.qd("undefined"!==typeof $CLJS.dL&&"undefined"!==typeof eL&&"undefined"!==typeof fL&&"undefined"!==typeof $S?new $CLJS.Hc(function(){return $S},$CLJS.pd(PQ,new $CLJS.h(null,1,[$CLJS.Cj,!0],null)),$CLJS.Kg([$CLJS.Pi,$CLJS.U,$CLJS.Lj,$CLJS.vi,gO,$CLJS.Ni,$CLJS.bj,$CLJS.Rj,cM,$CLJS.ui,$CLJS.Ij,$CLJS.Kj],[$CLJS.pd(MP,new $CLJS.h(null,
1,[$CLJS.Ij,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),KN,"metabase/mbql/schema.cljc",14,$CLJS.Iq,1,800,800,new $CLJS.Q(null,5,5,$CLJS.R,[$CLJS.Iq,$CLJS.lF,$CLJS.V($CLJS.vj,KM),UP,$CLJS.V($CLJS.vj,KM)],null),$CLJS.Lc,"Schema for a valid \x3c\x3d clause.",$CLJS.n($S)?$S.H:null])):null));return $CLJS.n(a)?a:KN}(),$S],null),new $CLJS.Q(null,2,5,$CLJS.R,[function(){var a=gO.h($CLJS.qd("undefined"!==typeof $CLJS.dL&&"undefined"!==typeof eL&&
"undefined"!==typeof fL&&"undefined"!==typeof ZS?new $CLJS.Hc(function(){return ZS},$CLJS.pd(LO,new $CLJS.h(null,1,[$CLJS.Cj,!0],null)),$CLJS.Kg([$CLJS.Pi,$CLJS.U,$CLJS.Lj,$CLJS.vi,gO,$CLJS.Ni,$CLJS.bj,$CLJS.Rj,cM,$CLJS.ui,$CLJS.Ij,$CLJS.Kj],[$CLJS.pd(MP,new $CLJS.h(null,1,[$CLJS.Ij,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),MN,"metabase/mbql/schema.cljc",13,$CLJS.Cq,1,799,799,new $CLJS.Q(null,5,5,$CLJS.R,[$CLJS.Cq,$CLJS.lF,$CLJS.V($CLJS.vj,
KM),UP,$CLJS.V($CLJS.vj,KM)],null),$CLJS.Lc,"Schema for a valid \x3e clause.",$CLJS.n(ZS)?ZS.H:null])):null));return $CLJS.n(a)?a:MN}(),ZS],null),new $CLJS.Q(null,2,5,$CLJS.R,[function(){var a=gO.h($CLJS.qd("undefined"!==typeof $CLJS.dL&&"undefined"!==typeof eL&&"undefined"!==typeof fL&&"undefined"!==typeof aT?new $CLJS.Hc(function(){return aT},$CLJS.pd(IQ,new $CLJS.h(null,1,[$CLJS.Cj,!0],null)),$CLJS.Kg([$CLJS.Pi,$CLJS.U,$CLJS.Lj,$CLJS.vi,gO,$CLJS.Ni,$CLJS.bj,$CLJS.Rj,cM,$CLJS.ui,$CLJS.Ij,$CLJS.Kj],
[$CLJS.pd(MP,new $CLJS.h(null,1,[$CLJS.Ij,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),TN,"metabase/mbql/schema.cljc",14,$CLJS.Eq,1,801,801,new $CLJS.Q(null,5,5,$CLJS.R,[$CLJS.Eq,$CLJS.lF,$CLJS.V($CLJS.vj,KM),UP,$CLJS.V($CLJS.vj,KM)],null),$CLJS.Lc,"Schema for a valid \x3e\x3d clause.",$CLJS.n(aT)?aT.H:null])):null));return $CLJS.n(a)?a:TN}(),aT],null),new $CLJS.Q(null,2,5,$CLJS.R,[function(){var a=gO.h($CLJS.qd("undefined"!==typeof $CLJS.dL&&
"undefined"!==typeof eL&&"undefined"!==typeof fL&&"undefined"!==typeof WS?new $CLJS.Hc(function(){return WS},$CLJS.pd(MO,new $CLJS.h(null,1,[$CLJS.Cj,!0],null)),$CLJS.Kg([$CLJS.Pi,$CLJS.U,$CLJS.Lj,$CLJS.vi,gO,$CLJS.Ni,$CLJS.bj,$CLJS.Rj,cM,$CLJS.ui,$CLJS.Ij,$CLJS.Kj],[$CLJS.pd(MP,new $CLJS.h(null,1,[$CLJS.Ij,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),NN,"metabase/mbql/schema.cljc",13,$CLJS.Nj,1,795,795,new $CLJS.Q(null,7,5,$CLJS.R,
[$CLJS.Nj,$CLJS.lF,$CLJS.V($CLJS.vj,UQ),UP,$CLJS.V($CLJS.vj,UQ),xP,$CLJS.V($CLJS.vj,$CLJS.V($CLJS.Hi,UQ))],null),$CLJS.Lc,"Schema for a valid \x3d clause.",$CLJS.n(WS)?WS.H:null])):null));return $CLJS.n(a)?a:NN}(),WS],null),new $CLJS.Q(null,2,5,$CLJS.R,[function(){var a=gO.h($CLJS.qd("undefined"!==typeof $CLJS.dL&&"undefined"!==typeof eL&&"undefined"!==typeof fL&&"undefined"!==typeof XS?new $CLJS.Hc(function(){return XS},$CLJS.pd($L,new $CLJS.h(null,1,[$CLJS.Cj,!0],null)),$CLJS.Kg([$CLJS.Pi,$CLJS.U,
$CLJS.Lj,$CLJS.vi,gO,$CLJS.Ni,$CLJS.bj,$CLJS.Rj,cM,$CLJS.ui,$CLJS.Ij,$CLJS.Kj],[$CLJS.pd(MP,new $CLJS.h(null,1,[$CLJS.Ij,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),vM,"metabase/mbql/schema.cljc",14,$CLJS.BF,1,796,796,new $CLJS.Q(null,7,5,$CLJS.R,[$CLJS.BF,$CLJS.lF,$CLJS.V($CLJS.vj,UQ),UP,$CLJS.V($CLJS.vj,UQ),xP,$CLJS.V($CLJS.vj,$CLJS.V($CLJS.Hi,UQ))],null),$CLJS.Lc,"Schema for a valid !\x3d clause.",$CLJS.n(XS)?XS.H:null])):null));
return $CLJS.n(a)?a:vM}(),XS],null)])));
$CLJS.Y(FO,new $CLJS.Q(null,7,5,$CLJS.R,[$CLJS.lr,new $CLJS.h(null,2,[$CLJS.ss,"valid filter expression",$CLJS.Ji,function(a){return $CLJS.n($K(TR,a))?$CLJS.ZH:$CLJS.n($K(QR,a))?dR:$CLJS.n($K(NR,a))?$CLJS.Bj:$CLJS.n($K(RR,a))?$CLJS.vr:$CLJS.ks}],null),new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.ZH,$CLJS.WR],null),new $CLJS.Q(null,2,5,$CLJS.R,[dR,UR],null),new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.Bj,OR],null),new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.vr,VR],null),new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.ks,bL($CLJS.H([new $CLJS.Q(null,
2,5,$CLJS.R,[function(){var a=gO.h($CLJS.qd("undefined"!==typeof $CLJS.dL&&"undefined"!==typeof eL&&"undefined"!==typeof fL&&"undefined"!==typeof QS?new $CLJS.Hc(function(){return QS},$CLJS.pd(iQ,new $CLJS.h(null,1,[$CLJS.Cj,!0],null)),$CLJS.Kg([$CLJS.Pi,$CLJS.U,$CLJS.Lj,$CLJS.vi,gO,$CLJS.Ni,$CLJS.bj,$CLJS.Rj,cM,$CLJS.ui,$CLJS.Ij,$CLJS.Kj],[$CLJS.pd(MP,new $CLJS.h(null,1,[$CLJS.Ij,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),SN,"metabase/mbql/schema.cljc",
15,$CLJS.mr,1,724,724,new $CLJS.Q(null,7,5,$CLJS.R,[$CLJS.mr,IM,$CLJS.V($CLJS.vj,XN),AO,$CLJS.V($CLJS.vj,XN),SM,$CLJS.V($CLJS.vj,$CLJS.V($CLJS.Hi,XN))],null),$CLJS.Lc,"Schema for a valid and clause.",$CLJS.n(QS)?QS.H:null])):null));return $CLJS.n(a)?a:SN}(),QS],null),new $CLJS.Q(null,2,5,$CLJS.R,[function(){var a=gO.h($CLJS.qd("undefined"!==typeof $CLJS.dL&&"undefined"!==typeof eL&&"undefined"!==typeof fL&&"undefined"!==typeof RS?new $CLJS.Hc(function(){return RS},$CLJS.pd(EO,new $CLJS.h(null,1,[$CLJS.Cj,
!0],null)),$CLJS.Kg([$CLJS.Pi,$CLJS.U,$CLJS.Lj,$CLJS.vi,gO,$CLJS.Ni,$CLJS.bj,$CLJS.Rj,cM,$CLJS.ui,$CLJS.Ij,$CLJS.Kj],[$CLJS.pd(MP,new $CLJS.h(null,1,[$CLJS.Ij,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),HO,"metabase/mbql/schema.cljc",14,$CLJS.fr,1,729,729,new $CLJS.Q(null,7,5,$CLJS.R,[$CLJS.fr,IM,$CLJS.V($CLJS.vj,XN),AO,$CLJS.V($CLJS.vj,XN),SM,$CLJS.V($CLJS.vj,$CLJS.V($CLJS.Hi,XN))],null),$CLJS.Lc,"Schema for a valid or clause.",$CLJS.n(RS)?
RS.H:null])):null));return $CLJS.n(a)?a:HO}(),RS],null),new $CLJS.Q(null,2,5,$CLJS.R,[function(){var a=gO.h($CLJS.qd("undefined"!==typeof $CLJS.dL&&"undefined"!==typeof eL&&"undefined"!==typeof fL&&"undefined"!==typeof SS?new $CLJS.Hc(function(){return SS},$CLJS.pd(qP,new $CLJS.h(null,1,[$CLJS.Cj,!0],null)),$CLJS.Kg([$CLJS.Pi,$CLJS.U,$CLJS.Lj,$CLJS.vi,gO,$CLJS.Ni,$CLJS.bj,$CLJS.Rj,cM,$CLJS.ui,$CLJS.Ij,$CLJS.Kj],[$CLJS.pd(MP,new $CLJS.h(null,1,[$CLJS.Ij,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],
null)),jO,"metabase/mbql/schema.cljc",15,$CLJS.hr,1,734,734,new $CLJS.Q(null,3,5,$CLJS.R,[$CLJS.hr,$CLJS.WQ,$CLJS.V($CLJS.vj,XN)],null),$CLJS.Lc,"Schema for a valid not clause.",$CLJS.n(SS)?SS.H:null])):null));return $CLJS.n(a)?a:jO}(),SS],null),new $CLJS.Q(null,2,5,$CLJS.R,[function(){var a=gO.h($CLJS.qd("undefined"!==typeof $CLJS.dL&&"undefined"!==typeof eL&&"undefined"!==typeof fL&&"undefined"!==typeof WS?new $CLJS.Hc(function(){return WS},$CLJS.pd(MO,new $CLJS.h(null,1,[$CLJS.Cj,!0],null)),$CLJS.Kg([$CLJS.Pi,
$CLJS.U,$CLJS.Lj,$CLJS.vi,gO,$CLJS.Ni,$CLJS.bj,$CLJS.Rj,cM,$CLJS.ui,$CLJS.Ij,$CLJS.Kj],[$CLJS.pd(MP,new $CLJS.h(null,1,[$CLJS.Ij,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),NN,"metabase/mbql/schema.cljc",13,$CLJS.Nj,1,795,795,new $CLJS.Q(null,7,5,$CLJS.R,[$CLJS.Nj,$CLJS.lF,$CLJS.V($CLJS.vj,UQ),UP,$CLJS.V($CLJS.vj,UQ),xP,$CLJS.V($CLJS.vj,$CLJS.V($CLJS.Hi,UQ))],null),$CLJS.Lc,"Schema for a valid \x3d clause.",$CLJS.n(WS)?WS.H:null])):
null));return $CLJS.n(a)?a:NN}(),WS],null),new $CLJS.Q(null,2,5,$CLJS.R,[function(){var a=gO.h($CLJS.qd("undefined"!==typeof $CLJS.dL&&"undefined"!==typeof eL&&"undefined"!==typeof fL&&"undefined"!==typeof XS?new $CLJS.Hc(function(){return XS},$CLJS.pd($L,new $CLJS.h(null,1,[$CLJS.Cj,!0],null)),$CLJS.Kg([$CLJS.Pi,$CLJS.U,$CLJS.Lj,$CLJS.vi,gO,$CLJS.Ni,$CLJS.bj,$CLJS.Rj,cM,$CLJS.ui,$CLJS.Ij,$CLJS.Kj],[$CLJS.pd(MP,new $CLJS.h(null,1,[$CLJS.Ij,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],
null)),vM,"metabase/mbql/schema.cljc",14,$CLJS.BF,1,796,796,new $CLJS.Q(null,7,5,$CLJS.R,[$CLJS.BF,$CLJS.lF,$CLJS.V($CLJS.vj,UQ),UP,$CLJS.V($CLJS.vj,UQ),xP,$CLJS.V($CLJS.vj,$CLJS.V($CLJS.Hi,UQ))],null),$CLJS.Lc,"Schema for a valid !\x3d clause.",$CLJS.n(XS)?XS.H:null])):null));return $CLJS.n(a)?a:vM}(),XS],null),new $CLJS.Q(null,2,5,$CLJS.R,[function(){var a=gO.h($CLJS.qd("undefined"!==typeof $CLJS.dL&&"undefined"!==typeof eL&&"undefined"!==typeof fL&&"undefined"!==typeof YS?new $CLJS.Hc(function(){return YS},
$CLJS.pd(NO,new $CLJS.h(null,1,[$CLJS.Cj,!0],null)),$CLJS.Kg([$CLJS.Pi,$CLJS.U,$CLJS.Lj,$CLJS.vi,gO,$CLJS.Ni,$CLJS.bj,$CLJS.Rj,cM,$CLJS.ui,$CLJS.Ij,$CLJS.Kj],[$CLJS.pd(MP,new $CLJS.h(null,1,[$CLJS.Ij,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),LN,"metabase/mbql/schema.cljc",13,$CLJS.Gq,1,798,798,new $CLJS.Q(null,5,5,$CLJS.R,[$CLJS.Gq,$CLJS.lF,$CLJS.V($CLJS.vj,KM),UP,$CLJS.V($CLJS.vj,KM)],null),$CLJS.Lc,"Schema for a valid \x3c clause.",
$CLJS.n(YS)?YS.H:null])):null));return $CLJS.n(a)?a:LN}(),YS],null),new $CLJS.Q(null,2,5,$CLJS.R,[function(){var a=gO.h($CLJS.qd("undefined"!==typeof $CLJS.dL&&"undefined"!==typeof eL&&"undefined"!==typeof fL&&"undefined"!==typeof ZS?new $CLJS.Hc(function(){return ZS},$CLJS.pd(LO,new $CLJS.h(null,1,[$CLJS.Cj,!0],null)),$CLJS.Kg([$CLJS.Pi,$CLJS.U,$CLJS.Lj,$CLJS.vi,gO,$CLJS.Ni,$CLJS.bj,$CLJS.Rj,cM,$CLJS.ui,$CLJS.Ij,$CLJS.Kj],[$CLJS.pd(MP,new $CLJS.h(null,1,[$CLJS.Ij,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],
null)),MN,"metabase/mbql/schema.cljc",13,$CLJS.Cq,1,799,799,new $CLJS.Q(null,5,5,$CLJS.R,[$CLJS.Cq,$CLJS.lF,$CLJS.V($CLJS.vj,KM),UP,$CLJS.V($CLJS.vj,KM)],null),$CLJS.Lc,"Schema for a valid \x3e clause.",$CLJS.n(ZS)?ZS.H:null])):null));return $CLJS.n(a)?a:MN}(),ZS],null),new $CLJS.Q(null,2,5,$CLJS.R,[function(){var a=gO.h($CLJS.qd("undefined"!==typeof $CLJS.dL&&"undefined"!==typeof eL&&"undefined"!==typeof fL&&"undefined"!==typeof $S?new $CLJS.Hc(function(){return $S},$CLJS.pd(PQ,new $CLJS.h(null,
1,[$CLJS.Cj,!0],null)),$CLJS.Kg([$CLJS.Pi,$CLJS.U,$CLJS.Lj,$CLJS.vi,gO,$CLJS.Ni,$CLJS.bj,$CLJS.Rj,cM,$CLJS.ui,$CLJS.Ij,$CLJS.Kj],[$CLJS.pd(MP,new $CLJS.h(null,1,[$CLJS.Ij,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),KN,"metabase/mbql/schema.cljc",14,$CLJS.Iq,1,800,800,new $CLJS.Q(null,5,5,$CLJS.R,[$CLJS.Iq,$CLJS.lF,$CLJS.V($CLJS.vj,KM),UP,$CLJS.V($CLJS.vj,KM)],null),$CLJS.Lc,"Schema for a valid \x3c\x3d clause.",$CLJS.n($S)?$S.H:null])):
null));return $CLJS.n(a)?a:KN}(),$S],null),new $CLJS.Q(null,2,5,$CLJS.R,[function(){var a=gO.h($CLJS.qd("undefined"!==typeof $CLJS.dL&&"undefined"!==typeof eL&&"undefined"!==typeof fL&&"undefined"!==typeof aT?new $CLJS.Hc(function(){return aT},$CLJS.pd(IQ,new $CLJS.h(null,1,[$CLJS.Cj,!0],null)),$CLJS.Kg([$CLJS.Pi,$CLJS.U,$CLJS.Lj,$CLJS.vi,gO,$CLJS.Ni,$CLJS.bj,$CLJS.Rj,cM,$CLJS.ui,$CLJS.Ij,$CLJS.Kj],[$CLJS.pd(MP,new $CLJS.h(null,1,[$CLJS.Ij,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],
null)),TN,"metabase/mbql/schema.cljc",14,$CLJS.Eq,1,801,801,new $CLJS.Q(null,5,5,$CLJS.R,[$CLJS.Eq,$CLJS.lF,$CLJS.V($CLJS.vj,KM),UP,$CLJS.V($CLJS.vj,KM)],null),$CLJS.Lc,"Schema for a valid \x3e\x3d clause.",$CLJS.n(aT)?aT.H:null])):null));return $CLJS.n(a)?a:TN}(),aT],null),new $CLJS.Q(null,2,5,$CLJS.R,[function(){var a=gO.h($CLJS.qd("undefined"!==typeof $CLJS.dL&&"undefined"!==typeof eL&&"undefined"!==typeof fL&&"undefined"!==typeof bT?new $CLJS.Hc(function(){return bT},$CLJS.pd(yka,new $CLJS.h(null,
1,[$CLJS.Cj,!0],null)),$CLJS.Kg([$CLJS.Pi,$CLJS.U,$CLJS.Lj,$CLJS.vi,gO,$CLJS.Ni,$CLJS.bj,$CLJS.Rj,cM,$CLJS.ui,$CLJS.Ij,$CLJS.Kj],[$CLJS.pd(MP,new $CLJS.h(null,1,[$CLJS.Ij,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),bM,"metabase/mbql/schema.cljc",19,$CLJS.NE,1,804,804,new $CLJS.Q(null,7,5,$CLJS.R,[$CLJS.NE,$CLJS.lF,$CLJS.V($CLJS.vj,KM),$CLJS.ln,$CLJS.V($CLJS.vj,KM),$CLJS.Hj,$CLJS.V($CLJS.vj,KM)],null),$CLJS.Lc,"Schema for a valid between clause.",
$CLJS.n(bT)?bT.H:null])):null));return $CLJS.n(a)?a:bM}(),bT],null),new $CLJS.Q(null,2,5,$CLJS.R,[function(){var a=gO.h($CLJS.qd("undefined"!==typeof $CLJS.dL&&"undefined"!==typeof eL&&"undefined"!==typeof fL&&"undefined"!==typeof iT?new $CLJS.Hc(function(){return iT},$CLJS.pd(Aka,new $CLJS.h(null,1,[$CLJS.Cj,!0],null)),$CLJS.Kg([$CLJS.Pi,$CLJS.U,$CLJS.Lj,$CLJS.vi,gO,$CLJS.Ni,$CLJS.bj,$CLJS.Rj,cM,$CLJS.ui,$CLJS.Ij,$CLJS.Kj],[$CLJS.pd(MP,new $CLJS.h(null,1,[$CLJS.Ij,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],
null)),ZP,"metabase/mbql/schema.cljc",23,$CLJS.cF,1,829,829,new $CLJS.Q(null,7,5,$CLJS.R,[$CLJS.cF,$CLJS.lF,$CLJS.V($CLJS.vj,TP),uM,$CLJS.V($CLJS.vj,TP),$CLJS.Yi,$CLJS.V($CLJS.vj,$CLJS.V(eQ,oP))],null),$CLJS.Lc,"Schema for a valid starts-with clause.",$CLJS.n(iT)?iT.H:null])):null));return $CLJS.n(a)?a:ZP}(),iT],null),new $CLJS.Q(null,2,5,$CLJS.R,[function(){var a=gO.h($CLJS.qd("undefined"!==typeof $CLJS.dL&&"undefined"!==typeof eL&&"undefined"!==typeof fL&&"undefined"!==typeof jT?new $CLJS.Hc(function(){return jT},
$CLJS.pd(Bja,new $CLJS.h(null,1,[$CLJS.Cj,!0],null)),$CLJS.Kg([$CLJS.Pi,$CLJS.U,$CLJS.Lj,$CLJS.vi,gO,$CLJS.Ni,$CLJS.bj,$CLJS.Rj,cM,$CLJS.ui,$CLJS.Ij,$CLJS.Kj],[$CLJS.pd(MP,new $CLJS.h(null,1,[$CLJS.Ij,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),zM,"metabase/mbql/schema.cljc",21,$CLJS.wF,1,830,830,new $CLJS.Q(null,7,5,$CLJS.R,[$CLJS.wF,$CLJS.lF,$CLJS.V($CLJS.vj,TP),uM,$CLJS.V($CLJS.vj,TP),$CLJS.Yi,$CLJS.V($CLJS.vj,$CLJS.V(eQ,oP))],null),
$CLJS.Lc,"Schema for a valid ends-with clause.",$CLJS.n(jT)?jT.H:null])):null));return $CLJS.n(a)?a:zM}(),jT],null),new $CLJS.Q(null,2,5,$CLJS.R,[function(){var a=gO.h($CLJS.qd("undefined"!==typeof $CLJS.dL&&"undefined"!==typeof eL&&"undefined"!==typeof fL&&"undefined"!==typeof kT?new $CLJS.Hc(function(){return kT},$CLJS.pd(Oja,new $CLJS.h(null,1,[$CLJS.Cj,!0],null)),$CLJS.Kg([$CLJS.Pi,$CLJS.U,$CLJS.Lj,$CLJS.vi,gO,$CLJS.Ni,$CLJS.bj,$CLJS.Rj,cM,$CLJS.ui,$CLJS.Ij,$CLJS.Kj],[$CLJS.pd(MP,new $CLJS.h(null,
1,[$CLJS.Ij,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),LM,"metabase/mbql/schema.cljc",20,$CLJS.kF,1,831,831,new $CLJS.Q(null,7,5,$CLJS.R,[$CLJS.kF,$CLJS.lF,$CLJS.V($CLJS.vj,TP),uM,$CLJS.V($CLJS.vj,TP),$CLJS.Yi,$CLJS.V($CLJS.vj,$CLJS.V(eQ,oP))],null),$CLJS.Lc,"Schema for a valid contains clause.",$CLJS.n(kT)?kT.H:null])):null));return $CLJS.n(a)?a:LM}(),kT],null),new $CLJS.Q(null,2,5,$CLJS.R,[function(){var a=gO.h($CLJS.qd("undefined"!==
typeof $CLJS.dL&&"undefined"!==typeof eL&&"undefined"!==typeof fL&&"undefined"!==typeof lT?new $CLJS.Hc(function(){return lT},$CLJS.pd(sla,new $CLJS.h(null,1,[$CLJS.Cj,!0],null)),$CLJS.Kg([$CLJS.Pi,$CLJS.U,$CLJS.Lj,$CLJS.vi,gO,$CLJS.Ni,$CLJS.bj,$CLJS.Rj,gQ,cM,$CLJS.ui,$CLJS.Ij,$CLJS.Kj],[$CLJS.pd(MP,new $CLJS.h(null,1,[$CLJS.Ij,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),pL,"metabase/mbql/schema.cljc",36,$CLJS.dF,1,834,834,!0,new $CLJS.Q(null,
7,5,$CLJS.R,[$CLJS.dF,$CLJS.lF,$CLJS.V($CLJS.vj,TP),uM,$CLJS.V($CLJS.vj,TP),$CLJS.Yi,$CLJS.V($CLJS.vj,$CLJS.V(eQ,oP))],null),$CLJS.Lc,"Schema for a valid does-not-contain clause.",$CLJS.n(lT)?lT.H:null])):null));return $CLJS.n(a)?a:pL}(),lT],null),new $CLJS.Q(null,2,5,$CLJS.R,[function(){var a=gO.h($CLJS.qd("undefined"!==typeof $CLJS.dL&&"undefined"!==typeof eL&&"undefined"!==typeof fL&&"undefined"!==typeof cT?new $CLJS.Hc(function(){return cT},$CLJS.pd(bla,new $CLJS.h(null,1,[$CLJS.Cj,!0],null)),
$CLJS.Kg([$CLJS.Pi,$CLJS.U,$CLJS.Lj,$CLJS.vi,gO,$CLJS.Ni,$CLJS.bj,$CLJS.Rj,gQ,cM,$CLJS.ui,$CLJS.Ij,$CLJS.Kj],[$CLJS.pd(MP,new $CLJS.h(null,1,[$CLJS.Ij,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),XP,"metabase/mbql/schema.cljc",26,$CLJS.TE,1,807,807,!0,new $CLJS.Q(null,13,5,$CLJS.R,[$CLJS.TE,jja,$CLJS.V($CLJS.vj,KM),xla,$CLJS.V($CLJS.vj,KM),ila,$CLJS.V($CLJS.vj,KM),mja,$CLJS.V($CLJS.vj,KM),cla,$CLJS.V($CLJS.vj,KM),ija,$CLJS.V($CLJS.vj,
KM)],null),$CLJS.Lc,"Schema for a valid inside clause.",$CLJS.n(cT)?cT.H:null])):null));return $CLJS.n(a)?a:XP}(),cT],null),new $CLJS.Q(null,2,5,$CLJS.R,[function(){var a=gO.h($CLJS.qd("undefined"!==typeof $CLJS.dL&&"undefined"!==typeof eL&&"undefined"!==typeof fL&&"undefined"!==typeof fT?new $CLJS.Hc(function(){return fT},$CLJS.pd(Pja,new $CLJS.h(null,1,[$CLJS.Cj,!0],null)),$CLJS.Kg([$CLJS.Pi,$CLJS.U,$CLJS.Lj,$CLJS.vi,gO,$CLJS.Ni,$CLJS.bj,$CLJS.Rj,gQ,cM,$CLJS.ui,$CLJS.Ij,$CLJS.Kj],[$CLJS.pd(MP,new $CLJS.h(null,
1,[$CLJS.Ij,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),sO,"metabase/mbql/schema.cljc",28,$CLJS.OE,1,821,821,!0,new $CLJS.Q(null,3,5,$CLJS.R,[$CLJS.OE,$CLJS.lF,$CLJS.V($CLJS.vj,DM)],null),$CLJS.Lc,"Schema for a valid is-empty clause.",$CLJS.n(fT)?fT.H:null])):null));return $CLJS.n(a)?a:sO}(),fT],null),new $CLJS.Q(null,2,5,$CLJS.R,[function(){var a=gO.h($CLJS.qd("undefined"!==typeof $CLJS.dL&&"undefined"!==typeof eL&&"undefined"!==typeof fL&&
"undefined"!==typeof gT?new $CLJS.Hc(function(){return gT},$CLJS.pd(Nka,new $CLJS.h(null,1,[$CLJS.Cj,!0],null)),$CLJS.Kg([$CLJS.Pi,$CLJS.U,$CLJS.Lj,$CLJS.vi,gO,$CLJS.Ni,$CLJS.bj,$CLJS.Rj,gQ,cM,$CLJS.ui,$CLJS.Ij,$CLJS.Kj],[$CLJS.pd(MP,new $CLJS.h(null,1,[$CLJS.Ij,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),fP,"metabase/mbql/schema.cljc",29,$CLJS.VE,1,822,822,!0,new $CLJS.Q(null,3,5,$CLJS.R,[$CLJS.VE,$CLJS.lF,$CLJS.V($CLJS.vj,DM)],null),
$CLJS.Lc,"Schema for a valid not-empty clause.",$CLJS.n(gT)?gT.H:null])):null));return $CLJS.n(a)?a:fP}(),gT],null),new $CLJS.Q(null,2,5,$CLJS.R,[function(){var a=gO.h($CLJS.qd("undefined"!==typeof $CLJS.dL&&"undefined"!==typeof eL&&"undefined"!==typeof fL&&"undefined"!==typeof dT?new $CLJS.Hc(function(){return dT},$CLJS.pd(nla,new $CLJS.h(null,1,[$CLJS.Cj,!0],null)),$CLJS.Kg([$CLJS.Pi,$CLJS.U,$CLJS.Lj,$CLJS.vi,gO,$CLJS.Ni,$CLJS.bj,$CLJS.Rj,gQ,cM,$CLJS.ui,$CLJS.Ij,$CLJS.Kj],[$CLJS.pd(MP,new $CLJS.h(null,
1,[$CLJS.Ij,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),RM,"metabase/mbql/schema.cljc",27,$CLJS.ME,1,816,816,!0,new $CLJS.Q(null,3,5,$CLJS.R,[$CLJS.ME,$CLJS.lF,$CLJS.V($CLJS.vj,DM)],null),$CLJS.Lc,"Schema for a valid is-null clause.",$CLJS.n(dT)?dT.H:null])):null));return $CLJS.n(a)?a:RM}(),dT],null),new $CLJS.Q(null,2,5,$CLJS.R,[function(){var a=gO.h($CLJS.qd("undefined"!==typeof $CLJS.dL&&"undefined"!==typeof eL&&"undefined"!==typeof fL&&
"undefined"!==typeof eT?new $CLJS.Hc(function(){return eT},$CLJS.pd(aka,new $CLJS.h(null,1,[$CLJS.Cj,!0],null)),$CLJS.Kg([$CLJS.Pi,$CLJS.U,$CLJS.Lj,$CLJS.vi,gO,$CLJS.Ni,$CLJS.bj,$CLJS.Rj,gQ,cM,$CLJS.ui,$CLJS.Ij,$CLJS.Kj],[$CLJS.pd(MP,new $CLJS.h(null,1,[$CLJS.Ij,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),gM,"metabase/mbql/schema.cljc",28,$CLJS.YE,1,817,817,!0,new $CLJS.Q(null,3,5,$CLJS.R,[$CLJS.YE,$CLJS.lF,$CLJS.V($CLJS.vj,DM)],null),
$CLJS.Lc,"Schema for a valid not-null clause.",$CLJS.n(eT)?eT.H:null])):null));return $CLJS.n(a)?a:gM}(),eT],null),new $CLJS.Q(null,2,5,$CLJS.R,[function(){var a=gO.h($CLJS.qd("undefined"!==typeof $CLJS.dL&&"undefined"!==typeof eL&&"undefined"!==typeof fL&&"undefined"!==typeof mT?new $CLJS.Hc(function(){return mT},$CLJS.pd(aja,new $CLJS.h(null,1,[$CLJS.Cj,!0],null)),$CLJS.Kg([$CLJS.Pi,$CLJS.U,$CLJS.Lj,$CLJS.vi,gO,$CLJS.Ni,$CLJS.bj,$CLJS.Rj,gQ,cM,$CLJS.ui,$CLJS.Ij,$CLJS.Kj],[$CLJS.pd(MP,new $CLJS.h(null,
1,[$CLJS.Ij,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),EP,"metabase/mbql/schema.cljc",33,$CLJS.ZA,1,856,856,!0,new $CLJS.Q(null,9,5,$CLJS.R,[$CLJS.ZA,$CLJS.lF,$CLJS.V($CLJS.vj,DM),$CLJS.Mj,$CLJS.V($CLJS.vj,new $CLJS.Q(null,3,5,$CLJS.R,[$CLJS.fr,$CLJS.rr,new $CLJS.Q(null,4,5,$CLJS.R,[$CLJS.cr,$CLJS.Ou,$CLJS.Qw,$CLJS.SE],null)],null)),$CLJS.Ek,$CLJS.V($CLJS.vj,RN),$CLJS.Yi,$CLJS.V($CLJS.vj,$CLJS.V(eQ,Dka))],null),$CLJS.Lc,"Schema for a valid time-interval clause.",
$CLJS.n(mT)?mT.H:null])):null));return $CLJS.n(a)?a:EP}(),mT],null),new $CLJS.Q(null,2,5,$CLJS.R,[function(){var a=gO.h($CLJS.qd("undefined"!==typeof $CLJS.dL&&"undefined"!==typeof eL&&"undefined"!==typeof fL&&"undefined"!==typeof nT?new $CLJS.Hc(function(){return nT},$CLJS.pd(ika,new $CLJS.h(null,1,[$CLJS.Cj,!0],null)),$CLJS.Kg([$CLJS.Pi,$CLJS.U,$CLJS.Lj,$CLJS.vi,gO,$CLJS.Ni,$CLJS.bj,$CLJS.Rj,gQ,cM,$CLJS.ui,$CLJS.Ij,$CLJS.Kj],[$CLJS.pd(MP,new $CLJS.h(null,1,[$CLJS.Ij,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],
null)),GQ,"metabase/mbql/schema.cljc",27,$CLJS.JE,1,872,872,!0,new $CLJS.Q(null,3,5,$CLJS.R,[$CLJS.JE,qja,$CLJS.V($CLJS.vj,new $CLJS.Q(null,3,5,$CLJS.R,[$CLJS.fr,Tka,TL],null))],null),$CLJS.Lc,"Schema for a valid segment clause.",$CLJS.n(nT)?nT.H:null])):null));return $CLJS.n(a)?a:GQ}(),nT],null)]))],null)],null));
$CLJS.Y(rP,aL($CLJS.UE,$CLJS.H(["clauses",new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.er,new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.kj,new $CLJS.Q(null,4,5,$CLJS.R,[$CLJS.ir,new $CLJS.h(null,1,[$CLJS.ss,":case subclause"],null),$CLJS.PS,aS],null)],null)],null),"options",new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.Ar,new $CLJS.Q(null,3,5,$CLJS.R,[$CLJS.Gj,new $CLJS.h(null,1,[$CLJS.ss,":case options"],null),new $CLJS.Q(null,3,5,$CLJS.R,[$CLJS.ei,new $CLJS.h(null,1,[$CLJS.Ar,!0],null),aS],null)],null)],null)])));
var oT=new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.W,rP],null);
$CLJS.Y(YP,bL($CLJS.H([new $CLJS.Q(null,2,5,$CLJS.R,[function(){var a=gO.h($CLJS.qd("undefined"!==typeof $CLJS.dL&&"undefined"!==typeof eL&&"undefined"!==typeof fL&&"undefined"!==typeof nS?new $CLJS.Hc(function(){return nS},$CLJS.pd(PO,new $CLJS.h(null,1,[$CLJS.Cj,!0],null)),$CLJS.Kg([eO,$CLJS.Pi,$CLJS.U,$CLJS.Lj,$CLJS.vi,gO,$CLJS.Ni,$CLJS.bj,$CLJS.Rj,cM,$CLJS.ui,$CLJS.Ij,$CLJS.Kj],[new $CLJS.ch(null,new $CLJS.h(null,1,[$CLJS.XO,"null"],null),null),$CLJS.pd(MP,new $CLJS.h(null,1,[$CLJS.Ij,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],
null)),DN,"metabase/mbql/schema.cljc",51,$CLJS.Kq,1,612,612,new $CLJS.Q(null,7,5,$CLJS.R,[$CLJS.Kq,$CLJS.BD,$CLJS.V($CLJS.vj,TO),pQ,$CLJS.V($CLJS.vj,TO),HM,$CLJS.V($CLJS.vj,$CLJS.V($CLJS.Hi,TO))],null),$CLJS.Lc,"Schema for a valid + clause.",$CLJS.n(nS)?nS.H:null])):null));return $CLJS.n(a)?a:DN}(),nS],null),new $CLJS.Q(null,2,5,$CLJS.R,[function(){var a=gO.h($CLJS.qd("undefined"!==typeof $CLJS.dL&&"undefined"!==typeof eL&&"undefined"!==typeof fL&&"undefined"!==typeof oS?new $CLJS.Hc(function(){return oS},
$CLJS.pd(uka,new $CLJS.h(null,1,[$CLJS.Cj,!0],null)),$CLJS.Kg([eO,$CLJS.Pi,$CLJS.U,$CLJS.Lj,$CLJS.vi,gO,$CLJS.Ni,$CLJS.bj,$CLJS.Rj,cM,$CLJS.ui,$CLJS.Ij,$CLJS.Kj],[new $CLJS.ch(null,new $CLJS.h(null,1,[$CLJS.XO,"null"],null),null),$CLJS.pd(MP,new $CLJS.h(null,1,[$CLJS.Ij,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),EN,"metabase/mbql/schema.cljc",51,$CLJS.Yr,1,615,615,new $CLJS.Q(null,7,5,$CLJS.R,[$CLJS.Yr,$CLJS.BD,$CLJS.V($CLJS.vj,OP),
pQ,$CLJS.V($CLJS.vj,TO),HM,$CLJS.V($CLJS.vj,$CLJS.V($CLJS.Hi,TO))],null),$CLJS.Lc,"Schema for a valid - clause.",$CLJS.n(oS)?oS.H:null])):null));return $CLJS.n(a)?a:EN}(),oS],null),new $CLJS.Q(null,2,5,$CLJS.R,[function(){var a=gO.h($CLJS.qd("undefined"!==typeof $CLJS.dL&&"undefined"!==typeof eL&&"undefined"!==typeof fL?new $CLJS.Hc(function(){return pS},$CLJS.pd(tka,new $CLJS.h(null,1,[$CLJS.Cj,!0],null)),$CLJS.Kg([eO,$CLJS.Pi,$CLJS.U,$CLJS.Lj,gO,$CLJS.Ni,$CLJS.bj,cM,$CLJS.ui,$CLJS.Ij,$CLJS.Kj],
[new $CLJS.ch(null,new $CLJS.h(null,1,[$CLJS.XO,"null"],null),null),$CLJS.pd(MP,new $CLJS.h(null,1,[$CLJS.Ij,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),$CLJS.Zy,"metabase/mbql/schema.cljc",$CLJS.FF,1,618,new $CLJS.Q(null,7,5,$CLJS.R,[$CLJS.FF,$CLJS.BD,$CLJS.V($CLJS.vj,OP),pQ,$CLJS.V($CLJS.vj,OP),HM,$CLJS.V($CLJS.vj,$CLJS.V($CLJS.Hi,OP))],null),$CLJS.Lc,"Schema for a valid / clause.",$CLJS.n(pS)?pS.H:null])):null));return $CLJS.n(a)?
a:$CLJS.Zy}(),pS],null),new $CLJS.Q(null,2,5,$CLJS.R,[function(){var a=gO.h($CLJS.qd("undefined"!==typeof $CLJS.dL&&"undefined"!==typeof eL&&"undefined"!==typeof fL&&"undefined"!==typeof qS?new $CLJS.Hc(function(){return qS},$CLJS.pd(vka,new $CLJS.h(null,1,[$CLJS.Cj,!0],null)),$CLJS.Kg([eO,$CLJS.Pi,$CLJS.U,$CLJS.Lj,$CLJS.vi,gO,$CLJS.Ni,$CLJS.bj,$CLJS.Rj,cM,$CLJS.ui,$CLJS.Ij,$CLJS.Kj],[new $CLJS.ch(null,new $CLJS.h(null,1,[$CLJS.XO,"null"],null),null),$CLJS.pd(MP,new $CLJS.h(null,1,[$CLJS.Ij,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],
null)),CN,"metabase/mbql/schema.cljc",51,$CLJS.Lq,1,620,620,new $CLJS.Q(null,7,5,$CLJS.R,[$CLJS.Lq,$CLJS.BD,$CLJS.V($CLJS.vj,OP),pQ,$CLJS.V($CLJS.vj,OP),HM,$CLJS.V($CLJS.vj,$CLJS.V($CLJS.Hi,OP))],null),$CLJS.Lc,"Schema for a valid * clause.",$CLJS.n(qS)?qS.H:null])):null));return $CLJS.n(a)?a:CN}(),qS],null),new $CLJS.Q(null,2,5,$CLJS.R,[function(){var a=gO.h($CLJS.qd("undefined"!==typeof $CLJS.dL&&"undefined"!==typeof eL&&"undefined"!==typeof fL&&"undefined"!==typeof cS?new $CLJS.Hc(function(){return cS},
$CLJS.pd(BP,new $CLJS.h(null,1,[$CLJS.Cj,!0],null)),$CLJS.Kg([eO,$CLJS.Pi,$CLJS.U,$CLJS.Lj,$CLJS.vi,gO,$CLJS.Ni,$CLJS.bj,$CLJS.Rj,cM,$CLJS.ui,$CLJS.Ij,$CLJS.Kj],[new $CLJS.ch(null,new $CLJS.h(null,1,[$CLJS.XO,"null"],null),null),$CLJS.pd(MP,new $CLJS.h(null,1,[$CLJS.Ij,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),QP,"metabase/mbql/schema.cljc",58,$CLJS.oF,1,579,579,new $CLJS.Q(null,7,5,$CLJS.R,[$CLJS.oF,yQ,$CLJS.V($CLJS.vj,uL),xQ,$CLJS.V($CLJS.vj,
uL),HM,$CLJS.V($CLJS.vj,$CLJS.V($CLJS.Hi,uL))],null),$CLJS.Lc,"Schema for a valid coalesce clause.",$CLJS.n(cS)?cS.H:null])):null));return $CLJS.n(a)?a:QP}(),cS],null),new $CLJS.Q(null,2,5,$CLJS.R,[function(){var a=gO.h($CLJS.qd("undefined"!==typeof $CLJS.dL&&"undefined"!==typeof eL&&"undefined"!==typeof fL&&"undefined"!==typeof eS?new $CLJS.Hc(function(){return eS},$CLJS.pd(Mka,new $CLJS.h(null,1,[$CLJS.Cj,!0],null)),$CLJS.Kg([eO,$CLJS.Pi,$CLJS.U,$CLJS.Lj,$CLJS.vi,gO,$CLJS.Ni,$CLJS.bj,$CLJS.Rj,cM,
$CLJS.ui,$CLJS.Ij,$CLJS.Kj],[new $CLJS.ch(null,new $CLJS.h(null,1,[$CLJS.XO,"null"],null),null),$CLJS.pd(MP,new $CLJS.h(null,1,[$CLJS.Ij,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),iP,"metabase/mbql/schema.cljc",56,$CLJS.Kw,1,585,585,new $CLJS.Q(null,3,5,$CLJS.R,[$CLJS.Kw,$CLJS.gx,$CLJS.V($CLJS.vj,TP)],null),$CLJS.Lc,"Schema for a valid length clause.",$CLJS.n(eS)?eS.H:null])):null));return $CLJS.n(a)?a:iP}(),eS],null),new $CLJS.Q(null,
2,5,$CLJS.R,[function(){var a=gO.h($CLJS.qd("undefined"!==typeof $CLJS.dL&&"undefined"!==typeof eL&&"undefined"!==typeof fL&&"undefined"!==typeof rS?new $CLJS.Hc(function(){return rS},$CLJS.pd(Cja,new $CLJS.h(null,1,[$CLJS.Cj,!0],null)),$CLJS.Kg([eO,$CLJS.Pi,$CLJS.U,$CLJS.Lj,$CLJS.vi,gO,$CLJS.Ni,$CLJS.bj,$CLJS.Rj,cM,$CLJS.ui,$CLJS.Ij,$CLJS.Kj],[new $CLJS.ch(null,new $CLJS.h(null,1,[$CLJS.XO,"null"],null),null),$CLJS.pd(MP,new $CLJS.h(null,1,[$CLJS.Ij,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],
null)),dO,"metabase/mbql/schema.cljc",55,$CLJS.jF,1,622,622,new $CLJS.Q(null,3,5,$CLJS.R,[$CLJS.jF,$CLJS.BD,$CLJS.V($CLJS.vj,OP)],null),$CLJS.Lc,"Schema for a valid floor clause.",$CLJS.n(rS)?rS.H:null])):null));return $CLJS.n(a)?a:dO}(),rS],null),new $CLJS.Q(null,2,5,$CLJS.R,[function(){var a=gO.h($CLJS.qd("undefined"!==typeof $CLJS.dL&&"undefined"!==typeof eL&&"undefined"!==typeof fL&&"undefined"!==typeof sS?new $CLJS.Hc(function(){return sS},$CLJS.pd(wja,new $CLJS.h(null,1,[$CLJS.Cj,!0],null)),
$CLJS.Kg([eO,$CLJS.Pi,$CLJS.U,$CLJS.Lj,$CLJS.vi,gO,$CLJS.Ni,$CLJS.bj,$CLJS.Rj,cM,$CLJS.ui,$CLJS.Ij,$CLJS.Kj],[new $CLJS.ch(null,new $CLJS.h(null,1,[$CLJS.XO,"null"],null),null),$CLJS.pd(MP,new $CLJS.h(null,1,[$CLJS.Ij,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),SL,"metabase/mbql/schema.cljc",54,$CLJS.GE,1,625,625,new $CLJS.Q(null,3,5,$CLJS.R,[$CLJS.GE,$CLJS.BD,$CLJS.V($CLJS.vj,OP)],null),$CLJS.Lc,"Schema for a valid ceil clause.",$CLJS.n(sS)?
sS.H:null])):null));return $CLJS.n(a)?a:SL}(),sS],null),new $CLJS.Q(null,2,5,$CLJS.R,[function(){var a=gO.h($CLJS.qd("undefined"!==typeof $CLJS.dL&&"undefined"!==typeof eL&&"undefined"!==typeof fL&&"undefined"!==typeof tS?new $CLJS.Hc(function(){return tS},$CLJS.pd(Lja,new $CLJS.h(null,1,[$CLJS.Cj,!0],null)),$CLJS.Kg([eO,$CLJS.Pi,$CLJS.U,$CLJS.Lj,$CLJS.vi,gO,$CLJS.Ni,$CLJS.bj,$CLJS.Rj,cM,$CLJS.ui,$CLJS.Ij,$CLJS.Kj],[new $CLJS.ch(null,new $CLJS.h(null,1,[$CLJS.XO,"null"],null),null),$CLJS.pd(MP,new $CLJS.h(null,
1,[$CLJS.Ij,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),UN,"metabase/mbql/schema.cljc",55,$CLJS.qF,1,628,628,new $CLJS.Q(null,3,5,$CLJS.R,[$CLJS.qF,$CLJS.BD,$CLJS.V($CLJS.vj,OP)],null),$CLJS.Lc,"Schema for a valid round clause.",$CLJS.n(tS)?tS.H:null])):null));return $CLJS.n(a)?a:UN}(),tS],null),new $CLJS.Q(null,2,5,$CLJS.R,[function(){var a=gO.h($CLJS.qd("undefined"!==typeof $CLJS.dL&&"undefined"!==typeof eL&&"undefined"!==typeof fL&&
"undefined"!==typeof uS?new $CLJS.Hc(function(){return uS},$CLJS.pd(tla,new $CLJS.h(null,1,[$CLJS.Cj,!0],null)),$CLJS.Kg([eO,$CLJS.Pi,$CLJS.U,$CLJS.Lj,$CLJS.vi,gO,$CLJS.Ni,$CLJS.bj,$CLJS.Rj,cM,$CLJS.ui,$CLJS.Ij,$CLJS.Kj],[new $CLJS.ch(null,new $CLJS.h(null,1,[$CLJS.XO,"null"],null),null),$CLJS.pd(MP,new $CLJS.h(null,1,[$CLJS.Ij,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),wO,"metabase/mbql/schema.cljc",53,$CLJS.LE,1,631,631,new $CLJS.Q(null,
3,5,$CLJS.R,[$CLJS.LE,$CLJS.BD,$CLJS.V($CLJS.vj,OP)],null),$CLJS.Lc,"Schema for a valid abs clause.",$CLJS.n(uS)?uS.H:null])):null));return $CLJS.n(a)?a:wO}(),uS],null),new $CLJS.Q(null,2,5,$CLJS.R,[function(){var a=gO.h($CLJS.qd("undefined"!==typeof $CLJS.dL&&"undefined"!==typeof eL&&"undefined"!==typeof fL&&"undefined"!==typeof vS?new $CLJS.Hc(function(){return vS},$CLJS.pd(gla,new $CLJS.h(null,1,[$CLJS.Cj,!0],null)),$CLJS.Kg([eO,$CLJS.Pi,$CLJS.U,$CLJS.Lj,$CLJS.vi,gO,$CLJS.Ni,$CLJS.bj,$CLJS.Rj,
cM,$CLJS.ui,$CLJS.Ij,$CLJS.Kj],[new $CLJS.ch(null,new $CLJS.h(null,1,[MQ,"null"],null),null),$CLJS.pd(MP,new $CLJS.h(null,1,[$CLJS.Ij,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),hQ,"metabase/mbql/schema.cljc",69,$CLJS.IE,1,634,634,new $CLJS.Q(null,5,5,$CLJS.R,[$CLJS.IE,$CLJS.BD,$CLJS.V($CLJS.vj,OP),pQ,$CLJS.V($CLJS.vj,OP)],null),$CLJS.Lc,"Schema for a valid power clause.",$CLJS.n(vS)?vS.H:null])):null));return $CLJS.n(a)?a:hQ}(),vS],
null),new $CLJS.Q(null,2,5,$CLJS.R,[function(){var a=gO.h($CLJS.qd("undefined"!==typeof $CLJS.dL&&"undefined"!==typeof eL&&"undefined"!==typeof fL&&"undefined"!==typeof wS?new $CLJS.Hc(function(){return wS},$CLJS.pd(dka,new $CLJS.h(null,1,[$CLJS.Cj,!0],null)),$CLJS.Kg([eO,$CLJS.Pi,$CLJS.U,$CLJS.Lj,$CLJS.vi,gO,$CLJS.Ni,$CLJS.bj,$CLJS.Rj,cM,$CLJS.ui,$CLJS.Ij,$CLJS.Kj],[new $CLJS.ch(null,new $CLJS.h(null,1,[MQ,"null"],null),null),$CLJS.pd(MP,new $CLJS.h(null,1,[$CLJS.Ij,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],
null)),yN,"metabase/mbql/schema.cljc",68,$CLJS.ZE,1,637,637,new $CLJS.Q(null,3,5,$CLJS.R,[$CLJS.ZE,$CLJS.BD,$CLJS.V($CLJS.vj,OP)],null),$CLJS.Lc,"Schema for a valid sqrt clause.",$CLJS.n(wS)?wS.H:null])):null));return $CLJS.n(a)?a:yN}(),wS],null),new $CLJS.Q(null,2,5,$CLJS.R,[function(){var a=gO.h($CLJS.qd("undefined"!==typeof $CLJS.dL&&"undefined"!==typeof eL&&"undefined"!==typeof fL&&"undefined"!==typeof xS?new $CLJS.Hc(function(){return xS},$CLJS.pd(hla,new $CLJS.h(null,1,[$CLJS.Cj,!0],null)),
$CLJS.Kg([eO,$CLJS.Pi,$CLJS.U,$CLJS.Lj,$CLJS.vi,gO,$CLJS.Ni,$CLJS.bj,$CLJS.Rj,cM,$CLJS.ui,$CLJS.Ij,$CLJS.Kj],[new $CLJS.ch(null,new $CLJS.h(null,1,[MQ,"null"],null),null),$CLJS.pd(MP,new $CLJS.h(null,1,[$CLJS.Ij,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),WN,"metabase/mbql/schema.cljc",67,$CLJS.CE,1,640,640,new $CLJS.Q(null,3,5,$CLJS.R,[$CLJS.CE,$CLJS.BD,$CLJS.V($CLJS.vj,OP)],null),$CLJS.Lc,"Schema for a valid exp clause.",$CLJS.n(xS)?
xS.H:null])):null));return $CLJS.n(a)?a:WN}(),xS],null),new $CLJS.Q(null,2,5,$CLJS.R,[function(){var a=gO.h($CLJS.qd("undefined"!==typeof $CLJS.dL&&"undefined"!==typeof eL&&"undefined"!==typeof fL&&"undefined"!==typeof yS?new $CLJS.Hc(function(){return yS},$CLJS.pd(pja,new $CLJS.h(null,1,[$CLJS.Cj,!0],null)),$CLJS.Kg([eO,$CLJS.Pi,$CLJS.U,$CLJS.Lj,$CLJS.vi,gO,$CLJS.Ni,$CLJS.bj,$CLJS.Rj,cM,$CLJS.ui,$CLJS.Ij,$CLJS.Kj],[new $CLJS.ch(null,new $CLJS.h(null,1,[MQ,"null"],null),null),$CLJS.pd(MP,new $CLJS.h(null,
1,[$CLJS.Ij,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),RQ,"metabase/mbql/schema.cljc",67,$CLJS.HF,1,643,643,new $CLJS.Q(null,3,5,$CLJS.R,[$CLJS.HF,$CLJS.BD,$CLJS.V($CLJS.vj,OP)],null),$CLJS.Lc,"Schema for a valid log clause.",$CLJS.n(yS)?yS.H:null])):null));return $CLJS.n(a)?a:RQ}(),yS],null),new $CLJS.Q(null,2,5,$CLJS.R,[function(){var a=gO.h($CLJS.qd("undefined"!==typeof $CLJS.dL&&"undefined"!==typeof eL&&"undefined"!==typeof fL&&
"undefined"!==typeof oT?new $CLJS.Hc(function(){return oT},$CLJS.pd(FL,new $CLJS.h(null,1,[$CLJS.Cj,!0],null)),$CLJS.Kg([eO,$CLJS.Pi,$CLJS.U,$CLJS.Lj,$CLJS.vi,gO,$CLJS.Ni,$CLJS.bj,$CLJS.Rj,cM,$CLJS.ui,$CLJS.Ij,$CLJS.Kj],[new $CLJS.ch(null,new $CLJS.h(null,1,[$CLJS.FE,"null"],null),null),$CLJS.pd(MP,new $CLJS.h(null,1,[$CLJS.Ij,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),nO,"metabase/mbql/schema.cljc",61,$CLJS.UE,1,909,909,new $CLJS.Q(null,
5,5,$CLJS.R,[$CLJS.UE,$CLJS.Xv,$CLJS.V($CLJS.vj,XM),$CLJS.Yi,$CLJS.V($CLJS.vj,$CLJS.V(eQ,GO))],null),$CLJS.Lc,"Schema for a valid case clause.",$CLJS.n(oT)?oT.H:null])):null));return $CLJS.n(a)?a:nO}(),oT],null),new $CLJS.Q(null,2,5,$CLJS.R,[function(){var a=gO.h($CLJS.qd("undefined"!==typeof $CLJS.dL&&"undefined"!==typeof eL&&"undefined"!==typeof fL&&"undefined"!==typeof zS?new $CLJS.Hc(function(){return zS},$CLJS.pd(sja,new $CLJS.h(null,1,[$CLJS.Cj,!0],null)),$CLJS.Kg([eO,$CLJS.Pi,$CLJS.U,$CLJS.Lj,
$CLJS.vi,gO,$CLJS.Ni,$CLJS.bj,$CLJS.Rj,cM,$CLJS.ui,$CLJS.Ij,$CLJS.Kj],[new $CLJS.ch(null,new $CLJS.h(null,1,[$CLJS.TA,"null"],null),null),$CLJS.pd(MP,new $CLJS.h(null,1,[$CLJS.Ij,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),xO,"metabase/mbql/schema.cljc",65,$CLJS.TA,1,656,656,new $CLJS.Q(null,7,5,$CLJS.R,[$CLJS.TA,Fja,$CLJS.V($CLJS.vj,cR),Gja,$CLJS.V($CLJS.vj,cR),$CLJS.Ek,$CLJS.V($CLJS.vj,lka)],null),$CLJS.Lc,"Schema for a valid datetime-diff clause.",
$CLJS.n(zS)?zS.H:null])):null));return $CLJS.n(a)?a:xO}(),zS],null),new $CLJS.Q(null,2,5,$CLJS.R,[function(){var a=gO.h($CLJS.qd("undefined"!==typeof $CLJS.dL&&"undefined"!==typeof eL&&"undefined"!==typeof fL&&"undefined"!==typeof AS?new $CLJS.Hc(function(){return AS},$CLJS.pd(Qka,new $CLJS.h(null,1,[$CLJS.Cj,!0],null)),$CLJS.Kg([eO,$CLJS.Pi,$CLJS.U,$CLJS.Lj,$CLJS.vi,gO,$CLJS.Ni,$CLJS.bj,$CLJS.Rj,cM,$CLJS.ui,$CLJS.Ij,$CLJS.Kj],[new $CLJS.ch(null,new $CLJS.h(null,1,[$CLJS.YA,"null"],null),null),$CLJS.pd(MP,
new $CLJS.h(null,1,[$CLJS.Ij,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),QO,"metabase/mbql/schema.cljc",71,$CLJS.YA,1,661,661,new $CLJS.Q(null,7,5,$CLJS.R,[$CLJS.YA,$CLJS.ZH,$CLJS.V($CLJS.vj,cR),$CLJS.Ek,$CLJS.V($CLJS.vj,mla),$CLJS.xi,$CLJS.V($CLJS.vj,$CLJS.V(eQ,kR))],null),$CLJS.Lc,"Schema for a valid temporal-extract clause.",$CLJS.n(AS)?AS.H:null])):null));return $CLJS.n(a)?a:QO}(),AS],null),new $CLJS.Q(null,2,5,$CLJS.R,[function(){var a=
gO.h($CLJS.qd("undefined"!==typeof $CLJS.dL&&"undefined"!==typeof eL&&"undefined"!==typeof fL&&"undefined"!==typeof BS?new $CLJS.Hc(function(){return BS},$CLJS.pd(Xja,new $CLJS.h(null,1,[$CLJS.Cj,!0],null)),$CLJS.Kg([eO,$CLJS.Pi,$CLJS.U,$CLJS.Lj,$CLJS.vi,gO,$CLJS.Ni,$CLJS.bj,$CLJS.Rj,gQ,cM,$CLJS.ui,$CLJS.Ij,$CLJS.Kj],[new $CLJS.ch(null,new $CLJS.h(null,1,[$CLJS.YA,"null"],null),null),$CLJS.pd(MP,new $CLJS.h(null,1,[$CLJS.Ij,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],
null)),oM,"metabase/mbql/schema.cljc",71,$CLJS.UH,1,667,667,!0,new $CLJS.Q(null,3,5,$CLJS.R,[$CLJS.UH,$CLJS.zO,$CLJS.V($CLJS.vj,cR)],null),$CLJS.Lc,"Schema for a valid get-year clause.",$CLJS.n(BS)?BS.H:null])):null));return $CLJS.n(a)?a:oM}(),BS],null),new $CLJS.Q(null,2,5,$CLJS.R,[function(){var a=gO.h($CLJS.qd("undefined"!==typeof $CLJS.dL&&"undefined"!==typeof eL&&"undefined"!==typeof fL&&"undefined"!==typeof CS?new $CLJS.Hc(function(){return CS},$CLJS.pd(Mja,new $CLJS.h(null,1,[$CLJS.Cj,!0],
null)),$CLJS.Kg([eO,$CLJS.Pi,$CLJS.U,$CLJS.Lj,$CLJS.vi,gO,$CLJS.Ni,$CLJS.bj,$CLJS.Rj,gQ,cM,$CLJS.ui,$CLJS.Ij,$CLJS.Kj],[new $CLJS.ch(null,new $CLJS.h(null,1,[$CLJS.YA,"null"],null),null),$CLJS.pd(MP,new $CLJS.h(null,1,[$CLJS.Ij,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),OO,"metabase/mbql/schema.cljc",74,$CLJS.jI,1,670,670,!0,new $CLJS.Q(null,3,5,$CLJS.R,[$CLJS.jI,$CLJS.zO,$CLJS.V($CLJS.vj,cR)],null),$CLJS.Lc,"Schema for a valid get-quarter clause.",
$CLJS.n(CS)?CS.H:null])):null));return $CLJS.n(a)?a:OO}(),CS],null),new $CLJS.Q(null,2,5,$CLJS.R,[function(){var a=gO.h($CLJS.qd("undefined"!==typeof $CLJS.dL&&"undefined"!==typeof eL&&"undefined"!==typeof fL&&"undefined"!==typeof DS?new $CLJS.Hc(function(){return DS},$CLJS.pd(ska,new $CLJS.h(null,1,[$CLJS.Cj,!0],null)),$CLJS.Kg([eO,$CLJS.Pi,$CLJS.U,$CLJS.Lj,$CLJS.vi,gO,$CLJS.Ni,$CLJS.bj,$CLJS.Rj,gQ,cM,$CLJS.ui,$CLJS.Ij,$CLJS.Kj],[new $CLJS.ch(null,new $CLJS.h(null,1,[$CLJS.YA,"null"],null),null),
$CLJS.pd(MP,new $CLJS.h(null,1,[$CLJS.Ij,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),kP,"metabase/mbql/schema.cljc",72,$CLJS.NH,1,673,673,!0,new $CLJS.Q(null,3,5,$CLJS.R,[$CLJS.NH,$CLJS.zO,$CLJS.V($CLJS.vj,cR)],null),$CLJS.Lc,"Schema for a valid get-month clause.",$CLJS.n(DS)?DS.H:null])):null));return $CLJS.n(a)?a:kP}(),DS],null),new $CLJS.Q(null,2,5,$CLJS.R,[function(){var a=gO.h($CLJS.qd("undefined"!==typeof $CLJS.dL&&"undefined"!==
typeof eL&&"undefined"!==typeof fL&&"undefined"!==typeof ES?new $CLJS.Hc(function(){return ES},$CLJS.pd(lla,new $CLJS.h(null,1,[$CLJS.Cj,!0],null)),$CLJS.Kg([eO,$CLJS.Pi,$CLJS.U,$CLJS.Lj,$CLJS.vi,gO,$CLJS.Ni,$CLJS.bj,$CLJS.Rj,gQ,cM,$CLJS.ui,$CLJS.Ij,$CLJS.Kj],[new $CLJS.ch(null,new $CLJS.h(null,1,[$CLJS.YA,"null"],null),null),$CLJS.pd(MP,new $CLJS.h(null,1,[$CLJS.Ij,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),jP,"metabase/mbql/schema.cljc",
71,$CLJS.WA,1,676,676,!0,new $CLJS.Q(null,5,5,$CLJS.R,[$CLJS.WA,$CLJS.zO,$CLJS.V($CLJS.vj,cR),$CLJS.xi,$CLJS.V($CLJS.vj,$CLJS.V(eQ,kR))],null),$CLJS.Lc,"Schema for a valid get-week clause.",$CLJS.n(ES)?ES.H:null])):null));return $CLJS.n(a)?a:jP}(),ES],null),new $CLJS.Q(null,2,5,$CLJS.R,[function(){var a=gO.h($CLJS.qd("undefined"!==typeof $CLJS.dL&&"undefined"!==typeof eL&&"undefined"!==typeof fL&&"undefined"!==typeof FS?new $CLJS.Hc(function(){return FS},$CLJS.pd(gja,new $CLJS.h(null,1,[$CLJS.Cj,
!0],null)),$CLJS.Kg([eO,$CLJS.Pi,$CLJS.U,$CLJS.Lj,$CLJS.vi,gO,$CLJS.Ni,$CLJS.bj,$CLJS.Rj,gQ,cM,$CLJS.ui,$CLJS.Ij,$CLJS.Kj],[new $CLJS.ch(null,new $CLJS.h(null,1,[$CLJS.YA,"null"],null),null),$CLJS.pd(MP,new $CLJS.h(null,1,[$CLJS.Ij,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),cP,"metabase/mbql/schema.cljc",70,$CLJS.cI,1,680,680,!0,new $CLJS.Q(null,3,5,$CLJS.R,[$CLJS.cI,$CLJS.zO,$CLJS.V($CLJS.vj,cR)],null),$CLJS.Lc,"Schema for a valid get-day clause.",
$CLJS.n(FS)?FS.H:null])):null));return $CLJS.n(a)?a:cP}(),FS],null),new $CLJS.Q(null,2,5,$CLJS.R,[function(){var a=gO.h($CLJS.qd("undefined"!==typeof $CLJS.dL&&"undefined"!==typeof eL&&"undefined"!==typeof fL&&"undefined"!==typeof GS?new $CLJS.Hc(function(){return GS},$CLJS.pd(mka,new $CLJS.h(null,1,[$CLJS.Cj,!0],null)),$CLJS.Kg([eO,$CLJS.Pi,$CLJS.U,$CLJS.Lj,$CLJS.vi,gO,$CLJS.Ni,$CLJS.bj,$CLJS.Rj,gQ,cM,$CLJS.ui,$CLJS.Ij,$CLJS.Kj],[new $CLJS.ch(null,new $CLJS.h(null,1,[$CLJS.YA,"null"],null),null),
$CLJS.pd(MP,new $CLJS.h(null,1,[$CLJS.Ij,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),UO,"metabase/mbql/schema.cljc",78,$CLJS.fI,1,683,683,!0,new $CLJS.Q(null,3,5,$CLJS.R,[$CLJS.fI,$CLJS.zO,$CLJS.V($CLJS.vj,cR)],null),$CLJS.Lc,"Schema for a valid get-day-of-week clause.",$CLJS.n(GS)?GS.H:null])):null));return $CLJS.n(a)?a:UO}(),GS],null),new $CLJS.Q(null,2,5,$CLJS.R,[function(){var a=gO.h($CLJS.qd("undefined"!==typeof $CLJS.dL&&"undefined"!==
typeof eL&&"undefined"!==typeof fL&&"undefined"!==typeof HS?new $CLJS.Hc(function(){return HS},$CLJS.pd(kka,new $CLJS.h(null,1,[$CLJS.Cj,!0],null)),$CLJS.Kg([eO,$CLJS.Pi,$CLJS.U,$CLJS.Lj,$CLJS.vi,gO,$CLJS.Ni,$CLJS.bj,$CLJS.Rj,gQ,cM,$CLJS.ui,$CLJS.Ij,$CLJS.Kj],[new $CLJS.ch(null,new $CLJS.h(null,1,[$CLJS.YA,"null"],null),null),$CLJS.pd(MP,new $CLJS.h(null,1,[$CLJS.Ij,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),vL,"metabase/mbql/schema.cljc",
71,$CLJS.hI,1,686,686,!0,new $CLJS.Q(null,3,5,$CLJS.R,[$CLJS.hI,$CLJS.ZH,$CLJS.V($CLJS.vj,cR)],null),$CLJS.Lc,"Schema for a valid get-hour clause.",$CLJS.n(HS)?HS.H:null])):null));return $CLJS.n(a)?a:vL}(),HS],null),new $CLJS.Q(null,2,5,$CLJS.R,[function(){var a=gO.h($CLJS.qd("undefined"!==typeof $CLJS.dL&&"undefined"!==typeof eL&&"undefined"!==typeof fL&&"undefined"!==typeof IS?new $CLJS.Hc(function(){return IS},$CLJS.pd(Uka,new $CLJS.h(null,1,[$CLJS.Cj,!0],null)),$CLJS.Kg([eO,$CLJS.Pi,$CLJS.U,$CLJS.Lj,
$CLJS.vi,gO,$CLJS.Ni,$CLJS.bj,$CLJS.Rj,gQ,cM,$CLJS.ui,$CLJS.Ij,$CLJS.Kj],[new $CLJS.ch(null,new $CLJS.h(null,1,[$CLJS.YA,"null"],null),null),$CLJS.pd(MP,new $CLJS.h(null,1,[$CLJS.Ij,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),VQ,"metabase/mbql/schema.cljc",73,$CLJS.eI,1,689,689,!0,new $CLJS.Q(null,3,5,$CLJS.R,[$CLJS.eI,$CLJS.ZH,$CLJS.V($CLJS.vj,cR)],null),$CLJS.Lc,"Schema for a valid get-minute clause.",$CLJS.n(IS)?IS.H:null])):null));
return $CLJS.n(a)?a:VQ}(),IS],null),new $CLJS.Q(null,2,5,$CLJS.R,[function(){var a=gO.h($CLJS.qd("undefined"!==typeof $CLJS.dL&&"undefined"!==typeof eL&&"undefined"!==typeof fL&&"undefined"!==typeof JS?new $CLJS.Hc(function(){return JS},$CLJS.pd(hka,new $CLJS.h(null,1,[$CLJS.Cj,!0],null)),$CLJS.Kg([eO,$CLJS.Pi,$CLJS.U,$CLJS.Lj,$CLJS.vi,gO,$CLJS.Ni,$CLJS.bj,$CLJS.Rj,gQ,cM,$CLJS.ui,$CLJS.Ij,$CLJS.Kj],[new $CLJS.ch(null,new $CLJS.h(null,1,[$CLJS.YA,"null"],null),null),$CLJS.pd(MP,new $CLJS.h(null,1,
[$CLJS.Ij,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),pO,"metabase/mbql/schema.cljc",73,$CLJS.TH,1,692,692,!0,new $CLJS.Q(null,3,5,$CLJS.R,[$CLJS.TH,$CLJS.ZH,$CLJS.V($CLJS.vj,cR)],null),$CLJS.Lc,"Schema for a valid get-second clause.",$CLJS.n(JS)?JS.H:null])):null));return $CLJS.n(a)?a:pO}(),JS],null)])));
$CLJS.Y(KL,bL($CLJS.H([new $CLJS.Q(null,2,5,$CLJS.R,[function(){var a=gO.h($CLJS.qd("undefined"!==typeof $CLJS.dL&&"undefined"!==typeof eL&&"undefined"!==typeof fL&&"undefined"!==typeof dS?new $CLJS.Hc(function(){return dS},$CLJS.pd(Kka,new $CLJS.h(null,1,[$CLJS.Cj,!0],null)),$CLJS.Kg([eO,$CLJS.Pi,$CLJS.U,$CLJS.Lj,$CLJS.vi,gO,$CLJS.Ni,$CLJS.bj,$CLJS.Rj,cM,$CLJS.ui,$CLJS.Ij,$CLJS.Kj],[new $CLJS.ch(null,new $CLJS.h(null,1,[$CLJS.XO,"null"],null),null),$CLJS.pd(MP,new $CLJS.h(null,1,[$CLJS.Ij,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],
null)),sP,"metabase/mbql/schema.cljc",59,$CLJS.DE,1,582,582,new $CLJS.Q(null,7,5,$CLJS.R,[$CLJS.DE,$CLJS.gx,$CLJS.V($CLJS.vj,TP),$CLJS.tu,$CLJS.V($CLJS.vj,Ija),$CLJS.Kw,$CLJS.V($CLJS.vj,$CLJS.V(eQ,OP))],null),$CLJS.Lc,"Schema for a valid substring clause.",$CLJS.n(dS)?dS.H:null])):null));return $CLJS.n(a)?a:sP}(),dS],null),new $CLJS.Q(null,2,5,$CLJS.R,[function(){var a=gO.h($CLJS.qd("undefined"!==typeof $CLJS.dL&&"undefined"!==typeof eL&&"undefined"!==typeof fL&&"undefined"!==typeof fS?new $CLJS.Hc(function(){return fS},
$CLJS.pd(jla,new $CLJS.h(null,1,[$CLJS.Cj,!0],null)),$CLJS.Kg([eO,$CLJS.Pi,$CLJS.U,$CLJS.Lj,$CLJS.vi,gO,$CLJS.Ni,$CLJS.bj,$CLJS.Rj,cM,$CLJS.ui,$CLJS.Ij,$CLJS.Kj],[new $CLJS.ch(null,new $CLJS.h(null,1,[$CLJS.XO,"null"],null),null),$CLJS.pd(MP,new $CLJS.h(null,1,[$CLJS.Ij,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),PP,"metabase/mbql/schema.cljc",54,$CLJS.AF,1,588,588,new $CLJS.Q(null,3,5,$CLJS.R,[$CLJS.AF,$CLJS.gx,$CLJS.V($CLJS.vj,TP)],
null),$CLJS.Lc,"Schema for a valid trim clause.",$CLJS.n(fS)?fS.H:null])):null));return $CLJS.n(a)?a:PP}(),fS],null),new $CLJS.Q(null,2,5,$CLJS.R,[function(){var a=gO.h($CLJS.qd("undefined"!==typeof $CLJS.dL&&"undefined"!==typeof eL&&"undefined"!==typeof fL&&"undefined"!==typeof hS?new $CLJS.Hc(function(){return hS},$CLJS.pd(nka,new $CLJS.h(null,1,[$CLJS.Cj,!0],null)),$CLJS.Kg([eO,$CLJS.Pi,$CLJS.U,$CLJS.Lj,$CLJS.vi,gO,$CLJS.Ni,$CLJS.bj,$CLJS.Rj,cM,$CLJS.ui,$CLJS.Ij,$CLJS.Kj],[new $CLJS.ch(null,new $CLJS.h(null,
1,[$CLJS.XO,"null"],null),null),$CLJS.pd(MP,new $CLJS.h(null,1,[$CLJS.Ij,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),yP,"metabase/mbql/schema.cljc",55,$CLJS.CF,1,594,594,new $CLJS.Q(null,3,5,$CLJS.R,[$CLJS.CF,$CLJS.gx,$CLJS.V($CLJS.vj,TP)],null),$CLJS.Lc,"Schema for a valid ltrim clause.",$CLJS.n(hS)?hS.H:null])):null));return $CLJS.n(a)?a:yP}(),hS],null),new $CLJS.Q(null,2,5,$CLJS.R,[function(){var a=gO.h($CLJS.qd("undefined"!==typeof $CLJS.dL&&
"undefined"!==typeof eL&&"undefined"!==typeof fL&&"undefined"!==typeof gS?new $CLJS.Hc(function(){return gS},$CLJS.pd(Lka,new $CLJS.h(null,1,[$CLJS.Cj,!0],null)),$CLJS.Kg([eO,$CLJS.Pi,$CLJS.U,$CLJS.Lj,$CLJS.vi,gO,$CLJS.Ni,$CLJS.bj,$CLJS.Rj,cM,$CLJS.ui,$CLJS.Ij,$CLJS.Kj],[new $CLJS.ch(null,new $CLJS.h(null,1,[$CLJS.XO,"null"],null),null),$CLJS.pd(MP,new $CLJS.h(null,1,[$CLJS.Ij,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),BO,"metabase/mbql/schema.cljc",
55,$CLJS.JF,1,591,591,new $CLJS.Q(null,3,5,$CLJS.R,[$CLJS.JF,$CLJS.gx,$CLJS.V($CLJS.vj,TP)],null),$CLJS.Lc,"Schema for a valid rtrim clause.",$CLJS.n(gS)?gS.H:null])):null));return $CLJS.n(a)?a:BO}(),gS],null),new $CLJS.Q(null,2,5,$CLJS.R,[function(){var a=gO.h($CLJS.qd("undefined"!==typeof $CLJS.dL&&"undefined"!==typeof eL&&"undefined"!==typeof fL&&"undefined"!==typeof kS?new $CLJS.Hc(function(){return kS},$CLJS.pd(bja,new $CLJS.h(null,1,[$CLJS.Cj,!0],null)),$CLJS.Kg([eO,$CLJS.Pi,$CLJS.U,$CLJS.Lj,
$CLJS.vi,gO,$CLJS.Ni,$CLJS.bj,$CLJS.Rj,cM,$CLJS.ui,$CLJS.Ij,$CLJS.Kj],[new $CLJS.ch(null,new $CLJS.h(null,1,[$CLJS.XO,"null"],null),null),$CLJS.pd(MP,new $CLJS.h(null,1,[$CLJS.Ij,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),AQ,"metabase/mbql/schema.cljc",57,$CLJS.IF,1,603,603,new $CLJS.Q(null,7,5,$CLJS.R,[$CLJS.IF,$CLJS.gx,$CLJS.V($CLJS.vj,TP),nja,$CLJS.V($CLJS.vj,$CLJS.Bj),$CLJS.fz,$CLJS.V($CLJS.vj,$CLJS.Bj)],null),$CLJS.Lc,"Schema for a valid replace clause.",
$CLJS.n(kS)?kS.H:null])):null));return $CLJS.n(a)?a:AQ}(),kS],null),new $CLJS.Q(null,2,5,$CLJS.R,[function(){var a=gO.h($CLJS.qd("undefined"!==typeof $CLJS.dL&&"undefined"!==typeof eL&&"undefined"!==typeof fL&&"undefined"!==typeof jS?new $CLJS.Hc(function(){return jS},$CLJS.pd(Oka,new $CLJS.h(null,1,[$CLJS.Cj,!0],null)),$CLJS.Kg([eO,$CLJS.Pi,$CLJS.U,$CLJS.Lj,$CLJS.vi,gO,$CLJS.Ni,$CLJS.bj,$CLJS.Rj,cM,$CLJS.ui,$CLJS.Ij,$CLJS.Kj],[new $CLJS.ch(null,new $CLJS.h(null,1,[$CLJS.XO,"null"],null),null),$CLJS.pd(MP,
new $CLJS.h(null,1,[$CLJS.Ij,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),fR,"metabase/mbql/schema.cljc",55,$CLJS.os,1,600,600,new $CLJS.Q(null,3,5,$CLJS.R,[$CLJS.os,$CLJS.gx,$CLJS.V($CLJS.vj,TP)],null),$CLJS.Lc,"Schema for a valid lower clause.",$CLJS.n(jS)?jS.H:null])):null));return $CLJS.n(a)?a:fR}(),jS],null),new $CLJS.Q(null,2,5,$CLJS.R,[function(){var a=gO.h($CLJS.qd("undefined"!==typeof $CLJS.dL&&"undefined"!==typeof eL&&"undefined"!==
typeof fL&&"undefined"!==typeof iS?new $CLJS.Hc(function(){return iS},$CLJS.pd(kla,new $CLJS.h(null,1,[$CLJS.Cj,!0],null)),$CLJS.Kg([eO,$CLJS.Pi,$CLJS.U,$CLJS.Lj,$CLJS.vi,gO,$CLJS.Ni,$CLJS.bj,$CLJS.Rj,cM,$CLJS.ui,$CLJS.Ij,$CLJS.Kj],[new $CLJS.ch(null,new $CLJS.h(null,1,[$CLJS.XO,"null"],null),null),$CLJS.pd(MP,new $CLJS.h(null,1,[$CLJS.Ij,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),bQ,"metabase/mbql/schema.cljc",55,$CLJS.is,1,597,597,
new $CLJS.Q(null,3,5,$CLJS.R,[$CLJS.is,$CLJS.gx,$CLJS.V($CLJS.vj,TP)],null),$CLJS.Lc,"Schema for a valid upper clause.",$CLJS.n(iS)?iS.H:null])):null));return $CLJS.n(a)?a:bQ}(),iS],null),new $CLJS.Q(null,2,5,$CLJS.R,[function(){var a=gO.h($CLJS.qd("undefined"!==typeof $CLJS.dL&&"undefined"!==typeof eL&&"undefined"!==typeof fL&&"undefined"!==typeof lS?new $CLJS.Hc(function(){return lS},$CLJS.pd(Cka,new $CLJS.h(null,1,[$CLJS.Cj,!0],null)),$CLJS.Kg([eO,$CLJS.Pi,$CLJS.U,$CLJS.Lj,$CLJS.vi,gO,$CLJS.Ni,
$CLJS.bj,$CLJS.Rj,cM,$CLJS.ui,$CLJS.Ij,$CLJS.Kj],[new $CLJS.ch(null,new $CLJS.h(null,1,[$CLJS.XO,"null"],null),null),$CLJS.pd(MP,new $CLJS.h(null,1,[$CLJS.Ij,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),pN,"metabase/mbql/schema.cljc",56,$CLJS.KE,1,606,606,new $CLJS.Q(null,7,5,$CLJS.R,[$CLJS.KE,yQ,$CLJS.V($CLJS.vj,TP),xQ,$CLJS.V($CLJS.vj,TP),HM,$CLJS.V($CLJS.vj,$CLJS.V($CLJS.Hi,TP))],null),$CLJS.Lc,"Schema for a valid concat clause.",
$CLJS.n(lS)?lS.H:null])):null));return $CLJS.n(a)?a:pN}(),lS],null),new $CLJS.Q(null,2,5,$CLJS.R,[function(){var a=gO.h($CLJS.qd("undefined"!==typeof $CLJS.dL&&"undefined"!==typeof eL&&"undefined"!==typeof fL&&"undefined"!==typeof mS?new $CLJS.Hc(function(){return mS},$CLJS.pd(Jka,new $CLJS.h(null,1,[$CLJS.Cj,!0],null)),$CLJS.Kg([eO,$CLJS.Pi,$CLJS.U,$CLJS.Lj,$CLJS.vi,gO,$CLJS.Ni,$CLJS.bj,$CLJS.Rj,cM,$CLJS.ui,$CLJS.Ij,$CLJS.Kj],[new $CLJS.ch(null,new $CLJS.h(null,2,[$CLJS.XO,"null",$CLJS.Mk,"null"],
null),null),$CLJS.pd(MP,new $CLJS.h(null,1,[$CLJS.Ij,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),mM,"metabase/mbql/schema.cljc",74,$CLJS.nF,1,609,609,new $CLJS.Q(null,5,5,$CLJS.R,[$CLJS.nF,$CLJS.gx,$CLJS.V($CLJS.vj,TP),$CLJS.ez,$CLJS.V($CLJS.vj,$CLJS.Bj)],null),$CLJS.Lc,"Schema for a valid regex-match-first clause.",$CLJS.n(mS)?mS.H:null])):null));return $CLJS.n(a)?a:mM}(),mS],null),new $CLJS.Q(null,2,5,$CLJS.R,[function(){var a=gO.h($CLJS.qd("undefined"!==
typeof $CLJS.dL&&"undefined"!==typeof eL&&"undefined"!==typeof fL&&"undefined"!==typeof cS?new $CLJS.Hc(function(){return cS},$CLJS.pd(BP,new $CLJS.h(null,1,[$CLJS.Cj,!0],null)),$CLJS.Kg([eO,$CLJS.Pi,$CLJS.U,$CLJS.Lj,$CLJS.vi,gO,$CLJS.Ni,$CLJS.bj,$CLJS.Rj,cM,$CLJS.ui,$CLJS.Ij,$CLJS.Kj],[new $CLJS.ch(null,new $CLJS.h(null,1,[$CLJS.XO,"null"],null),null),$CLJS.pd(MP,new $CLJS.h(null,1,[$CLJS.Ij,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),
QP,"metabase/mbql/schema.cljc",58,$CLJS.oF,1,579,579,new $CLJS.Q(null,7,5,$CLJS.R,[$CLJS.oF,yQ,$CLJS.V($CLJS.vj,uL),xQ,$CLJS.V($CLJS.vj,uL),HM,$CLJS.V($CLJS.vj,$CLJS.V($CLJS.Hi,uL))],null),$CLJS.Lc,"Schema for a valid coalesce clause.",$CLJS.n(cS)?cS.H:null])):null));return $CLJS.n(a)?a:QP}(),cS],null),new $CLJS.Q(null,2,5,$CLJS.R,[function(){var a=gO.h($CLJS.qd("undefined"!==typeof $CLJS.dL&&"undefined"!==typeof eL&&"undefined"!==typeof fL&&"undefined"!==typeof oT?new $CLJS.Hc(function(){return oT},
$CLJS.pd(FL,new $CLJS.h(null,1,[$CLJS.Cj,!0],null)),$CLJS.Kg([eO,$CLJS.Pi,$CLJS.U,$CLJS.Lj,$CLJS.vi,gO,$CLJS.Ni,$CLJS.bj,$CLJS.Rj,cM,$CLJS.ui,$CLJS.Ij,$CLJS.Kj],[new $CLJS.ch(null,new $CLJS.h(null,1,[$CLJS.FE,"null"],null),null),$CLJS.pd(MP,new $CLJS.h(null,1,[$CLJS.Ij,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),nO,"metabase/mbql/schema.cljc",61,$CLJS.UE,1,909,909,new $CLJS.Q(null,5,5,$CLJS.R,[$CLJS.UE,$CLJS.Xv,$CLJS.V($CLJS.vj,XM),
$CLJS.Yi,$CLJS.V($CLJS.vj,$CLJS.V(eQ,GO))],null),$CLJS.Lc,"Schema for a valid case clause.",$CLJS.n(oT)?oT.H:null])):null));return $CLJS.n(a)?a:nO}(),oT],null)])));
$CLJS.pT=new $CLJS.Q(null,8,5,$CLJS.R,[$CLJS.lr,new $CLJS.h(null,2,[$CLJS.ss,":field or :expression reference or expression",$CLJS.Ji,function(a){return $CLJS.n($K(QR,a))?dR:$CLJS.n($K(NR,a))?$CLJS.Bj:$CLJS.n($K(RR,a))?$CLJS.vr:$CLJS.n($K(TR,a))?$CLJS.ZH:$CLJS.n($K($CLJS.UE,a))?$CLJS.UE:$CLJS.ks}],null),new $CLJS.Q(null,2,5,$CLJS.R,[dR,UR],null),new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.Bj,OR],null),new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.vr,VR],null),new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.ZH,$CLJS.WR],null),
new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.UE,oT],null),new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.ks,$CLJS.KR],null)],null);$CLJS.Y(JQ,aL($CLJS.Mw,$CLJS.H(["field",new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.Ar,$CLJS.KR],null)])));var qT=new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.W,JQ],null);$CLJS.Y(yO,aL($CLJS.mF,$CLJS.H(["field",new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.Ar,$CLJS.KR],null)])));var rT=new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.W,yO],null);$CLJS.Y(IL,aL($CLJS.fF,$CLJS.H(["field-or-expression",$CLJS.pT])));
var sT=new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.W,IL],null);$CLJS.Y(BQ,aL($CLJS.GF,$CLJS.H(["field-or-expression",$CLJS.pT])));var tT=new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.W,BQ],null);$CLJS.Y(hN,aL($CLJS.QE,$CLJS.H(["field-or-expression",$CLJS.pT])));var uT=new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.W,hN],null);$CLJS.Y(RP,aL($CLJS.xF,$CLJS.H(["field-or-expression",$CLJS.pT])));var vT=new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.W,RP],null);$CLJS.Y(cN,aL($CLJS.ln,$CLJS.H(["field-or-expression",$CLJS.pT])));
var wT=new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.W,cN],null);$CLJS.Y(PM,aL($CLJS.Hj,$CLJS.H(["field-or-expression",$CLJS.pT])));var xT=new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.W,PM],null);$CLJS.Y(JM,aL($CLJS.EF,$CLJS.H(["field-or-expression",$CLJS.pT,"pred",$CLJS.PS])));var yT=new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.W,JM],null);$CLJS.Y($M,aL($CLJS.uF,$CLJS.H(["pred",$CLJS.PS])));var zT=new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.W,$M],null);$CLJS.Y(IP,aL($CLJS.sF,$CLJS.H(["pred",$CLJS.PS])));
var AT=new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.W,IP],null);$CLJS.Y(fM,aL($CLJS.zF,$CLJS.H(["field-or-expression",$CLJS.pT])));var BT=new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.W,fM],null);$CLJS.Y(hL,aL($CLJS.RE,$CLJS.H(["field-or-expression",$CLJS.pT])));var CT=new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.W,hL],null);$CLJS.Y(lN,aL($CLJS.yF,$CLJS.H(["field-or-expression",$CLJS.pT])));var DT=new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.W,lN],null);$CLJS.Y(ZN,aL($CLJS.XE,$CLJS.H(["field-or-expression",$CLJS.pT,"percentile",ZR])));
var ET=new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.W,ZN],null);$CLJS.Y(LP,aL($CLJS.gF,$CLJS.H(["metric-id",new $CLJS.Q(null,3,5,$CLJS.R,[$CLJS.fr,new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.W,$CLJS.HJ],null),lR],null)])));var FT=new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.W,LP],null);
$CLJS.Y(HP,new $CLJS.Q(null,4,5,$CLJS.R,[$CLJS.lr,new $CLJS.h(null,2,[$CLJS.ss,"unnamed aggregation clause or numeric expression",$CLJS.Ji,function(a){return $CLJS.n($K(QR,a))?bO:$CLJS.ks}],null),new $CLJS.Q(null,2,5,$CLJS.R,[bO,UR],null),new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.ks,bL($CLJS.H([new $CLJS.Q(null,2,5,$CLJS.R,[function(){var a=gO.h($CLJS.qd("undefined"!==typeof $CLJS.dL&&"undefined"!==typeof eL&&"undefined"!==typeof fL&&"undefined"!==typeof sT?new $CLJS.Hc(function(){return sT},$CLJS.pd(Ika,
new $CLJS.h(null,1,[$CLJS.Cj,!0],null)),$CLJS.Kg([eO,$CLJS.Pi,$CLJS.U,$CLJS.Lj,$CLJS.vi,gO,$CLJS.Ni,$CLJS.bj,$CLJS.Rj,cM,$CLJS.ui,$CLJS.Ij,$CLJS.Kj],[new $CLJS.ch(null,new $CLJS.h(null,1,[$CLJS.FE,"null"],null),null),$CLJS.pd(MP,new $CLJS.h(null,1,[$CLJS.Ij,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),kO,"metabase/mbql/schema.cljc",60,$CLJS.fF,1,957,957,new $CLJS.Q(null,3,5,$CLJS.R,[$CLJS.fF,cQ,$CLJS.V($CLJS.vj,VP)],null),$CLJS.Lc,"Schema for a valid avg clause.",
$CLJS.n(sT)?sT.H:null])):null));return $CLJS.n(a)?a:kO}(),sT],null),new $CLJS.Q(null,2,5,$CLJS.R,[function(){var a=gO.h($CLJS.qd("undefined"!==typeof $CLJS.dL&&"undefined"!==typeof eL&&"undefined"!==typeof fL&&"undefined"!==typeof tT?new $CLJS.Hc(function(){return tT},$CLJS.pd(Tja,new $CLJS.h(null,1,[$CLJS.Cj,!0],null)),$CLJS.Kg([eO,$CLJS.Pi,$CLJS.U,$CLJS.Lj,$CLJS.vi,gO,$CLJS.Ni,$CLJS.bj,$CLJS.Rj,cM,$CLJS.ui,$CLJS.Ij,$CLJS.Kj],[new $CLJS.ch(null,new $CLJS.h(null,1,[$CLJS.FE,"null"],null),null),$CLJS.pd(MP,
new $CLJS.h(null,1,[$CLJS.Ij,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),oQ,"metabase/mbql/schema.cljc",64,$CLJS.GF,1,958,958,new $CLJS.Q(null,3,5,$CLJS.R,[$CLJS.GF,cQ,$CLJS.V($CLJS.vj,VP)],null),$CLJS.Lc,"Schema for a valid cum-sum clause.",$CLJS.n(tT)?tT.H:null])):null));return $CLJS.n(a)?a:oQ}(),tT],null),new $CLJS.Q(null,2,5,$CLJS.R,[function(){var a=gO.h($CLJS.qd("undefined"!==typeof $CLJS.dL&&"undefined"!==typeof eL&&"undefined"!==
typeof fL&&"undefined"!==typeof uT?new $CLJS.Hc(function(){return uT},$CLJS.pd(Kja,new $CLJS.h(null,1,[$CLJS.Cj,!0],null)),$CLJS.Kg([eO,$CLJS.Pi,$CLJS.U,$CLJS.Lj,$CLJS.vi,gO,$CLJS.Ni,$CLJS.bj,$CLJS.Rj,cM,$CLJS.ui,$CLJS.Ij,$CLJS.Kj],[new $CLJS.ch(null,new $CLJS.h(null,1,[$CLJS.FE,"null"],null),null),$CLJS.pd(MP,new $CLJS.h(null,1,[$CLJS.Ij,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),oO,"metabase/mbql/schema.cljc",65,$CLJS.QE,1,959,959,
new $CLJS.Q(null,3,5,$CLJS.R,[$CLJS.QE,cQ,$CLJS.V($CLJS.vj,VP)],null),$CLJS.Lc,"Schema for a valid distinct clause.",$CLJS.n(uT)?uT.H:null])):null));return $CLJS.n(a)?a:oO}(),uT],null),new $CLJS.Q(null,2,5,$CLJS.R,[function(){var a=gO.h($CLJS.qd("undefined"!==typeof $CLJS.dL&&"undefined"!==typeof eL&&"undefined"!==typeof fL&&"undefined"!==typeof BT?new $CLJS.Hc(function(){return BT},$CLJS.pd(dla,new $CLJS.h(null,1,[$CLJS.Cj,!0],null)),$CLJS.Kg([eO,$CLJS.Pi,$CLJS.U,$CLJS.Lj,$CLJS.vi,gO,$CLJS.Ni,$CLJS.bj,
$CLJS.Rj,cM,$CLJS.ui,$CLJS.Ij,$CLJS.Kj],[new $CLJS.ch(null,new $CLJS.h(null,1,[$CLJS.vF,"null"],null),null),$CLJS.pd(MP,new $CLJS.h(null,1,[$CLJS.Ij,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),CL,"metabase/mbql/schema.cljc",76,$CLJS.zF,1,973,973,new $CLJS.Q(null,3,5,$CLJS.R,[$CLJS.zF,cQ,$CLJS.V($CLJS.vj,VP)],null),$CLJS.Lc,"Schema for a valid stddev clause.",$CLJS.n(BT)?BT.H:null])):null));return $CLJS.n(a)?a:CL}(),BT],null),new $CLJS.Q(null,
2,5,$CLJS.R,[function(){var a=gO.h($CLJS.qd("undefined"!==typeof $CLJS.dL&&"undefined"!==typeof eL&&"undefined"!==typeof fL&&"undefined"!==typeof vT?new $CLJS.Hc(function(){return vT},$CLJS.pd(xka,new $CLJS.h(null,1,[$CLJS.Cj,!0],null)),$CLJS.Kg([eO,$CLJS.Pi,$CLJS.U,$CLJS.Lj,$CLJS.vi,gO,$CLJS.Ni,$CLJS.bj,$CLJS.Rj,cM,$CLJS.ui,$CLJS.Ij,$CLJS.Kj],[new $CLJS.ch(null,new $CLJS.h(null,1,[$CLJS.FE,"null"],null),null),$CLJS.pd(MP,new $CLJS.h(null,1,[$CLJS.Ij,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],
null)),YL,"metabase/mbql/schema.cljc",60,$CLJS.xF,1,960,960,new $CLJS.Q(null,3,5,$CLJS.R,[$CLJS.xF,cQ,$CLJS.V($CLJS.vj,VP)],null),$CLJS.Lc,"Schema for a valid sum clause.",$CLJS.n(vT)?vT.H:null])):null));return $CLJS.n(a)?a:YL}(),vT],null),new $CLJS.Q(null,2,5,$CLJS.R,[function(){var a=gO.h($CLJS.qd("undefined"!==typeof $CLJS.dL&&"undefined"!==typeof eL&&"undefined"!==typeof fL&&"undefined"!==typeof wT?new $CLJS.Hc(function(){return wT},$CLJS.pd(kja,new $CLJS.h(null,1,[$CLJS.Cj,!0],null)),$CLJS.Kg([eO,
$CLJS.Pi,$CLJS.U,$CLJS.Lj,$CLJS.vi,gO,$CLJS.Ni,$CLJS.bj,$CLJS.Rj,cM,$CLJS.ui,$CLJS.Ij,$CLJS.Kj],[new $CLJS.ch(null,new $CLJS.h(null,1,[$CLJS.FE,"null"],null),null),$CLJS.pd(MP,new $CLJS.h(null,1,[$CLJS.Ij,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),$CLJS.Lr,"metabase/mbql/schema.cljc",60,$CLJS.ln,1,961,961,new $CLJS.Q(null,3,5,$CLJS.R,[$CLJS.ln,cQ,$CLJS.V($CLJS.vj,VP)],null),$CLJS.Lc,"Schema for a valid min clause.",$CLJS.n(wT)?wT.H:
null])):null));return $CLJS.n(a)?a:$CLJS.Lr}(),wT],null),new $CLJS.Q(null,2,5,$CLJS.R,[function(){var a=gO.h($CLJS.qd("undefined"!==typeof $CLJS.dL&&"undefined"!==typeof eL&&"undefined"!==typeof fL&&"undefined"!==typeof xT?new $CLJS.Hc(function(){return xT},$CLJS.pd(fja,new $CLJS.h(null,1,[$CLJS.Cj,!0],null)),$CLJS.Kg([eO,$CLJS.Pi,$CLJS.U,$CLJS.Lj,$CLJS.vi,gO,$CLJS.Ni,$CLJS.bj,$CLJS.Rj,cM,$CLJS.ui,$CLJS.Ij,$CLJS.Kj],[new $CLJS.ch(null,new $CLJS.h(null,1,[$CLJS.FE,"null"],null),null),$CLJS.pd(MP,new $CLJS.h(null,
1,[$CLJS.Ij,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),$CLJS.Pr,"metabase/mbql/schema.cljc",60,$CLJS.Hj,1,962,962,new $CLJS.Q(null,3,5,$CLJS.R,[$CLJS.Hj,cQ,$CLJS.V($CLJS.vj,VP)],null),$CLJS.Lc,"Schema for a valid max clause.",$CLJS.n(xT)?xT.H:null])):null));return $CLJS.n(a)?a:$CLJS.Pr}(),xT],null),new $CLJS.Q(null,2,5,$CLJS.R,[function(){var a=gO.h($CLJS.qd("undefined"!==typeof $CLJS.dL&&"undefined"!==typeof eL&&"undefined"!==typeof fL&&
"undefined"!==typeof FT?new $CLJS.Hc(function(){return FT},$CLJS.pd(Hja,new $CLJS.h(null,1,[$CLJS.Cj,!0],null)),$CLJS.Kg([$CLJS.Pi,$CLJS.U,$CLJS.Lj,$CLJS.vi,gO,$CLJS.Ni,$CLJS.bj,$CLJS.Rj,cM,$CLJS.ui,$CLJS.Ij,$CLJS.Kj],[$CLJS.pd(MP,new $CLJS.h(null,1,[$CLJS.Ij,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),oN,"metabase/mbql/schema.cljc",18,$CLJS.gF,1,994,994,new $CLJS.Q(null,3,5,$CLJS.R,[$CLJS.gF,Uja,$CLJS.V($CLJS.vj,new $CLJS.Q(null,3,
5,$CLJS.R,[$CLJS.fr,Yja,TL],null))],null),$CLJS.Lc,"Schema for a valid metric clause.",$CLJS.n(FT)?FT.H:null])):null));return $CLJS.n(a)?a:oN}(),FT],null),new $CLJS.Q(null,2,5,$CLJS.R,[function(){var a=gO.h($CLJS.qd("undefined"!==typeof $CLJS.dL&&"undefined"!==typeof eL&&"undefined"!==typeof fL&&"undefined"!==typeof AT?new $CLJS.Hc(function(){return AT},$CLJS.pd(fka,new $CLJS.h(null,1,[$CLJS.Cj,!0],null)),$CLJS.Kg([eO,$CLJS.Pi,$CLJS.U,$CLJS.Lj,$CLJS.vi,gO,$CLJS.Ni,$CLJS.bj,$CLJS.Rj,cM,$CLJS.ui,$CLJS.Ij,
$CLJS.Kj],[new $CLJS.ch(null,new $CLJS.h(null,1,[$CLJS.FE,"null"],null),null),$CLJS.pd(MP,new $CLJS.h(null,1,[$CLJS.Ij,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),gN,"metabase/mbql/schema.cljc",62,$CLJS.sF,1,970,970,new $CLJS.Q(null,3,5,$CLJS.R,[$CLJS.sF,$CLJS.zn,$CLJS.V($CLJS.vj,XN)],null),$CLJS.Lc,"Schema for a valid share clause.",$CLJS.n(AT)?AT.H:null])):null));return $CLJS.n(a)?a:gN}(),AT],null),new $CLJS.Q(null,2,5,$CLJS.R,[function(){var a=
gO.h($CLJS.qd("undefined"!==typeof $CLJS.dL&&"undefined"!==typeof eL&&"undefined"!==typeof fL&&"undefined"!==typeof zT?new $CLJS.Hc(function(){return zT},$CLJS.pd(lja,new $CLJS.h(null,1,[$CLJS.Cj,!0],null)),$CLJS.Kg([eO,$CLJS.Pi,$CLJS.U,$CLJS.Lj,$CLJS.vi,gO,$CLJS.Ni,$CLJS.bj,$CLJS.Rj,cM,$CLJS.ui,$CLJS.Ij,$CLJS.Kj],[new $CLJS.ch(null,new $CLJS.h(null,1,[$CLJS.FE,"null"],null),null),$CLJS.pd(MP,new $CLJS.h(null,1,[$CLJS.Ij,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],
null)),UL,"metabase/mbql/schema.cljc",68,$CLJS.uF,1,967,967,new $CLJS.Q(null,3,5,$CLJS.R,[$CLJS.uF,$CLJS.zn,$CLJS.V($CLJS.vj,XN)],null),$CLJS.Lc,"Schema for a valid count-where clause.",$CLJS.n(zT)?zT.H:null])):null));return $CLJS.n(a)?a:UL}(),zT],null),new $CLJS.Q(null,2,5,$CLJS.R,[function(){var a=gO.h($CLJS.qd("undefined"!==typeof $CLJS.dL&&"undefined"!==typeof eL&&"undefined"!==typeof fL&&"undefined"!==typeof yT?new $CLJS.Hc(function(){return yT},$CLJS.pd(rla,new $CLJS.h(null,1,[$CLJS.Cj,!0],
null)),$CLJS.Kg([eO,$CLJS.Pi,$CLJS.U,$CLJS.Lj,$CLJS.vi,gO,$CLJS.Ni,$CLJS.bj,$CLJS.Rj,cM,$CLJS.ui,$CLJS.Ij,$CLJS.Kj],[new $CLJS.ch(null,new $CLJS.h(null,1,[$CLJS.FE,"null"],null),null),$CLJS.pd(MP,new $CLJS.h(null,1,[$CLJS.Ij,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),lO,"metabase/mbql/schema.cljc",66,$CLJS.EF,1,964,964,new $CLJS.Q(null,5,5,$CLJS.R,[$CLJS.EF,cQ,$CLJS.V($CLJS.vj,VP),$CLJS.zn,$CLJS.V($CLJS.vj,XN)],null),$CLJS.Lc,"Schema for a valid sum-where clause.",
$CLJS.n(yT)?yT.H:null])):null));return $CLJS.n(a)?a:lO}(),yT],null),new $CLJS.Q(null,2,5,$CLJS.R,[function(){var a=gO.h($CLJS.qd("undefined"!==typeof $CLJS.dL&&"undefined"!==typeof eL&&"undefined"!==typeof fL&&"undefined"!==typeof oT?new $CLJS.Hc(function(){return oT},$CLJS.pd(FL,new $CLJS.h(null,1,[$CLJS.Cj,!0],null)),$CLJS.Kg([eO,$CLJS.Pi,$CLJS.U,$CLJS.Lj,$CLJS.vi,gO,$CLJS.Ni,$CLJS.bj,$CLJS.Rj,cM,$CLJS.ui,$CLJS.Ij,$CLJS.Kj],[new $CLJS.ch(null,new $CLJS.h(null,1,[$CLJS.FE,"null"],null),null),$CLJS.pd(MP,
new $CLJS.h(null,1,[$CLJS.Ij,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),nO,"metabase/mbql/schema.cljc",61,$CLJS.UE,1,909,909,new $CLJS.Q(null,5,5,$CLJS.R,[$CLJS.UE,$CLJS.Xv,$CLJS.V($CLJS.vj,XM),$CLJS.Yi,$CLJS.V($CLJS.vj,$CLJS.V(eQ,GO))],null),$CLJS.Lc,"Schema for a valid case clause.",$CLJS.n(oT)?oT.H:null])):null));return $CLJS.n(a)?a:nO}(),oT],null),new $CLJS.Q(null,2,5,$CLJS.R,[function(){var a=gO.h($CLJS.qd("undefined"!==typeof $CLJS.dL&&
"undefined"!==typeof eL&&"undefined"!==typeof fL&&"undefined"!==typeof DT?new $CLJS.Hc(function(){return DT},$CLJS.pd(Xka,new $CLJS.h(null,1,[$CLJS.Cj,!0],null)),$CLJS.Kg([eO,$CLJS.Pi,$CLJS.U,$CLJS.Lj,$CLJS.vi,gO,$CLJS.Ni,$CLJS.bj,$CLJS.Rj,cM,$CLJS.ui,$CLJS.Ij,$CLJS.Kj],[new $CLJS.ch(null,new $CLJS.h(null,1,[$CLJS.hF,"null"],null),null),$CLJS.pd(MP,new $CLJS.h(null,1,[$CLJS.Ij,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),mQ,"metabase/mbql/schema.cljc",
68,$CLJS.yF,1,979,979,new $CLJS.Q(null,3,5,$CLJS.R,[$CLJS.yF,cQ,$CLJS.V($CLJS.vj,VP)],null),$CLJS.Lc,"Schema for a valid median clause.",$CLJS.n(DT)?DT.H:null])):null));return $CLJS.n(a)?a:mQ}(),DT],null),new $CLJS.Q(null,2,5,$CLJS.R,[function(){var a=gO.h($CLJS.qd("undefined"!==typeof $CLJS.dL&&"undefined"!==typeof eL&&"undefined"!==typeof fL&&"undefined"!==typeof ET?new $CLJS.Hc(function(){return ET},$CLJS.pd(rka,new $CLJS.h(null,1,[$CLJS.Cj,!0],null)),$CLJS.Kg([eO,$CLJS.Pi,$CLJS.U,$CLJS.Lj,$CLJS.vi,
gO,$CLJS.Ni,$CLJS.bj,$CLJS.Rj,cM,$CLJS.ui,$CLJS.Ij,$CLJS.Kj],[new $CLJS.ch(null,new $CLJS.h(null,1,[$CLJS.hF,"null"],null),null),$CLJS.pd(MP,new $CLJS.h(null,1,[$CLJS.Ij,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),KP,"metabase/mbql/schema.cljc",72,$CLJS.XE,1,982,982,new $CLJS.Q(null,5,5,$CLJS.R,[$CLJS.XE,cQ,$CLJS.V($CLJS.vj,VP),$CLJS.XE,$CLJS.V($CLJS.vj,OP)],null),$CLJS.Lc,"Schema for a valid percentile clause.",$CLJS.n(ET)?ET.H:null])):
null));return $CLJS.n(a)?a:KP}(),ET],null),new $CLJS.Q(null,2,5,$CLJS.R,[function(){var a=gO.h($CLJS.qd("undefined"!==typeof $CLJS.dL&&"undefined"!==typeof eL&&"undefined"!==typeof fL&&"undefined"!==typeof CT?new $CLJS.Hc(function(){return CT},$CLJS.pd(vja,new $CLJS.h(null,1,[$CLJS.Cj,!0],null)),$CLJS.Kg([$CLJS.Pi,$CLJS.U,$CLJS.Lj,$CLJS.vi,gO,$CLJS.Ni,$CLJS.bj,$CLJS.Rj,cM,$CLJS.ui,$CLJS.Ij,$CLJS.Kj],[$CLJS.pd(MP,new $CLJS.h(null,1,[$CLJS.Ij,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],
null)),xL,"metabase/mbql/schema.cljc",77,$CLJS.RE,1,976,976,new $CLJS.Q(null,3,5,$CLJS.R,[$CLJS.RE,cQ,$CLJS.V($CLJS.vj,VP)],null),$CLJS.Lc,"Schema for a valid var clause.",$CLJS.n(CT)?CT.H:null])):null));return $CLJS.n(a)?a:xL}(),CT],null),new $CLJS.Q(null,2,5,$CLJS.R,[function(){var a=gO.h($CLJS.qd("undefined"!==typeof $CLJS.dL&&"undefined"!==typeof eL&&"undefined"!==typeof fL&&"undefined"!==typeof rT?new $CLJS.Hc(function(){return rT},$CLJS.pd(hja,new $CLJS.h(null,1,[$CLJS.Cj,!0],null)),$CLJS.Kg([eO,
$CLJS.Pi,$CLJS.U,$CLJS.Lj,$CLJS.vi,gO,$CLJS.Ni,$CLJS.bj,$CLJS.Rj,gQ,cM,$CLJS.ui,$CLJS.Ij,$CLJS.Kj],[new $CLJS.ch(null,new $CLJS.h(null,1,[$CLJS.FE,"null"],null),null),$CLJS.pd(MP,new $CLJS.h(null,1,[$CLJS.Ij,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),YN,"metabase/mbql/schema.cljc",74,$CLJS.mF,1,947,947,!0,new $CLJS.Q(null,3,5,$CLJS.R,[$CLJS.mF,$CLJS.lF,$CLJS.V($CLJS.vj,$CLJS.V(eQ,DM))],null),$CLJS.Lc,"Schema for a valid cum-count clause.",
$CLJS.n(rT)?rT.H:null])):null));return $CLJS.n(a)?a:YN}(),rT],null),new $CLJS.Q(null,2,5,$CLJS.R,[function(){var a=gO.h($CLJS.qd("undefined"!==typeof $CLJS.dL&&"undefined"!==typeof eL&&"undefined"!==typeof fL&&"undefined"!==typeof qT?new $CLJS.Hc(function(){return qT},$CLJS.pd(Jja,new $CLJS.h(null,1,[$CLJS.Cj,!0],null)),$CLJS.Kg([eO,$CLJS.Pi,$CLJS.U,$CLJS.Lj,$CLJS.vi,gO,$CLJS.Ni,$CLJS.bj,$CLJS.Rj,gQ,cM,$CLJS.ui,$CLJS.Ij,$CLJS.Kj],[new $CLJS.ch(null,new $CLJS.h(null,1,[$CLJS.FE,"null"],null),null),
$CLJS.pd(MP,new $CLJS.h(null,1,[$CLJS.Ij,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),$CLJS.wi,"metabase/mbql/schema.cljc",70,$CLJS.Mw,1,946,946,!0,new $CLJS.Q(null,3,5,$CLJS.R,[$CLJS.Mw,$CLJS.lF,$CLJS.V($CLJS.vj,$CLJS.V(eQ,DM))],null),$CLJS.Lc,"Schema for a valid count clause.",$CLJS.n(qT)?qT.H:null])):null));return $CLJS.n(a)?a:$CLJS.wi}(),qT],null)]))],null)],null));
$CLJS.Y($O,aL($CLJS.sL,$CLJS.H(["aggregation",HP,"options",new $CLJS.Q(null,4,5,$CLJS.R,[$CLJS.Gj,new $CLJS.h(null,1,[$CLJS.ss,":aggregation-options options"],null),new $CLJS.Q(null,3,5,$CLJS.R,[$CLJS.U,new $CLJS.h(null,1,[$CLJS.Ar,!0],null),lR],null),new $CLJS.Q(null,3,5,$CLJS.R,[$CLJS.nD,new $CLJS.h(null,1,[$CLJS.Ar,!0],null),lR],null)],null)])));
$CLJS.Y(dQ,new $CLJS.Q(null,4,5,$CLJS.R,[$CLJS.lr,new $CLJS.h(null,2,[$CLJS.ss,"aggregation clause or numeric expression",$CLJS.Ji,function(a){return $CLJS.n($K($CLJS.sL,a))?$CLJS.sL:WM}],null),new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.sL,new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.W,$O],null)],null),new $CLJS.Q(null,2,5,$CLJS.R,[WM,HP],null)],null));$CLJS.Y(BL,aL($CLJS.iF,$CLJS.H(["field",MR])));var GT=new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.W,BL],null);$CLJS.Y(aO,aL($CLJS.bF,$CLJS.H(["field",MR])));
HT=new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.W,aO],null);
Jla=bL($CLJS.H([new $CLJS.Q(null,2,5,$CLJS.R,[function(){var a=gO.h($CLJS.qd("undefined"!==typeof $CLJS.dL&&"undefined"!==typeof eL&&"undefined"!==typeof fL&&"undefined"!==typeof GT?new $CLJS.Hc(function(){return GT},$CLJS.pd(ala,new $CLJS.h(null,1,[$CLJS.Cj,!0],null)),$CLJS.Kg([$CLJS.Pi,$CLJS.U,$CLJS.Lj,$CLJS.vi,gO,$CLJS.Ni,$CLJS.bj,$CLJS.Rj,cM,$CLJS.ui,$CLJS.Ij,$CLJS.Kj],[$CLJS.pd(MP,new $CLJS.h(null,1,[$CLJS.Ij,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),
HN,"metabase/mbql/schema.cljc",15,$CLJS.iF,1,1049,1049,new $CLJS.Q(null,3,5,$CLJS.R,[$CLJS.iF,$CLJS.lF,$CLJS.V($CLJS.vj,wQ)],null),$CLJS.Lc,"Schema for a valid asc clause.",$CLJS.n(GT)?GT.H:null])):null));return $CLJS.n(a)?a:HN}(),GT],null),new $CLJS.Q(null,2,5,$CLJS.R,[function(){var a=gO.h($CLJS.qd("undefined"!==typeof $CLJS.dL&&"undefined"!==typeof eL&&"undefined"!==typeof fL&&"undefined"!==typeof HT?new $CLJS.Hc(function(){return HT},$CLJS.pd(Sja,new $CLJS.h(null,1,[$CLJS.Cj,!0],null)),$CLJS.Kg([$CLJS.Pi,
$CLJS.U,$CLJS.Lj,$CLJS.vi,gO,$CLJS.Ni,$CLJS.bj,$CLJS.Rj,cM,$CLJS.ui,$CLJS.Ij,$CLJS.Kj],[$CLJS.pd(MP,new $CLJS.h(null,1,[$CLJS.Ij,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),CP,"metabase/mbql/schema.cljc",16,$CLJS.bF,1,1050,1050,new $CLJS.Q(null,3,5,$CLJS.R,[$CLJS.bF,$CLJS.lF,$CLJS.V($CLJS.vj,wQ)],null),$CLJS.Lc,"Schema for a valid desc clause.",$CLJS.n(HT)?HT.H:null])):null));return $CLJS.n(a)?a:CP}(),HT],null)]));
IT=new $CLJS.Q(null,5,5,$CLJS.R,[$CLJS.Gj,new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.aj,new $CLJS.Q(null,7,5,$CLJS.R,[$CLJS.cr,$CLJS.EL,$CLJS.tM,$CLJS.EE,$CLJS.Os,$CLJS.rA,$CLJS.zO],null)],null),new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.U,lR],null),new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.nD,lR],null),new $CLJS.Q(null,3,5,$CLJS.R,[$CLJS.Si,new $CLJS.h(null,1,[$CLJS.Ar,!0],null),lR],null)],null);
Kla=new $CLJS.Q(null,3,5,$CLJS.R,[$CLJS.rs,IT,new $CLJS.Q(null,5,5,$CLJS.R,[$CLJS.Gj,new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.aj,new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.Nj,$CLJS.EL],null)],null),new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.qL,lR],null),new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.RO,oR],null),new $CLJS.Q(null,3,5,$CLJS.R,[$CLJS.SO,new $CLJS.h(null,1,[$CLJS.Ar,!0],null),oR],null)],null)],null);
Lla=new $CLJS.Q(null,3,5,$CLJS.R,[$CLJS.rs,IT,new $CLJS.Q(null,3,5,$CLJS.R,[$CLJS.Gj,new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.aj,new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.Nj,$CLJS.tM],null)],null),new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.$P,oR],null)],null)],null);
JT=new $CLJS.Q(null,3,5,$CLJS.R,[$CLJS.rs,IT,new $CLJS.Q(null,3,5,$CLJS.R,[$CLJS.Gj,new $CLJS.Q(null,3,5,$CLJS.R,[$CLJS.ei,new $CLJS.h(null,1,[$CLJS.Ar,!0],null),$CLJS.wr],null),new $CLJS.Q(null,3,5,$CLJS.R,[$CLJS.VM,new $CLJS.h(null,1,[$CLJS.Ar,!0],null),$CLJS.vr],null)],null)],null);Mla=new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.W,nQ],null);
Nla=new $CLJS.Q(null,3,5,$CLJS.R,[$CLJS.rs,JT,new $CLJS.Q(null,5,5,$CLJS.R,[$CLJS.Gj,new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.aj,new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.Nj,$CLJS.EE],null)],null),new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.EE,JR],null),new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.OM,new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.W,XL],null)],null),new $CLJS.Q(null,3,5,$CLJS.R,[$CLJS.Yi,new $CLJS.h(null,1,[$CLJS.Ar,!0],null),new $CLJS.Q(null,3,5,$CLJS.R,[$CLJS.kr,$CLJS.Qi,$CLJS.wr],null)],null)],null)],null);
$CLJS.KT=new $CLJS.ch(null,new $CLJS.h(null,4,[$CLJS.zO,null,$CLJS.Os,null,$CLJS.vr,null,$CLJS.rA,null],null),null);Ola=$CLJS.gg.g(new $CLJS.Q(null,1,5,$CLJS.R,[$CLJS.cr],null),$CLJS.KT);
$CLJS.Y(vP,new $CLJS.Q(null,6,5,$CLJS.R,[$CLJS.lr,new $CLJS.h(null,1,[$CLJS.Ji,$CLJS.aj],null),new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.EE,Nla],null),new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.EL,Kla],null),new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.tM,Lla],null),new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.Yn,new $CLJS.Q(null,3,5,$CLJS.R,[$CLJS.rs,JT,new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.Gj,new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.aj,Ola],null)],null)],null)],null)],null));
var LT=new $CLJS.Q(null,3,5,$CLJS.R,[$CLJS.Gj,new $CLJS.Q(null,3,5,$CLJS.R,[$CLJS.DP,new $CLJS.h(null,1,[$CLJS.Ar,!0],null),new $CLJS.Q(null,3,5,$CLJS.R,[$CLJS.mr,new $CLJS.Q(null,3,5,$CLJS.R,[$CLJS.kr,lR,new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.W,vP],null)],null),new $CLJS.Q(null,3,5,$CLJS.R,[$CLJS.Mi,new $CLJS.h(null,1,[$CLJS.ss,"keys in template tag map must match the :name of their values"],null),function(a){return $CLJS.Te(function(b){var c=$CLJS.I(b,0,null);b=$CLJS.I(b,1,null);return $CLJS.E.g(c,
$CLJS.U.h(b))},a)}],null)],null)],null),new $CLJS.Q(null,3,5,$CLJS.R,[$CLJS.jN,new $CLJS.h(null,1,[$CLJS.Ar,!0],null),new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.er,lR],null)],null)],null),Pla=new $CLJS.Q(null,3,5,$CLJS.R,[$CLJS.rs,LT,new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.Gj,new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.HE,$CLJS.wr],null)],null)],null),MT=new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.W,dP],null),NT=new $CLJS.Q(null,4,5,$CLJS.R,[$CLJS.lr,new $CLJS.h(null,1,[$CLJS.Ji,function(a){return $CLJS.n($CLJS.gD($CLJS.yd,
$CLJS.gP)(a))?$CLJS.gP:$CLJS.mD}],null),new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.gP,new $CLJS.Q(null,3,5,$CLJS.R,[$CLJS.rs,LT,new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.Gj,new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.gP,$CLJS.wr],null)],null)],null)],null),new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.mD,MT],null)],null),OT=new $CLJS.Q(null,6,5,$CLJS.R,[$CLJS.Gj,new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.U,lR],null),new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.bC,mR],null),new $CLJS.Q(null,2,5,$CLJS.R,[zka,lR],null),new $CLJS.Q(null,3,5,$CLJS.R,
[$CLJS.BN,new $CLJS.h(null,1,[$CLJS.Ar,!0],null),new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.er,nR],null)],null),new $CLJS.Q(null,3,5,$CLJS.R,[$CLJS.QM,new $CLJS.h(null,1,[$CLJS.Ar,!0],null),new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.er,$CLJS.Gj],null)],null)],null),PT=new $CLJS.Q(null,3,5,$CLJS.R,[$CLJS.fr,Bla,new $CLJS.Q(null,3,5,$CLJS.R,[$CLJS.gr,new $CLJS.h(null,1,[$CLJS.ss,"'card__\x3cid\x3e' string Table ID"],null),/^card__[1-9]\d*$/],null)],null),Qla=$CLJS.gg.g(new $CLJS.Q(null,1,5,$CLJS.R,[$CLJS.cr],null),
new $CLJS.ch(null,new $CLJS.h(null,4,[$CLJS.iE,null,$CLJS.SD,null,$CLJS.bE,null,$CLJS.fE,null],null),null)),QT=new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.W,lQ],null);
$CLJS.Y(fN,new $CLJS.Q(null,3,5,$CLJS.R,[$CLJS.mr,new $CLJS.Q(null,9,5,$CLJS.R,[$CLJS.Gj,new $CLJS.Q(null,3,5,$CLJS.R,[$CLJS.cO,new $CLJS.h(null,1,[$CLJS.Ar,!0],null),PT],null),new $CLJS.Q(null,3,5,$CLJS.R,[$CLJS.FP,new $CLJS.h(null,1,[$CLJS.Ar,!0],null),NT],null),new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.NQ,$CLJS.PS],null),new $CLJS.Q(null,3,5,$CLJS.R,[$CLJS.ED,new $CLJS.h(null,1,[$CLJS.Ar,!0],null),Qla],null),new $CLJS.Q(null,3,5,$CLJS.R,[$CLJS.TD,new $CLJS.h(null,1,[$CLJS.Ar,!0],null),new $CLJS.Q(null,
4,5,$CLJS.R,[$CLJS.fr,new $CLJS.h(null,1,[$CLJS.ss,"Valid join `:fields`: `:all`, `:none`, or a sequence of `:field` clauses that have `:join-alias`."],null),new $CLJS.Q(null,3,5,$CLJS.R,[$CLJS.cr,$CLJS.rx,$CLJS.$y],null),QT],null)],null),new $CLJS.Q(null,3,5,$CLJS.R,[$CLJS.XD,new $CLJS.h(null,1,[$CLJS.Ar,!0],null),lR],null),new $CLJS.Q(null,3,5,$CLJS.R,[$CLJS.WJ,new $CLJS.h(null,1,[$CLJS.Ar,!0],null),new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.er,qR],null)],null),new $CLJS.Q(null,3,5,$CLJS.R,[$CLJS.PN,new $CLJS.h(null,
1,[$CLJS.Ar,!0],null),new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.er,new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.kj,OT],null)],null)],null)],null),new $CLJS.Q(null,3,5,$CLJS.R,[$CLJS.Mi,new $CLJS.h(null,1,[$CLJS.ss,"Joins must have either a `source-table` or `source-query`, but not both."],null),$CLJS.gD($CLJS.uz($CLJS.cO,$CLJS.FP),$CLJS.Ve($CLJS.gD($CLJS.cO,$CLJS.FP)))],null)],null));var Rla=$CLJS.R,RT;var ST=new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.kj,new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.W,fN],null)],null);
if($CLJS.xd(ST)&&$CLJS.E.g($CLJS.z(ST),$CLJS.kj)){var TT=$CLJS.y(ST);$CLJS.z(TT);var UT=$CLJS.B(TT),Sla=$CLJS.yd($CLJS.z(UT))?UT:$CLJS.ge(null,UT),VT=$CLJS.y(Sla),Tla=$CLJS.z(VT),Ula=$CLJS.B(VT);RT=$CLJS.gg.g(new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.kj,$CLJS.T.j(Tla,$CLJS.ln,1)],null),Ula)}else RT=new $CLJS.Q(null,3,5,$CLJS.R,[$CLJS.mr,ST,new $CLJS.Q(null,3,5,$CLJS.R,[$CLJS.Mi,new $CLJS.h(null,1,[$CLJS.ss,"non-empty"],null),$CLJS.y],null)],null);
$CLJS.Y(hM,new $CLJS.Q(null,3,5,Rla,[$CLJS.mr,RT,new $CLJS.Q(null,3,5,$CLJS.R,[$CLJS.Mi,new $CLJS.h(null,1,[$CLJS.ss,"All join aliases must be unique."],null),function(a){return $CLJS.MK($CLJS.nf($CLJS.Ya,$CLJS.kf.g($CLJS.XD,a)))}],null)],null));var Vla=new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.W,hM],null);
$CLJS.Y(lQ,new $CLJS.Q(null,3,5,$CLJS.R,[$CLJS.Uk,new $CLJS.h(null,1,[$CLJS.ss,"Distinct, non-empty sequence of Field clauses"],null),cL(new $CLJS.Q(null,3,5,$CLJS.R,[$CLJS.kj,new $CLJS.h(null,1,[$CLJS.ln,1],null),$CLJS.KR],null))],null));
$CLJS.Y(dP,new $CLJS.Q(null,4,5,$CLJS.R,[$CLJS.mr,new $CLJS.Q(null,13,5,$CLJS.R,[$CLJS.Gj,new $CLJS.Q(null,3,5,$CLJS.R,[$CLJS.FP,new $CLJS.h(null,1,[$CLJS.Ar,!0],null),NT],null),new $CLJS.Q(null,3,5,$CLJS.R,[$CLJS.cO,new $CLJS.h(null,1,[$CLJS.Ar,!0],null),PT],null),new $CLJS.Q(null,3,5,$CLJS.R,[$CLJS.aF,new $CLJS.h(null,1,[$CLJS.Ar,!0],null),new $CLJS.Q(null,3,5,$CLJS.R,[$CLJS.kj,new $CLJS.h(null,1,[$CLJS.ln,1],null),$CLJS.YR],null)],null),new $CLJS.Q(null,3,5,$CLJS.R,[$CLJS.$E,new $CLJS.h(null,1,
[$CLJS.Ar,!0],null),new $CLJS.Q(null,3,5,$CLJS.R,[$CLJS.kj,new $CLJS.h(null,1,[$CLJS.ln,1],null),$CLJS.KR],null)],null),new $CLJS.Q(null,3,5,$CLJS.R,[$CLJS.XO,new $CLJS.h(null,1,[$CLJS.Ar,!0],null),new $CLJS.Q(null,3,5,$CLJS.R,[$CLJS.kr,lR,$CLJS.pT],null)],null),new $CLJS.Q(null,3,5,$CLJS.R,[$CLJS.TD,new $CLJS.h(null,1,[$CLJS.Ar,!0],null),QT],null),new $CLJS.Q(null,3,5,$CLJS.R,[$CLJS.PE,new $CLJS.h(null,1,[$CLJS.Ar,!0],null),$CLJS.PS],null),new $CLJS.Q(null,3,5,$CLJS.R,[$CLJS.iR,new $CLJS.h(null,
1,[$CLJS.Ar,!0],null),pR],null),new $CLJS.Q(null,3,5,$CLJS.R,[$CLJS.LQ,new $CLJS.h(null,1,[$CLJS.Ar,!0],null),cL(new $CLJS.Q(null,3,5,$CLJS.R,[$CLJS.kj,new $CLJS.h(null,1,[$CLJS.ln,1],null),Jla],null))],null),new $CLJS.Q(null,3,5,$CLJS.R,[hP,new $CLJS.h(null,1,[$CLJS.Ar,!0],null),new $CLJS.Q(null,3,5,$CLJS.R,[$CLJS.Gj,new $CLJS.Q(null,2,5,$CLJS.R,[hP,oR],null),new $CLJS.Q(null,2,5,$CLJS.R,[Aja,oR],null)],null)],null),new $CLJS.Q(null,3,5,$CLJS.R,[$CLJS.BM,new $CLJS.h(null,1,[$CLJS.Ar,!0],null),Vla],
null),new $CLJS.Q(null,3,5,$CLJS.R,[$CLJS.PN,new $CLJS.h(null,1,[$CLJS.Ar,!0],null),new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.er,new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.kj,OT],null)],null)],null)],null),new $CLJS.Q(null,3,5,$CLJS.R,[$CLJS.Mi,new $CLJS.h(null,1,[$CLJS.ss,"Query must specify either `:source-table` or `:source-query`, but not both."],null),function(a){return $CLJS.E.g(1,$CLJS.D($CLJS.Hl(a,new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.FP,$CLJS.cO],null))))}],null),new $CLJS.Q(null,3,5,$CLJS.R,[$CLJS.Mi,
new $CLJS.h(null,1,[$CLJS.ss,"Fields specified in `:breakout` should not be specified in `:fields`; this is implied."],null),function(a){var b=$CLJS.O(a);a=$CLJS.J.g(b,$CLJS.$E);b=$CLJS.J.g(b,$CLJS.TD);return $CLJS.ud($CLJS.bt.g($CLJS.hh(a),$CLJS.hh(b)))}],null)],null));
$CLJS.WT=$CLJS.Kg([$CLJS.DF,$CLJS.zO,bN,NM,QN,ZQ,wN,$CLJS.YQ,$CLJS.Os,vN,LL,SP,OQ,$CLJS.aM,KQ,ZM,$CLJS.VN,tN,$CLJS.Si,$CLJS.sN,tL,$CLJS.xM,$CLJS.rN,uO,$CLJS.vr,$CLJS.rA,nN],[new $CLJS.h(null,1,[GN,new $CLJS.ch(null,new $CLJS.h(null,5,[$CLJS.DF,null,$CLJS.zO,null,$CLJS.Os,null,$CLJS.vr,null,$CLJS.rA,null],null),null)],null),new $CLJS.h(null,2,[$CLJS.aj,$CLJS.zO,GN,new $CLJS.ch(null,new $CLJS.h(null,5,[$CLJS.DF,null,$CLJS.zO,null,$CLJS.YQ,null,$CLJS.VN,null,$CLJS.Si,null],null),null)],null),new $CLJS.h(null,
3,[$CLJS.aj,$CLJS.Bj,$CLJS.vD,aQ,GN,new $CLJS.ch(null,new $CLJS.h(null,1,[bN,null],null),null)],null),new $CLJS.h(null,3,[$CLJS.aj,dR,$CLJS.vD,aQ,GN,new $CLJS.ch(null,new $CLJS.h(null,5,[$CLJS.DF,null,NM,null,$CLJS.Os,null,$CLJS.Si,null,tL,null],null),null)],null),new $CLJS.h(null,3,[$CLJS.aj,$CLJS.Bj,$CLJS.vD,PL,GN,new $CLJS.ch(null,new $CLJS.h(null,1,[QN,null],null),null)],null),new $CLJS.h(null,1,[GN,new $CLJS.ch(null,new $CLJS.h(null,1,[ZQ,null],null),null)],null),new $CLJS.h(null,3,[$CLJS.aj,
dR,$CLJS.vD,Rka,GN,new $CLJS.ch(null,new $CLJS.h(null,1,[wN,null],null),null)],null),new $CLJS.h(null,2,[$CLJS.aj,$CLJS.zO,GN,new $CLJS.ch(null,new $CLJS.h(null,1,[$CLJS.YQ,null],null),null)],null),new $CLJS.h(null,2,[$CLJS.aj,dR,GN,new $CLJS.ch(null,new $CLJS.h(null,5,[$CLJS.DF,null,NM,null,$CLJS.Os,null,$CLJS.Si,null,tL,null],null),null)],null),new $CLJS.h(null,3,[$CLJS.aj,dR,$CLJS.vD,PL,GN,new $CLJS.ch(null,new $CLJS.h(null,1,[vN,null],null),null)],null),new $CLJS.h(null,1,[GN,new $CLJS.ch(null,
new $CLJS.h(null,1,[LL,null],null),null)],null),new $CLJS.h(null,3,[$CLJS.aj,$CLJS.Bj,$CLJS.vD,aQ,GN,new $CLJS.ch(null,new $CLJS.h(null,8,[$CLJS.DF,null,ZQ,null,LL,null,SP,null,tN,null,$CLJS.Si,null,tL,null,$CLJS.rA,null],null),null)],null),new $CLJS.h(null,3,[$CLJS.aj,$CLJS.Bj,$CLJS.vD,PL,GN,new $CLJS.ch(null,new $CLJS.h(null,1,[OQ,null],null),null)],null),new $CLJS.h(null,2,[$CLJS.aj,$CLJS.zO,GN,new $CLJS.ch(null,new $CLJS.h(null,2,[$CLJS.YQ,null,$CLJS.aM,null],null),null)],null),new $CLJS.h(null,
3,[$CLJS.aj,$CLJS.Bj,$CLJS.vD,PL,GN,new $CLJS.ch(null,new $CLJS.h(null,1,[KQ,null],null),null)],null),new $CLJS.h(null,3,[$CLJS.aj,$CLJS.Bj,$CLJS.vD,PL,GN,new $CLJS.ch(null,new $CLJS.h(null,1,[ZM,null],null),null)],null),new $CLJS.h(null,2,[$CLJS.aj,$CLJS.zO,GN,new $CLJS.ch(null,new $CLJS.h(null,5,[$CLJS.DF,null,$CLJS.zO,null,$CLJS.YQ,null,$CLJS.VN,null,$CLJS.Si,null],null),null)],null),new $CLJS.h(null,1,[GN,new $CLJS.ch(null,new $CLJS.h(null,1,[tN,null],null),null)],null),new $CLJS.h(null,1,[GN,
new $CLJS.ch(null,new $CLJS.h(null,1,[$CLJS.Si,null],null),null)],null),new $CLJS.h(null,2,[$CLJS.aj,$CLJS.zO,GN,new $CLJS.ch(null,new $CLJS.h(null,2,[$CLJS.YQ,null,$CLJS.sN,null],null),null)],null),new $CLJS.h(null,1,[GN,new $CLJS.ch(null,new $CLJS.h(null,1,[tL,null],null),null)],null),new $CLJS.h(null,2,[$CLJS.aj,$CLJS.zO,GN,new $CLJS.ch(null,new $CLJS.h(null,2,[$CLJS.YQ,null,$CLJS.xM,null],null),null)],null),new $CLJS.h(null,2,[$CLJS.aj,$CLJS.zO,GN,new $CLJS.ch(null,new $CLJS.h(null,2,[$CLJS.YQ,
null,$CLJS.rN,null],null),null)],null),new $CLJS.h(null,3,[$CLJS.aj,dR,$CLJS.vD,aQ,GN,new $CLJS.ch(null,new $CLJS.h(null,1,[uO,null],null),null)],null),new $CLJS.h(null,2,[$CLJS.aj,$CLJS.vr,GN,new $CLJS.ch(null,new $CLJS.h(null,3,[$CLJS.DF,null,$CLJS.Si,null,$CLJS.vr,null],null),null)],null),new $CLJS.h(null,2,[$CLJS.aj,$CLJS.Bj,GN,new $CLJS.ch(null,new $CLJS.h(null,8,[$CLJS.DF,null,ZQ,null,LL,null,SP,null,tN,null,$CLJS.Si,null,tL,null,$CLJS.rA,null],null),null)],null),new $CLJS.h(null,3,[$CLJS.aj,
dR,$CLJS.vD,PL,GN,new $CLJS.ch(null,new $CLJS.h(null,1,[nN,null],null),null)],null)]);$CLJS.Y(nQ,$CLJS.gg.g(new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.cr,new $CLJS.h(null,1,[$CLJS.ss,"valid parameter type"],null)],null),$CLJS.Zg($CLJS.WT)));$CLJS.Y(XL,$CLJS.gg.g(new $CLJS.Q(null,3,5,$CLJS.R,[$CLJS.cr,new $CLJS.h(null,1,[$CLJS.ss,"valid template tag widget type"],null),$CLJS.$y],null),$CLJS.Zg($CLJS.WT)));
$CLJS.Y(AP,aL(rja,$CLJS.H(["tag-name",new $CLJS.Q(null,3,5,$CLJS.R,[$CLJS.fr,lR,new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.Gj,new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.Si,lR],null)],null)],null)])));var XT=new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.W,AP],null);$CLJS.Y(wL,aL($CLJS.EE,$CLJS.H(["target",new $CLJS.Q(null,3,5,$CLJS.R,[$CLJS.fr,$CLJS.KR,XT],null)])));var YT=new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.W,wL],null);$CLJS.Y(rM,aL(qN,$CLJS.H(["target",XT])));
var ZT=new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.W,rM],null),Wla=new $CLJS.Q(null,3,5,$CLJS.R,[$CLJS.fr,$CLJS.KR,bL($CLJS.H([new $CLJS.Q(null,2,5,$CLJS.R,[function(){var a=gO.h($CLJS.qd("undefined"!==typeof $CLJS.dL&&"undefined"!==typeof eL&&"undefined"!==typeof fL&&"undefined"!==typeof YT?new $CLJS.Hc(function(){return YT},$CLJS.pd(pka,new $CLJS.h(null,1,[$CLJS.Cj,!0],null)),$CLJS.Kg([$CLJS.Pi,$CLJS.U,$CLJS.Lj,$CLJS.vi,gO,$CLJS.Ni,$CLJS.bj,$CLJS.Rj,cM,$CLJS.ui,$CLJS.Ij,$CLJS.Kj],[$CLJS.pd(MP,new $CLJS.h(null,
1,[$CLJS.Ij,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),lP,"metabase/mbql/schema.cljc",21,$CLJS.EE,1,1612,1612,new $CLJS.Q(null,3,5,$CLJS.R,[$CLJS.EE,$CLJS.mI,$CLJS.V($CLJS.vj,new $CLJS.Q(null,3,5,$CLJS.R,[$CLJS.fr,DM,FN],null))],null),$CLJS.Lc,"Schema for a valid dimension clause.",$CLJS.n(YT)?YT.H:null])):null));return $CLJS.n(a)?a:lP}(),YT],null),new $CLJS.Q(null,2,5,$CLJS.R,[function(){var a=gO.h($CLJS.qd("undefined"!==typeof $CLJS.dL&&
"undefined"!==typeof eL&&"undefined"!==typeof fL&&"undefined"!==typeof ZT?new $CLJS.Hc(function(){return ZT},$CLJS.pd(Fka,new $CLJS.h(null,1,[$CLJS.Cj,!0],null)),$CLJS.Kg([$CLJS.Pi,$CLJS.U,$CLJS.Lj,$CLJS.vi,gO,$CLJS.Ni,$CLJS.bj,$CLJS.Rj,cM,$CLJS.ui,$CLJS.Ij,$CLJS.Kj],[$CLJS.pd(MP,new $CLJS.h(null,1,[$CLJS.Ij,"Schema for validating a *normalized* MBQL query. This is also the definitive grammar for MBQL, wow!"],null)),eR,"metabase/mbql/schema.cljc",20,qN,1,1615,1615,new $CLJS.Q(null,3,5,$CLJS.R,[qN,
$CLJS.mI,$CLJS.V($CLJS.vj,FN)],null),$CLJS.Lc,"Schema for a valid variable clause.",$CLJS.n(ZT)?ZT.H:null])):null));return $CLJS.n(a)?a:eR}(),ZT],null)]))],null),XK=new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.W,dM],null);
$CLJS.Y(dM,new $CLJS.Q(null,3,5,$CLJS.R,[$CLJS.mr,function(a){return new $CLJS.Q(null,4,5,$CLJS.R,[$CLJS.mr,a,new $CLJS.Q(null,3,5,$CLJS.R,[$CLJS.Mi,new $CLJS.h(null,1,[$CLJS.ss,"Query must specify either `:native` or `:query`, but not both."],null),$CLJS.gD($CLJS.uz($CLJS.gP,$CLJS.HE),$CLJS.Ve($CLJS.gD($CLJS.gP,$CLJS.HE)))],null),new $CLJS.Q(null,3,5,$CLJS.R,[$CLJS.Mi,new $CLJS.h(null,1,[$CLJS.ss,"Native queries must specify `:native`; MBQL queries must specify `:query`."],null),function(b){var c=
$CLJS.O(b);b=$CLJS.J.g(c,$CLJS.gP);var d=$CLJS.J.g(c,$CLJS.HE);c=$CLJS.J.g(c,$CLJS.aj);c=c instanceof $CLJS.M?c.S:null;switch(c){case "native":return b;case "query":return d;default:throw Error(["No matching clause: ",$CLJS.p.h(c)].join(""));}}],null)],null)}(new $CLJS.Q(null,10,5,$CLJS.R,[$CLJS.Gj,new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.SO,new $CLJS.Q(null,4,5,$CLJS.R,[$CLJS.fr,new $CLJS.h(null,1,[$CLJS.ss,"valid Database ID"],null),new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.W,$CLJS.$J],null),new $CLJS.Q(null,
2,5,$CLJS.R,[$CLJS.W,$CLJS.TJ],null)],null)],null),new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.aj,new $CLJS.Q(null,3,5,$CLJS.R,[$CLJS.cr,$CLJS.HE,$CLJS.gP],null)],null),new $CLJS.Q(null,3,5,$CLJS.R,[$CLJS.gP,new $CLJS.h(null,1,[$CLJS.Ar,!0],null),Pla],null),new $CLJS.Q(null,3,5,$CLJS.R,[$CLJS.HE,new $CLJS.h(null,1,[$CLJS.Ar,!0],null),MT],null),new $CLJS.Q(null,3,5,$CLJS.R,[$CLJS.sM,new $CLJS.h(null,1,[$CLJS.Ar,!0],null),new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.er,new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.kj,new $CLJS.Q(null,
8,5,$CLJS.R,[$CLJS.Gj,new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.aj,Mla],null),new $CLJS.Q(null,3,5,$CLJS.R,[$CLJS.Si,new $CLJS.h(null,1,[$CLJS.Ar,!0],null),lR],null),new $CLJS.Q(null,3,5,$CLJS.R,[$CLJS.mI,new $CLJS.h(null,1,[$CLJS.Ar,!0],null),Wla],null),new $CLJS.Q(null,3,5,$CLJS.R,[$CLJS.nj,new $CLJS.h(null,1,[$CLJS.Ar,!0],null),$CLJS.wr],null),new $CLJS.Q(null,3,5,$CLJS.R,[$CLJS.U,new $CLJS.h(null,1,[$CLJS.Ar,!0],null),lR],null),new $CLJS.Q(null,3,5,$CLJS.R,[xja,new $CLJS.h(null,1,[$CLJS.Ar,!0],null),
lR],null),new $CLJS.Q(null,3,5,$CLJS.R,[$CLJS.ei,new $CLJS.h(null,1,[$CLJS.Ar,!0],null),$CLJS.wr],null)],null)],null)],null)],null),new $CLJS.Q(null,3,5,$CLJS.R,[$CLJS.YJ,new $CLJS.h(null,1,[$CLJS.Ar,!0],null),new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.er,new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.Gj,new $CLJS.Q(null,3,5,$CLJS.R,[pla,new $CLJS.h(null,1,[$CLJS.Ar,!0],null),yR],null)],null)],null)],null),new $CLJS.Q(null,3,5,$CLJS.R,[oka,new $CLJS.h(null,1,[$CLJS.Ar,!0],null),new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.er,
new $CLJS.Q(null,3,5,$CLJS.R,[$CLJS.mr,new $CLJS.Q(null,3,5,$CLJS.R,[$CLJS.Gj,new $CLJS.Q(null,3,5,$CLJS.R,[mO,new $CLJS.h(null,1,[$CLJS.Ar,!0],null),pR],null),new $CLJS.Q(null,3,5,$CLJS.R,[WL,new $CLJS.h(null,1,[$CLJS.Ar,!0],null),pR],null)],null),new $CLJS.Q(null,3,5,$CLJS.R,[$CLJS.Mi,new $CLJS.h(null,1,[$CLJS.ss,"max-results-bare-rows must be less or equal to than max-results"],null),function(a){var b=$CLJS.O(a);a=$CLJS.J.g(b,mO);b=$CLJS.J.g(b,WL);return $CLJS.Wa($CLJS.n(a)?b:a)?!0:a>=b}],null)],
null)],null)],null),new $CLJS.Q(null,3,5,$CLJS.R,[eka,new $CLJS.h(null,1,[$CLJS.Ar,!0],null),new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.er,new $CLJS.Q(null,8,5,$CLJS.R,[$CLJS.Gj,new $CLJS.Q(null,3,5,$CLJS.R,[$ka,new $CLJS.h(null,1,[$CLJS.Ar,!0],null),$CLJS.vr],null),new $CLJS.Q(null,3,5,$CLJS.R,[tja,new $CLJS.h(null,1,[$CLJS.Ar,!0],null),$CLJS.vr],null),new $CLJS.Q(null,3,5,$CLJS.R,[cja,new $CLJS.h(null,1,[$CLJS.Ar,!0],null),$CLJS.vr],null),new $CLJS.Q(null,3,5,$CLJS.R,[zja,new $CLJS.h(null,1,[$CLJS.Ar,
!0],null),$CLJS.vr],null),new $CLJS.Q(null,3,5,$CLJS.R,[Ska,new $CLJS.h(null,1,[$CLJS.Ar,!0],null),new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.er,$CLJS.vr],null)],null),new $CLJS.Q(null,3,5,$CLJS.R,[eja,new $CLJS.h(null,1,[$CLJS.Ar,!0],null),new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.er,$CLJS.vr],null)],null),new $CLJS.Q(null,3,5,$CLJS.R,[fla,new $CLJS.h(null,1,[$CLJS.Ar,!0],null),new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.er,$CLJS.vr],null)],null)],null)],null)],null),new $CLJS.Q(null,3,5,$CLJS.R,[$CLJS.Bx,new $CLJS.h(null,
1,[$CLJS.Ar,!0],null),new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.er,new $CLJS.Q(null,11,5,$CLJS.R,[$CLJS.Gj,new $CLJS.Q(null,3,5,$CLJS.R,[$CLJS.nM,new $CLJS.h(null,1,[$CLJS.Ar,!0],null),new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.er,new $CLJS.Q(null,18,5,$CLJS.R,[$CLJS.cr,Eka,Bka,$CLJS.jN,Dja,zla,Gka,Vja,qka,Nja,uja,Rja,Pka,cka,oja,Eja,yla,vla],null)],null)],null),new $CLJS.Q(null,3,5,$CLJS.R,[Vka,new $CLJS.h(null,1,[$CLJS.Ar,!0],null),new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.er,oR],null)],null),new $CLJS.Q(null,3,5,
$CLJS.R,[$ja,new $CLJS.h(null,1,[$CLJS.Ar,!0],null),new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.er,oR],null)],null),new $CLJS.Q(null,3,5,$CLJS.R,[$CLJS.$P,new $CLJS.h(null,1,[$CLJS.Ar,!0],null),new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.er,Ala],null)],null),new $CLJS.Q(null,3,5,$CLJS.R,[qla,new $CLJS.h(null,1,[$CLJS.Ar,!0],null),new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.er,lR],null)],null),new $CLJS.Q(null,3,5,$CLJS.R,[bka,new $CLJS.h(null,1,[$CLJS.Ar,!0],null),new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.er,oR],null)],null),
new $CLJS.Q(null,3,5,$CLJS.R,[ola,new $CLJS.h(null,1,[$CLJS.Ar,!0],null),new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.er,new $CLJS.Q(null,3,5,$CLJS.R,[$CLJS.kr,$CLJS.wr,$CLJS.wr],null)],null)],null),new $CLJS.Q(null,3,5,$CLJS.R,[Wja,new $CLJS.h(null,1,[$CLJS.Ar,!0],null),new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.er,oR],null)],null),new $CLJS.Q(null,3,5,$CLJS.R,[$CLJS.mN,new $CLJS.h(null,1,[$CLJS.Ar,!0],null),new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.er,new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.kj,new $CLJS.Q(null,3,5,$CLJS.R,
[$CLJS.kr,$CLJS.wr,$CLJS.wr],null)],null)],null)],null),new $CLJS.Q(null,3,5,$CLJS.R,[$CLJS.FJ,new $CLJS.h(null,1,[$CLJS.Ar,!0],null),new $CLJS.Q(null,2,5,$CLJS.R,[$CLJS.er,$CLJS.wr],null)],null)],null)],null)],null)],null)),new $CLJS.Q(null,3,5,$CLJS.R,[$CLJS.Mi,new $CLJS.h(null,1,[$CLJS.ss,"`:source-metadata` should be added in the same level as `:source-query` (i.e., the 'inner' MBQL query.)"],null),$CLJS.Ve($CLJS.PN)],null)],null));var $T=$CLJS.WK(XK);
(function(){var a=Yia();return function(b){if($CLJS.n($T.h?$T.h(b):$T.call(null,b)))return b;b=a.h?a.h(b):a.call(null,b);var c=$CLJS.TK(b);throw $CLJS.ji($CLJS.iD("Invalid query: {0}",$CLJS.H([$CLJS.Oh.l($CLJS.H([c]))])),new $CLJS.h(null,2,[$CLJS.xx,c,jka,b],null));}})();